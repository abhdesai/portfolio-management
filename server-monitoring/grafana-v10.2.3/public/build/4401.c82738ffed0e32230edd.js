(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[4401],{43787:(q,w,o)=>{var y;y={value:!0};var k=o(11512),p=o(42202),I=o(85960),_=o(56375);function r(u){return u&&typeof u=="object"&&"default"in u?u:{default:u}}var l=r(I);const M={JWT:"jwt",GCE:"gce"},ee="Configuration help box",te="Configuration drop zone",V="Configuration text area",z="Paste JWT button",ae="JWT form",re="JWT button",se="GCE button",ne="Private Key Path Input",F="Private Key Input",Q="Fill JWT info manually",s="Show private key path input",T="Show private key input",H=["private_key","token_uri","client_email","project_id"],W=({onChange:u,showConfigEditor:d})=>{const[g,P]=I.useState(),[h,b]=I.useState(null),j=p.useTheme2(),R=I.useCallback(f=>{P(null),b(!0)},[b]),J=I.useCallback(f=>{b(null),P(null)},[b]),A=I.useCallback(f=>{if(f.trim()!==""){let x;try{x=JSON.parse(f)}catch{P("Invalid JWT token")}const S=ie(x);S.isValid?(d(),u({privateKey:x.private_key,tokenUri:x.token_uri,clientEmail:x.client_email,projectId:x.project_id})):P(S.error)}},[P,u,d]);return l.default.createElement(l.default.Fragment,null,l.default.createElement(p.Field,{label:"JWT token",invalid:!!g,description:h?"Paste JWT token below":"Upload or paste Google JWT token",error:g},l.default.createElement(l.default.Fragment,null,h!==!0&&l.default.createElement("div",{"data-testid":te},p.FileDropzone&&l.default.createElement(p.FileDropzone,{options:{multiple:!1,accept:".json"},readAs:"readAsText",onLoad:f=>{A(f),b(!1)}},l.default.createElement("p",{style:{margin:0,fontSize:`${j.typography.h4.fontSize}`,textAlign:"center"}},"Drop the Google JWT file here",l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement(p.Button,{fill:"outline"},"Click to browse files")))),h&&l.default.createElement(p.TextArea,{"data-testid":V,autoFocus:!0,invalid:!!g,placeholder:"Paste Google JWT token here",onBlur:f=>A(f.currentTarget.value),rows:12}))),!h&&l.default.createElement(l.default.Fragment,null,l.default.createElement(p.Button,{"data-testid":z,type:"button",fill:"outline",style:{color:`${j.colors.primary.text}`},onClick:R},"Paste JWT Token"),l.default.createElement("span",{style:{paddingRight:"10px",paddingLeft:"10px"}},"or"),l.default.createElement(p.Button,{"data-testid":Q,type:"button",fill:"outline",style:{color:`${j.colors.primary.text}`},onClick:d},"Fill In JWT Token manually")),h&&g&&l.default.createElement(p.Field,null,l.default.createElement(p.Button,{type:"button",fill:"outline",style:{color:`${j.colors.primary.text}`},onClick:J},"Upload JWT Token")))},ie=u=>{if(!_.isObject(u))return{isValid:!1,error:"Invalid JWT token"};const d=H.filter(g=>!u[g]);return d.length>0?{isValid:!1,error:`Missing keys: ${d.join(", ")}`}:{isValid:!0}},{SecretFormField:$}=p.LegacyForms;var O;(function(u){u.PATH="path",u.JWT="jwt"})(O||(O={}));const U=({options:u,onReset:d,onOptionsChange:g})=>{var P;const[h,b]=l.default.useState((f=>"privateKeyPath"in f&&f.privateKeyPath!==""?O.PATH:O.JWT)(u.jsonData)),j=f=>k.onUpdateDatasourceJsonDataOption({options:u,onOptionsChange:g},f),R=()=>{h===O.JWT?b(O.PATH):b(O.JWT)},J=l.default.createElement("span",null,h===O.PATH?l.default.createElement("a",{className:"external-link",onClick:R,"data-testid":T},"Paste private key"):"Paste private key"," ","or \xA0",h===O.JWT?l.default.createElement("a",{className:"external-link",onClick:R,"data-testid":s},"provide path to private file"):"provide path to private key file"),A={isConfigured:!!u.secureJsonFields.privateKey,value:((P=u.secureJsonData)===null||P===void 0?void 0:P.privateKey)||"",placeholder:"Enter Private key",onReset:()=>d(),onChange:k.onUpdateDatasourceSecureJsonDataOption({options:u,onOptionsChange:g},"privateKey"),"data-testid":F};return l.default.createElement("div",{"data-testid":ae},l.default.createElement(p.Field,{label:"Project ID"},l.default.createElement(p.Input,{id:"defaultProject",width:60,value:u.jsonData.defaultProject||"",onChange:j("defaultProject")})),l.default.createElement(p.Field,{label:"Client email"},l.default.createElement(p.Input,{width:60,id:"clientEmail",value:u.jsonData.clientEmail||"",onChange:j("clientEmail")})),l.default.createElement(p.Field,{label:"Token URI"},l.default.createElement(p.Input,{width:60,id:"tokenUri",value:u.jsonData.tokenUri||"",onChange:j("tokenUri")})),h===O.PATH&&l.default.createElement(p.Field,{label:"Private key path",description:J},l.default.createElement(p.Input,{width:60,id:"privateKeyPath",value:u.jsonData.privateKeyPath||"",placeholder:"File location of your private key (e.g. /etc/secrets/gce.pem)",onChange:j("privateKeyPath"),"data-testid":ne})),h===O.JWT&&l.default.createElement(l.default.Fragment,null,p.SecretInput?l.default.createElement(p.Field,{label:"Private key",description:J},l.default.createElement(p.SecretInput,Object.assign({},A,{width:60}))):l.default.createElement($,Object.assign({},A,{label:"Private key",labelWidth:10,inputWidth:20}))))};function Y(u){const{options:d,onOptionsChange:g,authOptions:P}=u,{jsonData:h,secureJsonFields:b,secureJsonData:j}=d,R=()=>!!(h.clientEmail&&h.defaultProject&&h.tokenUri&&(b&&b.privateKey||h.privateKeyPath));h.authenticationType||(h.authenticationType=M.JWT);const[J,A]=I.useState(Z(h.authenticationType)),[f,x]=I.useState(R());return l.default.createElement(l.default.Fragment,null,l.default.createElement(p.FieldSet,{label:"Authentication"},l.default.createElement(p.Field,{label:"Authentication type"},l.default.createElement(p.RadioButtonGroup,{options:P,value:h.authenticationType||M.JWT,onChange:S=>{x(R()),g(Object.assign(Object.assign({},d),{jsonData:Object.assign(Object.assign({},d.jsonData),{authenticationType:S})})),A(Z(S))}}))),J&&l.default.createElement(p.FieldSet,{label:"JWT Key Details"},f?l.default.createElement(U,{options:d,onReset:()=>(S=>{const G=Object.assign({},j),K=S?Object.assign(Object.assign({},d.jsonData),S):Object.assign({},d.jsonData);delete K.clientEmail,delete K.defaultProject,delete K.tokenUri,delete K.privateKeyPath,delete G.privateKey,A(!0),x(!1),g(Object.assign(Object.assign({},d),{secureJsonFields:Object.assign(Object.assign({},d.secureJsonFields),{privateKey:!1}),secureJsonData:G,jsonData:K}))})(),onOptionsChange:g}):l.default.createElement(W,{showConfigEditor:()=>{x(!0)},onChange:S=>{g(Object.assign(Object.assign({},d),{secureJsonFields:Object.assign(Object.assign({},b),{privateKey:!0}),secureJsonData:Object.assign(Object.assign({},j),{privateKey:S.privateKey}),jsonData:Object.assign(Object.assign({},h),{clientEmail:S.clientEmail,defaultProject:S.projectId,tokenUri:S.tokenUri})}))}})," "),h.authenticationType===M.GCE&&l.default.createElement(p.Field,{label:"Default project"},l.default.createElement(p.Input,{id:"defaultProject",width:60,value:d.jsonData.defaultProject||"",onChange:k.onUpdateDatasourceJsonDataOption(u,"defaultProject")})))}const Z=u=>u===M.JWT||u===void 0,X=[{label:"Google JWT File",value:M.JWT,ariaLabel:re},{label:"GCE Default Service Account",value:M.GCE,ariaLabel:se}];y=Y,w.ConnectionConfig=u=>{const{options:{jsonData:d}}=u;d.authenticationType||(d.authenticationType=M.JWT);const g=d.authenticationType===M.JWT||d.authenticationType===void 0;return l.default.createElement(l.default.Fragment,null,l.default.createElement(Y,Object.assign({authOptions:X},u)),l.default.createElement("div",{className:"grafana-info-box",style:{marginTop:"16px"},"data-testid":ee},l.default.createElement("p",null,"Don\u2019t know how to get a service account key file or create a service account? Read more"," ",l.default.createElement("a",{className:"external-link",target:"_blank",rel:"noopener noreferrer",href:"https://grafana.com/docs/grafana/latest/datasources/google-cloud-monitoring/google-authentication/"},"in the documentation."))),!g&&l.default.createElement(p.Alert,{title:"",severity:"info"},"Verify GCE default service account by clicking Save & Test"))},y=X,y=M,y=W,y=U},51990:(q,w,o)=>{"use strict";q.exports=o(43787)},94401:(q,w,o)=>{"use strict";o.r(w),o.d(w,{plugin:()=>de});var y=o(56375),k=o(41466),p=o(43471),I=o(2384),_=o(66681),r=o(85960);class l extends r.PureComponent{render(){return r.createElement("div",null,r.createElement("h2",null,"Cloud Monitoring alias patterns"),r.createElement("div",null,r.createElement("p",null,"Format the legend keys any way you want by using alias patterns. Format the legend keys any way you want by using alias patterns."),"Example:",r.createElement("code",null,"{{metric.name}} - {{metric.label.instance_name}}"),r.createElement("br",null),"Result: \xA0\xA0",r.createElement("code",null,"cpu/usage_time - server1-europe-west-1"),r.createElement("br",null),r.createElement("br",null),r.createElement("span",null,"Patterns:"),r.createElement("br",null),r.createElement("ul",{className:(0,_.css)`
              list-style: none;
            `},r.createElement("li",null,r.createElement("code",null,"{{metric.type}}")," = metric type e.g. compute.googleapis.com/instance/cpu/usage_time"),r.createElement("li",null,r.createElement("code",null,"{{metric.name}}")," = name part of metric e.g. instance/cpu/usage_time"),r.createElement("li",null,r.createElement("code",null,"{{metric.service}}")," = service part of metric e.g. compute"),r.createElement("li",null,r.createElement("code",null,"{{metric.label.label_name}}")," = Metric label metadata e.g. metric.label.instance_name"),r.createElement("li",null,r.createElement("code",null,"{{resource.label.label_name}}")," = Resource label metadata e.g. resource.label.zone"),r.createElement("li",null,r.createElement("code",null,"{{metadata.system_labels.name}}")," = Meta data system labels e.g. metadata.system_labels.name. For this to work, the needs to be included in the group by"),r.createElement("li",null,r.createElement("code",null,"{{metadata.user_labels.name}}")," = Meta data user labels e.g. metadata.user_labels.name. For this to work, the needs to be included in the group by"),r.createElement("li",null,r.createElement("code",null,"{{bucket}}")," = bucket boundary for distribution metrics when using a heatmap in Grafana"),r.createElement("li",null,r.createElement("code",null,"{{project}}")," = The project name that was specified in the query editor"),r.createElement("li",null,r.createElement("code",null,"{{service}}")," = The service id that was specified in the SLO query editor"),r.createElement("li",null,r.createElement("code",null,"{{slo}}")," = The SLO id that was specified in the SLO query editor"),r.createElement("li",null,r.createElement("code",null,"{{selector}}")," = The Selector function that was specified in the SLO query editor"))))}}var M=o(83743),ee=o(57773),te=o(51990),V=o(43183),z=o(45635),ae=o(9011),re=o(67954);class se extends r.PureComponent{constructor(){super(...arguments),this.handleOnOptionsChange=e=>{(e.jsonData.privateKeyPath||e.secureJsonFields.privateKey)&&(0,V.ff)("grafana_cloud_monitoring_config_changed",{authenticationType:"JWT",privateKey:e.secureJsonFields.privateKey,privateKeyPath:!!e.jsonData.privateKeyPath}),this.props.onOptionsChange(e)}}render(){const{options:e,onOptionsChange:t}=this.props;return r.createElement(r.Fragment,null,r.createElement(M.j,{dataSourceName:"Google Cloud Monitoring",docsLink:"https://grafana.com/docs/grafana/latest/datasources/google-cloud-monitoring/",hasRequiredFields:!0}),r.createElement(z.i,null),r.createElement(te.ConnectionConfig,{...this.props,onOptionsChange:this.handleOnOptionsChange}),re.config.secureSocksDSProxyEnabled&&r.createElement(r.Fragment,null,r.createElement(z.i,null),r.createElement(ee.K,{title:"Additional settings",description:"Additional settings are optional settings that can be configured for more control over your data source. This includes Secure Socks Proxy.",isCollapsible:!0,isInitiallyOpen:e.jsonData.enableSecureSocksProxy!==void 0},r.createElement(ae.i,{options:e,onOptionsChange:t}))))}}var ne=o(72277),F=o(12399),Q=o(96177),s=o(38297),T=o(28763);class H extends r.PureComponent{constructor(e){super(e),this.queryTypes=[{value:s.Bp.Projects,label:"Projects"},{value:s.Bp.Services,label:"Services"},{value:s.Bp.MetricTypes,label:"Metric Types"},{value:s.Bp.LabelKeys,label:"Label Keys"},{value:s.Bp.LabelValues,label:"Label Values"},{value:s.Bp.ResourceTypes,label:"Resource Types"},{value:s.Bp.Aggregations,label:"Aggregations"},{value:s.Bp.Aligners,label:"Aligners"},{value:s.Bp.AlignmentPeriods,label:"Alignment Periods"},{value:s.Bp.Selectors,label:"Selectors"},{value:s.Bp.SLOServices,label:"SLO Services"},{value:s.Bp.SLO,label:"Service Level Objectives (SLO)"}],this.defaults={selectedQueryType:this.queryTypes[0].value,metricDescriptors:[],selectedService:"",selectedMetricType:"",labels:[],labelKey:"",metricTypes:[],services:[],sloServices:[],selectedSLOService:"",projects:[],projectName:"",loading:!0},this.onPropsChange=()=>{const{metricDescriptors:t,labels:a,metricTypes:i,services:n,...c}=this.state;this.props.onChange({...c,refId:"CloudMonitoringVariableQueryEditor-VariableQuery"})},this.state=Object.assign(this.defaults,this.props.query)}async componentDidMount(){await this.props.datasource.ensureGCEDefaultProject();const e=this.props.query.projectName||this.props.datasource.getDefaultProject(),t=await this.props.datasource.getProjects(),a=await this.props.datasource.getMetricTypes(this.props.query.projectName||this.props.datasource.getDefaultProject()),i=(0,Q.qA)(a).map(N=>({value:N.service,label:N.serviceShortName}));let n="";i.some(N=>N.value===(0,F.J)().replace(this.state.selectedService))?n=this.state.selectedService:i&&i.length>0&&(n=i[0].value);const{metricTypes:c,selectedMetricType:L}=(0,Q.FL)(a,this.state.selectedMetricType,(0,F.J)().replace(this.state.selectedMetricType),(0,F.J)().replace(n)),C=await this.props.datasource.getSLOServices(e),D={services:i,selectedService:n,metricTypes:c,selectedMetricType:L,metricDescriptors:a,projects:t,...await this.getLabels(L,e),sloServices:C,loading:!1,projectName:e};this.setState(D,()=>this.onPropsChange())}async onQueryTypeChange(e){const t={selectedQueryType:e,...await this.getLabels(this.state.selectedMetricType,this.state.projectName,e)};this.setState(t)}async onProjectChange(e){const t=await this.props.datasource.getMetricTypes(e),a=await this.getLabels(this.state.selectedMetricType,e),{metricTypes:i,selectedMetricType:n}=(0,Q.FL)(t,this.state.selectedMetricType,(0,F.J)().replace(this.state.selectedMetricType),(0,F.J)().replace(this.state.selectedService)),c=await this.props.datasource.getSLOServices(e);this.setState({...a,metricTypes:i,selectedMetricType:n,metricDescriptors:t,projectName:e,sloServices:c},()=>this.onPropsChange())}async onServiceChange(e){const{metricTypes:t,selectedMetricType:a}=(0,Q.FL)(this.state.metricDescriptors,this.state.selectedMetricType,(0,F.J)().replace(this.state.selectedMetricType),(0,F.J)().replace(e)),i={selectedService:e,metricTypes:t,selectedMetricType:a,...await this.getLabels(a,this.state.projectName)};this.setState(i,()=>this.onPropsChange())}async onMetricTypeChange(e){const t={selectedMetricType:e,...await this.getLabels(e,this.state.projectName)};this.setState(t,()=>this.onPropsChange())}onLabelKeyChange(e){this.setState({labelKey:e},()=>this.onPropsChange())}componentDidUpdate(e,t){const a=t.selectedQueryType!==this.state.selectedQueryType,i=this.state.selectedSLOService!==t.selectedSLOService;(a||i)&&this.onPropsChange()}async getLabels(e,t,a=this.state.selectedQueryType){let i={labels:this.state.labels,labelKey:this.state.labelKey};if(e&&a===s.Bp.LabelValues){const n=await(0,Q.Qd)(this.props.datasource,e,t),c=n.some(L=>L===(0,F.J)().replace(this.state.labelKey))?this.state.labelKey:n[0];i={labels:n,labelKey:c}}return i}renderQueryTypeSwitch(e){const t={label:"Template Variables",expanded:!1,options:(0,F.J)().getVariables().map(a=>({value:`$${a.name}`,label:`$${a.name}`}))};switch(e){case s.Bp.MetricTypes:return r.createElement(r.Fragment,null,r.createElement(T.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:a=>this.onProjectChange(a),label:"Project"}),r.createElement(T.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:a=>this.onServiceChange(a),label:"Service"}));case s.Bp.LabelKeys:case s.Bp.LabelValues:case s.Bp.ResourceTypes:return r.createElement(r.Fragment,null,r.createElement(T.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:a=>this.onProjectChange(a),label:"Project"}),r.createElement(T.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:a=>this.onServiceChange(a),label:"Service"}),r.createElement(T.Th,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(({value:a,name:i})=>({value:a,label:i}))],onChange:a=>this.onMetricTypeChange(a),label:"Metric Type"}),e===s.Bp.LabelValues&&r.createElement(T.Th,{value:this.state.labelKey,options:[t,...this.state.labels.map(a=>({value:a,label:a}))],onChange:a=>this.onLabelKeyChange(a),label:"Label Key"}));case s.Bp.Aligners:case s.Bp.Aggregations:return r.createElement(r.Fragment,null,r.createElement(T.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:a=>this.onServiceChange(a),label:"Service"}),r.createElement(T.Th,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(({value:a,name:i})=>({value:a,label:i}))],onChange:a=>this.onMetricTypeChange(a),label:"Metric Type"}));case s.Bp.SLOServices:return r.createElement(r.Fragment,null,r.createElement(T.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:a=>this.onProjectChange(a),label:"Project"}));case s.Bp.SLO:return r.createElement(r.Fragment,null,r.createElement(T.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:a=>this.onProjectChange(a),label:"Project"}),r.createElement(T.Th,{value:this.state.selectedSLOService,options:[t,...this.state.sloServices],onChange:a=>{this.setState({...this.state,selectedSLOService:a})},label:"SLO Service"}));default:return""}}render(){return this.state.loading?r.createElement(T.Th,{value:"loading",options:[{value:"loading",label:"Loading..."}],onChange:e=>null,label:"Query Type"}):r.createElement(r.Fragment,null,r.createElement(T.Th,{value:this.state.selectedQueryType,options:this.queryTypes,onChange:e=>this.onQueryTypeChange(e),label:"Query Type"}),this.renderQueryTypeSwitch(this.state.selectedQueryType))}}var W=o(81838),ie=o(21964),$=o(16226),O=o(25066),U=o(98231),Y=o(32063),Z=o(85445),X=o(43071),u=o(45864),d=o(31683),g=o(27160),P=o(11248),h=o(23270),b=o(73688),j=o(24956),R=o(85645);const J=v=>({...(0,R.mO)(v),title:"",text:""}),A=v=>{const{datasource:e,query:t,onRunQuery:a,data:i,onChange:n}=v,L=(i?.series.length?i?.series[0].meta:{})?.custom??{},C={...J(e),...t.timeSeriesList},[D,N]=(0,r.useState)(C.title||""),[E,m]=(0,r.useState)(C.text||""),B={label:"Template Variables",options:e.getVariables().map(P.E)},he=le=>{N(le.target.value)},me=le=>{m(le.target.value)};return(0,g.Z)(()=>{n({...t,timeSeriesList:{...C,title:D}})},1e3,[D,n]),(0,g.Z)(()=>{n({...t,timeSeriesList:{...C,text:E}})},1e3,[E,n]),(0,r.useEffect)(()=>{(!t.queryType||!Object.values(s.xL).includes(t.queryType))&&n({...t,queryType:s.xL.TIME_SERIES_LIST})}),r.createElement(h._,null,r.createElement(r.Fragment,null,r.createElement(R.a1,{refId:t.refId,variableOptionGroup:B,customMetaData:L,onChange:n,onRunQuery:a,datasource:e,query:t}),r.createElement(b.S,{label:"Title",htmlFor:"annotation-query-title"},r.createElement(j.I,{id:"annotation-query-title",value:D,onChange:he})),r.createElement(b.S,{label:"Text",htmlFor:"annotation-query-text"},r.createElement(j.I,{id:"annotation-query-text",value:E,onChange:me}))),r.createElement(T.zI,null))},f=v=>v.target?.title!==void 0||v.target?.text!==void 0,x=v=>({prepareAnnotation:e=>{if(!f(e))return e;const{enable:t,name:a,iconColor:i}=e,{target:n}=e;return{datasource:e.datasource,enable:t,name:a,iconColor:i,target:{intervalMs:v.intervalMs,refId:n?.refId||"annotationQuery",queryType:s.xL.ANNOTATION,timeSeriesList:{projectName:n?.projectName||v.getDefaultProject(),filters:n?.filters||[],crossSeriesReducer:"REDUCE_NONE",perSeriesAligner:s.CS.ALIGN_NONE,title:n?.title||"",text:n?.text||""}}}},prepareQuery:e=>{if(e.target)return{...e.target,queryType:s.xL.ANNOTATION,type:"annotationQuery"}},QueryEditor:A});var S=o(31257),G=o(23361);class K{constructor(e){this.datasource=e}async execute(e){try{switch(e.projectName||(e.projectName=this.datasource.getDefaultProject()),e.selectedQueryType){case s.Bp.Projects:return this.handleProjectsQuery();case s.Bp.Services:return this.handleServiceQuery(e);case s.Bp.MetricTypes:return this.handleMetricTypesQuery(e);case s.Bp.LabelKeys:return this.handleLabelKeysQuery(e);case s.Bp.LabelValues:return this.handleLabelValuesQuery(e);case s.Bp.ResourceTypes:return this.handleResourceTypeQuery(e);case s.Bp.Aligners:return this.handleAlignersQuery(e);case s.Bp.AlignmentPeriods:return this.handleAlignmentPeriodQuery();case s.Bp.Aggregations:return this.handleAggregationQuery(e);case s.Bp.SLOServices:return this.handleSLOServicesQuery(e);case s.Bp.SLO:return this.handleSLOQuery(e);case s.Bp.Selectors:return this.handleSelectorQuery();default:return[]}}catch(t){return console.error(`Could not run CloudMonitoringMetricFindQuery ${e}`,t),[]}}async handleProjectsQuery(){return(await this.datasource.getProjects()).map(t=>({text:t.label,value:t.value,expandable:!0}))}async handleServiceQuery({projectName:e}){const t=await this.datasource.getMetricTypes(e);return(0,Q.qA)(t).map(i=>({text:i.serviceShortName,value:i.service,expandable:!0}))}async handleMetricTypesQuery({selectedService:e,projectName:t}){if(!e)return[];const a=await this.datasource.getMetricTypes(t);return(0,Q.Qf)(a,this.datasource.templateSrv.replace(e)).map(i=>({text:i.displayName,value:i.type,expandable:!0}))}async handleLabelKeysQuery({selectedMetricType:e,projectName:t}){return e?(await(0,Q.Qd)(this.datasource,e,t)).map(this.toFindQueryResult):[]}async handleLabelValuesQuery({selectedMetricType:e,labelKey:t,projectName:a}){if(!e)return[];const i="handleLabelValuesQuery",n=await this.datasource.getLabels(e,i,a,{groupBys:[t],crossSeriesReducer:"REDUCE_MEAN"}),c=this.datasource.templateSrv.replace(t);return(n.hasOwnProperty(c)?n[c]:[]).map(this.toFindQueryResult)}async handleResourceTypeQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const a="handleResourceTypeQueryQueryType";return(await this.datasource.getLabels(e,a,t))["resource.type"]?.map(this.toFindQueryResult)??[]}async handleAlignersQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const i=(await this.datasource.getMetricTypes(t)).find(n=>n.type===this.datasource.templateSrv.replace(e));return i?(0,Q.oU)(i.valueType,i.metricKind).map(this.toFindQueryResult):[]}async handleAggregationQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const i=(await this.datasource.getMetricTypes(t)).find(n=>n.type===this.datasource.templateSrv.replace(e));return i?(0,Q.A_)(i.valueType,i.metricKind).map(this.toFindQueryResult):[]}async handleSLOServicesQuery({projectName:e}){return(await this.datasource.getSLOServices(e)).map(this.toFindQueryResult)}async handleSLOQuery({selectedSLOService:e,projectName:t}){return(await this.datasource.getServiceLevelObjectives(t,e)).map(this.toFindQueryResult)}async handleSelectorQuery(){return S.IR.map(this.toFindQueryResult)}handleAlignmentPeriodQuery(){return S.dD.map(this.toFindQueryResult)}toFindQueryResult(e){return(0,y.isString)(e)?{text:e,expandable:!0}:{...e,expandable:!0}}}class oe extends G.Mg{constructor(e){super(),this.datasource=e,this.editor=H,this.metricFindQuery=new K(e)}query(e){const t=(0,$.D)(this.metricFindQuery.execute(e.targets[0]));return(0,$.D)(this.datasource.ensureGCEDefaultProject()).pipe((0,O.z)(()=>t),(0,U.U)(a=>({data:a})))}}class ce extends Y.CK{constructor(e,t=(0,d.J)(),a=(0,u.$t)()){super(e),this.instanceSettings=e,this.templateSrv=t,this.timeSrv=a,this.authenticationType=e.jsonData.authenticationType||"jwt",this.variables=new oe(this),this.intervalMs=0,this.annotations=x(this),this.backendSrv=(0,Z.i)()}getVariables(){return this.templateSrv.getVariables().map(e=>`$${e.name}`)}query(e){return e.targets=e.targets.map(t=>({...this.migrateQuery(t),intervalMs:e.intervalMs})),super.query(e)}applyTemplateVariables(e,t){const{timeSeriesList:a,timeSeriesQuery:i,sloQuery:n,promQLQuery:c}=e;return{...e,datasource:this.getRef(),intervalMs:this.intervalMs,timeSeriesList:a&&{...this.interpolateProps(a,t),projectName:this.templateSrv.replace(a.projectName?a.projectName:this.getDefaultProject(),t),filters:this.interpolateFilters(a.filters||[],t),groupBys:this.interpolateGroupBys(a.groupBys||[],t),view:a.view||"FULL"},timeSeriesQuery:i&&{...this.interpolateProps(i,t),projectName:this.templateSrv.replace(i.projectName?i.projectName:this.getDefaultProject(),t)},sloQuery:n&&this.interpolateProps(n,t),promQLQuery:c&&this.interpolateProps(c,t)}}async getLabels(e,t,a,i,n){const c={targets:[{refId:t,datasource:this.getRef(),queryType:s.xL.TIME_SERIES_LIST,timeSeriesList:(0,Q.Av)({projectName:this.templateSrv.replace(a),groupBys:this.interpolateGroupBys(i?.groupBys||[],{}),crossSeriesReducer:i?.crossSeriesReducer??"REDUCE_NONE",view:"HEADERS"},e)}],range:n??this.timeSrv.timeRange()},L=c.targets;return L.length?(0,W.n)((0,$.D)(this.ensureGCEDefaultProject()).pipe((0,O.z)(()=>this.backendSrv.fetch({url:"/api/ds/query",method:"POST",headers:this.getRequestHeaders(),data:{from:c.range.from.valueOf().toString(),to:c.range.to.valueOf().toString(),queries:L}})),(0,U.U)(({data:C})=>{const N=(0,X.z1)({data:C})?.data.map(E=>E.meta?.custom?.labels).filter(E=>!!E).reduce((E,m)=>{for(let B in m)E[B]||(E[B]=new Set),m[B]&&E[B].add(m[B]);return E},{});return Object.fromEntries(Object.entries(N).map(([E,m])=>{const B=Array.from(m);return[E,B]}))}))):(0,W.n)((0,ie.of)({results:[]}))}async getGCEDefaultProject(){return this.getResource("gceDefaultProject")}getDefaultProject(){const{defaultProject:e,authenticationType:t,gceDefaultProject:a}=this.instanceSettings.jsonData;return t==="gce"?a||"":e||""}async ensureGCEDefaultProject(){const{authenticationType:e,gceDefaultProject:t}=this.instanceSettings.jsonData;e==="gce"&&!t&&(this.instanceSettings.jsonData.gceDefaultProject=await this.getGCEDefaultProject())}async getMetricTypes(e){return e?this.getResource(`metricDescriptors/v3/projects/${this.templateSrv.replace(e)}/metricDescriptors`):[]}async filterMetricsByType(e,t){return e?this.getResource(`metricDescriptors/v3/projects/${this.templateSrv.replace(e)}/metricDescriptors`,{filter:`metric.type : "${t}"`}):[]}async getSLOServices(e){return this.getResource(`services/v3/projects/${this.templateSrv.replace(e)}/services?pageSize=1000`)}async getServiceLevelObjectives(e,t){if(!t)return Promise.resolve([]);let{projectName:a,serviceId:i}=this.interpolateProps({projectName:e,serviceId:t});return this.getResource(`slo-services/v3/projects/${a}/services/${i}/serviceLevelObjectives`)}getProjects(){return this.getResource("projects")}migrateMetricTypeFilter(e,t){const a=["metric.type","=",e];return t?.length?t.concat("AND",a):a}migrateQuery(e){const{hide:t,refId:a,datasource:i,key:n,queryType:c,maxLines:L,metric:C,intervalMs:D,type:N,...E}=e;if(!e.hasOwnProperty("metricQuery")&&!e.hasOwnProperty("sloQuery")&&!e.hasOwnProperty("timeSeriesQuery")&&!e.hasOwnProperty("timeSeriesList"))return{datasource:i,key:n,refId:a,intervalMs:D,hide:t,queryType:N==="annotationQuery"?s.xL.ANNOTATION:s.xL.TIME_SERIES_LIST,timeSeriesList:{...E,view:E.view||"FULL"}};if((0,y.has)(e,"metricQuery")&&["metrics",s.xL.ANNOTATION].includes(e.queryType??"")){const m=(0,y.get)(e,"metricQuery");m.editorMode==="mql"?(e.timeSeriesQuery={projectName:m.projectName,query:m.query,graphPeriod:m.graphPeriod},e.queryType=s.xL.TIME_SERIES_QUERY):(e.timeSeriesList={projectName:m.projectName,crossSeriesReducer:m.crossSeriesReducer,alignmentPeriod:m.alignmentPeriod,perSeriesAligner:m.perSeriesAligner,groupBys:m.groupBys,filters:m.filters,view:m.view,preprocessor:m.preprocessor},e.queryType=s.xL.TIME_SERIES_LIST,m.metricType&&(e.timeSeriesList.filters=this.migrateMetricTypeFilter(m.metricType,e.timeSeriesList.filters))),e.aliasBy=m.aliasBy,e=(0,y.omit)(e,"metricQuery")}return e.queryType===s.xL.SLO&&(0,y.has)(e,"sloQuery.aliasBy")&&(e.aliasBy=(0,y.get)(e,"sloQuery.aliasBy"),e=(0,y.omit)(e,"sloQuery.aliasBy")),e}interpolateProps(e,t={}){return Object.entries(e).reduce((a,[i,n])=>({...a,[i]:n&&(0,y.isString)(n)?this.templateSrv.replace(n,t):n}),{})}filterQuery(e){if(e.hide)return!1;if(e.queryType===s.xL.SLO){if(!e.sloQuery)return!1;const{selectorName:t,serviceId:a,sloId:i,projectName:n,lookbackPeriod:c}=e.sloQuery;return!!t&&!!a&&!!i&&!!n&&(t!==S.Fh||!!c)}return e.queryType===s.xL.TIME_SERIES_QUERY?!!e.timeSeriesQuery&&!!e.timeSeriesQuery.projectName&&!!e.timeSeriesQuery.query:e.queryType&&[s.xL.TIME_SERIES_LIST,s.xL.ANNOTATION].includes(e.queryType)?!!e.timeSeriesList&&!!e.timeSeriesList.projectName&&!!(0,Q.WH)(e.timeSeriesList):e.queryType===s.xL.PROMQL?!!e.promQLQuery&&!!e.promQLQuery.projectName&&!!e.promQLQuery.expr&&!!e.promQLQuery.step:!1}interpolateVariablesInQueries(e,t){return e.map(a=>this.applyTemplateVariables(this.migrateQuery(a),t))}interpolateFilters(e,t){const a=(0,y.chunk)(e,4).map(([n,c,L,C])=>({key:n,operator:c,value:L,...C&&{condition:C}})).filter(n=>n.value);return(0,y.flatten)(a.map(({key:n,operator:c,value:L,condition:C})=>[this.templateSrv.replace(n,t||{}),c,this.templateSrv.replace(L,t||{},D=>(0,y.isArray)(D)&&D.length?`(${D.join("|")})`:D),...C?[C]:[]]))||[]}interpolateGroupBys(e,t){let a=[];return(e||[]).forEach(i=>{const n=this.templateSrv.replace(i,t||{},"csv").split(",");Array.isArray(n)?a=a.concat(n):a.push(n)}),a}}var ue=o(20022);const pe=v=>{(0,V.ff)("grafana_ds_cloudmonitoring_dashboard_loaded",v)},de=new k.hf(ce).setQueryEditorHelp(l).setQueryEditor(ne.W).setConfigEditor(se).setVariableQueryEditor(H);(0,I.N$)().subscribe(p.Pl,({payload:{dashboardId:v,orgId:e,grafanaVersion:t,queries:a}})=>{const i=a[ue.id];let n={[s.xL.TIME_SERIES_QUERY]:0,[s.xL.TIME_SERIES_LIST]:0,[s.xL.SLO]:0,[s.xL.ANNOTATION]:0,[s.xL.PROMQL]:0};i.forEach(c=>{c.queryType===s.xL.TIME_SERIES_QUERY||c.queryType===s.xL.TIME_SERIES_LIST||c.queryType===s.xL.SLO||c.queryType===s.xL.ANNOTATION||c.queryType===s.xL.PROMQL?n[c.queryType]++:c.queryType==="metrics"&&(c.hasOwnProperty("type")&&(0,y.get)(c,"type")==="annotationQuery"&&n.annotation++,(0,y.get)(c,"metricQuery.editorMode")==="mql"?n.timeSeriesQuery++:n.timeSeriesList++)}),i&&i.length>0&&pe({grafana_version:t,dashboard_id:v,org_id:e,mql_queries:n[s.xL.TIME_SERIES_QUERY],time_series_filter_queries:n[s.xL.TIME_SERIES_LIST],slo_queries:n[s.xL.SLO],annotation_queries:n[s.xL.ANNOTATION],promQL_queries:n[s.xL.PROMQL]})})}}]);

//# sourceMappingURL=4401.c82738ffed0e32230edd.js.map