"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[4023],{76581:(J,y,e)=>{e.d(y,{i:()=>S});var d=e(66681),l=e(85960),r=e(47257);const S=({hideLine:u=!1})=>{const f=(0,r.wW)(A);return u?l.createElement("hr",{className:f.dividerHideLine}):l.createElement("hr",{className:f.divider})},A=u=>({divider:(0,d.css)({margin:u.spacing(4,0)}),dividerHideLine:(0,d.css)({border:"none",margin:u.spacing(3,0)})})},42056:(J,y,e)=>{e.d(y,{I:()=>$});var d=e(66681),l=e(85960),r=e(52219),S=e(15889),A=e(47257),u=e(81368),f=e(84933),U=e(5999),L=e(7033);function Z({options:m,onOptionsChange:g}){const C=(0,A.wW)(x);return l.createElement("div",{className:C.container},l.createElement(u.Z,{className:C.row},l.createElement(f._,{tooltip:"Displays the node graph above the trace view. Default: disabled",label:"Enable node graph",labelWidth:26},l.createElement(U.x,{id:"enableNodeGraph",value:m.jsonData.nodeGraph?.enabled,onChange:F=>(0,r.tp)({onOptionsChange:g,options:m},"nodeGraph",{...m.jsonData.nodeGraph,enabled:F.currentTarget.checked})}))))}const $=({options:m,onOptionsChange:g})=>{let C=m.type;return C+=m.type==="tempo"?"/configure-tempo-data-source/#node-graph":"/#node-graph",l.createElement(S._,{title:"Node graph",description:l.createElement(L.W,{description:"Show or hide the node graph visualization.",suffix:C,feature:"the node graph"})},l.createElement(Z,{options:m,onOptionsChange:g}))},x=m=>({infoText:(0,d.css)({label:"infoText",paddingBottom:m.spacing(2),color:m.colors.text.secondary}),container:(0,d.css)({label:"container",width:"100%"}),row:(0,d.css)({label:"row",alignItems:"baseline"})})},261:(J,y,e)=>{e.d(y,{Y:()=>F});var d=e(66681),l=e(85960),r=e(52219),S=e(57773),A=e(47257),u=e(81368),f=e(84933),U=e(29165),L=e(24956),Z=e(40715),$=e(7033),x=e(42177),m=e(7734),g=e(29724);function C({options:c,onOptionsChange:v}){const B=(0,A.wW)(G);return l.createElement("div",{className:(0,d.css)({width:"100%"})},l.createElement(u.Z,{className:B.row},l.createElement(f._,{tooltip:"The Prometheus data source the trace is going to navigate to",label:"Data source",labelWidth:26},l.createElement(Z.q,{inputId:"trace-to-metrics-data-source-picker",pluginId:"prometheus",current:c.jsonData.tracesToMetrics?.datasourceUid,noDefault:!0,width:40,onChange:h=>(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,datasourceUid:h.uid})})),c.jsonData.tracesToMetrics?.datasourceUid?l.createElement(U.zx,{type:"button",variant:"secondary",size:"sm",fill:"text",onClick:()=>{(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,datasourceUid:void 0})}},"Clear"):null),l.createElement(u.Z,null,l.createElement(x.w,{label:(0,g.mH)("start"),tooltip:(0,g.rr)("start","-2m"),value:c.jsonData.tracesToMetrics?.spanStartTimeShift||"",onChange:h=>{(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,spanStartTimeShift:h})},placeholder:"-2m",isInvalidError:g.Ny})),l.createElement(u.Z,null,l.createElement(x.w,{label:(0,g.mH)("end"),tooltip:(0,g.rr)("end","2m"),value:c.jsonData.tracesToMetrics?.spanEndTimeShift||"",onChange:h=>{(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,spanEndTimeShift:h})},placeholder:"2m",isInvalidError:g.Ny})),l.createElement(u.Z,null,l.createElement(f._,{tooltip:"Tags that will be used in the metrics query",label:"Tags",labelWidth:26},l.createElement(m.a,{values:c.jsonData.tracesToMetrics?.tags??[],onChange:h=>(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,tags:h})}))),c.jsonData.tracesToMetrics?.queries?.map((h,K)=>l.createElement("div",{key:K,className:B.queryRow},l.createElement(f._,{label:"Link Label",labelWidth:26,tooltip:"Descriptive label for the linked query"},l.createElement(L.I,{label:"Link Label",type:"text",allowFullScreen:!0,value:h.name,width:40,onChange:W=>{let N=c.jsonData.tracesToMetrics?.queries.slice()??[];N[K].name=W.currentTarget.value,(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,queries:N})}})),l.createElement(f._,{label:"Query",labelWidth:10,tooltip:"The Prometheus query that will run when navigating from a trace to metrics. Interpolate tags using the `$__tags` keyword",grow:!0},l.createElement(L.I,{label:"Query",type:"text",allowFullScreen:!0,value:h.query,onChange:W=>{const N=(c.jsonData.tracesToMetrics?.queries??[]).map((V,b)=>b===K?{...V,query:W.currentTarget.value}:V);(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,queries:N})}})),l.createElement(U.zx,{variant:"destructive",title:"Remove query",icon:"times",type:"button",onClick:()=>{let W=c.jsonData.tracesToMetrics?.queries.slice();W?.splice(K,1),(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,queries:W})}}))),l.createElement(U.zx,{variant:"secondary",title:"Add query",icon:"plus",type:"button",onClick:()=>{(0,r.tp)({onOptionsChange:v,options:c},"tracesToMetrics",{...c.jsonData.tracesToMetrics,queries:[...c.jsonData.tracesToMetrics?.queries??[],{query:""}]})}},"Add query"))}const F=({options:c,onOptionsChange:v})=>{let B=c.type;return B+=c.type==="tempo"?"/configure-tempo-data-source/#trace-to-metrics":"/#trace-to-metrics",l.createElement(S.K,{title:"Trace to metrics",description:l.createElement($.W,{description:"Navigate from a trace span to the selected data source's metrics.",suffix:B,feature:"trace to metrics"}),isCollapsible:!0,isInitiallyOpen:!0},l.createElement(C,{options:c,onOptionsChange:v}))},G=c=>({infoText:(0,d.css)`
    padding-bottom: ${c.spacing(2)};
    color: ${c.colors.text.secondary};
  `,row:(0,d.css)`
    label: row;
    align-items: baseline;
  `,queryRow:(0,d.css)`
    label: queryRow;
    display: flex;
    flex-flow: wrap;
  `})},76090:(J,y,e)=>{e.r(y),e.d(y,{plugin:()=>Ie});var d=e(41466),l=e(66681),r=e(85960),S=e(83743),A=e(57773),u=e(90857),f=e(47257),U=e(42337),L=e(76581),Z=e(42056),$=e(29724),x=e(261),m=e(79152);const g=({options:a,onOptionsChange:t})=>{const n=(0,f.wW)(C);return r.createElement("div",{className:n.container},r.createElement(S.j,{dataSourceName:"Zipkin",docsLink:"https://grafana.com/docs/grafana/latest/datasources/zipkin",hasRequiredFields:!1}),r.createElement(L.i,null),r.createElement(U.E,{defaultUrl:"http://localhost:9411",dataSourceConfig:a,showAccessOptions:!1,onChange:t,secureSocksDSProxyEnabled:u.config.secureSocksDSProxyEnabled}),r.createElement($.dw,{options:a,onOptionsChange:t}),r.createElement(L.i,null),u.config.featureToggles.traceToMetrics?r.createElement(r.Fragment,null,r.createElement(x.Y,{options:a,onOptionsChange:t}),r.createElement(L.i,null)):null,r.createElement(A.K,{title:"Additional settings",description:"Additional settings are optional settings that can be configured for more control over your data source.",isCollapsible:!0,isInitiallyOpen:!1},r.createElement(Z.I,{options:a,onOptionsChange:t}),r.createElement(L.i,{hideLine:!0}),r.createElement(m.vc,{options:a,onOptionsChange:t})))},C=a=>({container:(0,l.css)`
    label: container;
    margin-bottom: ${a.spacing(2)};
    max-width: 900px;
  `});var F=e(56375),G=e(85954),c=e(16857),v=e(79088),B=e(7288),h=e(85447),K=e(81368),W=e(84933),N=e(74042),V=e(5106),b=e(29165),ee=e(46081),te=e(29470),X=e(88492),w=e(93991),k=e(59767);const Q="/api/v2",ae=a=>({tracesCascader:(0,l.css)({label:"tracesCascader",marginRight:a.spacing(1)})}),re=({query:a,onChange:t,onRunQuery:n,datasource:s})=>{const[i,o]=(0,r.useState)(!1),z=ne(s),I=(0,f.l4)(),E=(0,f.wW)(ae),{onLoadOptions:T,allOptions:p}=se(s),D=(0,r.useCallback)((M,O)=>{if(O.length===3){const q=O[2].value;t({...a,query:q}),n()}},[t,n,a]);(0,r.useEffect)(()=>{a.queryType||t({...a,queryType:"traceID"})},[a,t]);const P=M=>{const O={...a,query:M};t(O)};let j=oe(z,p);return r.createElement(r.Fragment,null,r.createElement(B.u,{title:"Upload trace",isOpen:i,onDismiss:()=>o(!1)},r.createElement("div",{className:(0,l.css)({padding:I.spacing(2)})},r.createElement(h.Yo,{options:{multiple:!1},onLoad:M=>{s.uploadedJson=M,t({...a,queryType:"upload"}),o(!1),n()}}))),r.createElement(K.Z,null,r.createElement(W._,{label:"Query type",grow:!0},r.createElement(N.Lh,{spacing:"sm",align:"center",justify:"space-between"},r.createElement(V.S,{options:[{value:"traceID",label:"TraceID"}],value:a.queryType||"traceID",onChange:M=>t({...a,queryType:M}),size:"md"}),r.createElement(b.zx,{variant:"secondary",size:"sm",onClick:()=>{o(!0)}},"Import trace")))),a.queryType==="traceID"&&r.createElement(K.Z,null,r.createElement(ee.O,{options:j,onChange:D,loadData:T,variant:"secondary",buttonProps:{className:E.tracesCascader}},"Traces"),r.createElement("div",{className:"gf-form gf-form--grow flex-shrink-1 min-width-15"},r.createElement(te.q,{query:a.query,onChange:P,onRunQuery:n,placeholder:"Insert Trace ID (run with Shift+Enter)",portalOrigin:"zipkin"}))))};function ne(a){const t=`${Q}/services`,[n,s]=(0,G.Z)(async()=>{try{const i=await a.metadataRequest(t);return i?i.sort().map(o=>({label:o,value:o,isLeaf:!1})):[]}catch(i){const o=i instanceof Error?i:"An unknown error occurred";throw(0,k.WI)((0,X.$l)((0,w.t_)("Failed to load services from Zipkin",o))),i}},[a]);return(0,c.Z)(()=>{s()}),n}function se(a){const t=(0,v.Z)(),[n,s]=(0,r.useState)({}),[,i]=(0,G.Z)(async function(E){const T=`${Q}/spans`;try{const p=await a.metadataRequest(T,{serviceName:E});t()&&s(D=>{const P=(0,F.fromPairs)(p.map(j=>[j,void 0]));return{...D,[E]:P}})}catch(p){const D=p instanceof Error?p:"An unknown error occurred";throw(0,k.WI)((0,X.$l)((0,w.t_)("Failed to load spans from Zipkin",D))),p}},[a,n]),[,o]=(0,G.Z)(async function(E,T){const p=`${Q}/traces`,D={serviceName:E,spanName:T};try{const P=await a.metadataRequest(p,D);if(t()){const j=P.length?(0,F.fromPairs)(P.map(M=>{const O=M.find(q=>!q.parentId);return[`${O.name} [${Math.floor(O.duration/1e3)} ms]`,O.traceId]})):ie;s(M=>{const O=M[E];return{...M,[E]:{...O,[T]:j}}})}}catch(P){const j=P instanceof Error?P:"An unknown error occurred";throw(0,k.WI)((0,X.$l)((0,w.t_)("Failed to load spans from Zipkin",j))),P}},[a]);return{onLoadOptions:(0,r.useCallback)(I=>{const E=I[0].value;if(I.length===1)i(E);else if(I.length===2){const T=I[1].value;o(E,T)}},[i,o]),allOptions:n}}function oe(a,t){return(0,r.useMemo)(()=>{let n=[];return a.value&&a.value.length?n=a.value.map(s=>({...s,children:t[s.value]&&Object.keys(t[s.value]).map(i=>({label:i,value:i,isLeaf:!1,children:t[s.value][i]&&Object.keys(t[s.value][i]).map(o=>({label:o,value:t[s.value][i][o]}))}))})):a.value&&!a.value.length&&(n=ce),n},[a,t])}const le="__NO_TRACES__",ce=[{label:"No traces found",value:"no_traces",isLeaf:!0}],ie={"[No traces in time range]":le};var H=e(21964),de=e(81838),ue=e(98231),me=e(173),Ee=e(45878),fe=e(58309),ve=e(12399),ge=e(85445),R=e(68619),Y=e(98149);function he(a){const{nodes:t,edges:n}=Te(a),[s,i]=(0,Y.np)();for(const o of t)s.add(o);for(const o of n)i.add(o);return[s,i]}function Te(a){const t=[],n=[],s=pe(a),i=(0,Y.nO)(o=>{if(!(o>=a.length))return{span:a[o],id:a[o].id,parentIds:a[o].parentId?[a[o].parentId]:[]}});for(const o of a){const z=i[o.id].children.map(p=>{const D=i[p].span;return[D.timestamp,D.timestamp+D.duration]}),I=(0,Y.et)(z),E=o.duration-I,T=(0,Y.fy)(o.duration/1e3,s/1e3,E/1e3);t.push({[R.z.id]:o.id,[R.z.title]:o.localEndpoint?.serviceName||o.remoteEndpoint?.serviceName||"unknown",[R.z.subTitle]:o.name,[R.z.mainStat]:T.main,[R.z.secondaryStat]:T.secondary,[R.z.color]:E/s}),o.parentId&&i[o.parentId].span&&n.push({[R.z.id]:o.parentId+"--"+o.id,[R.z.target]:o.id,[R.z.source]:o.parentId})}return{nodes:t,edges:n}}function pe(a){let t=0,n=1/0;for(const s of a)s.timestamp<n&&(n=s.timestamp),s.timestamp+s.duration>t&&(t=s.timestamp+s.duration);return t-n}var De=e(67824);class Me extends d.MF{constructor(t,n=(0,ve.J)()){super(t),this.instanceSettings=t,this.templateSrv=n,this.uploadedJson=null,this.nodeGraph=t.jsonData.nodeGraph}query(t){const n=t.targets[0];if(n.queryType==="upload"){if(!this.uploadedJson)return(0,H.of)({data:[]});try{const s=JSON.parse(this.uploadedJson);return(0,H.of)(_({data:s},this.nodeGraph?.enabled))}catch{return(0,H.of)({error:{message:"JSON is not valid Zipkin format"},data:[]})}}if(n.query){const s=this.applyVariables(n,t.scopedVars);return this.request(`${Q}/trace/${encodeURIComponent(s.query)}`).pipe((0,ue.U)(i=>_(i,this.nodeGraph?.enabled)))}return(0,H.of)(ye)}async metadataRequest(t,n){return(await(0,de.n)(this.request(t,n,{hideFromInspector:!0}))).data}async testDatasource(){return await this.metadataRequest(`${Q}/services`),{status:"success",message:"Data source is working"}}getQueryDisplayText(t){return t.query}interpolateVariablesInQueries(t,n){return!t||t.length===0?[]:t.map(s=>({...s,datasource:this.getRef(),...this.applyVariables(s,n)}))}applyVariables(t,n){return{...{...t},query:this.templateSrv.replace(t.query??"",n)}}request(t,n,s){const i=n?me.Cj.serializeParams(n):"",o=`${this.instanceSettings.url}${t}${i.length?`?${i}`:""}`,z={...s,url:o};return(0,ge.i)().fetch(z)}}function _(a,t=!1){let n=a?.data?[(0,De.m)(a?.data)]:[];return t&&n.push(...he(a?.data)),{data:n}}const ye={data:[(0,Ee.at)({fields:[{name:"trace",type:fe.fS.trace,values:[]}],meta:{preferredVisualisationType:"trace",custom:{traceFormat:"zipkin"}}})]},Ie=new d.hf(Me).setQueryEditor(re).setConfigEditor(g)},16857:(J,y,e)=>{e.d(y,{Z:()=>r});var d=e(33067),l=function(S){(0,d.Z)(function(){S()})};const r=l}}]);

//# sourceMappingURL=zipkinPlugin.3ac98559ec2097377244.js.map