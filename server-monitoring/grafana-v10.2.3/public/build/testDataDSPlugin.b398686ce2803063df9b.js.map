{"version":3,"file":"testDataDSPlugin.b398686ce2803063df9b.js","mappings":"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B,CACF,EACA,CACE,MAAO,gBACP,IAAK,GACL,SAAU,CACR,MAAO,CACL,UAAW,oBACX,MAAO,qFACT,EACA,cAAe,YACf,eAAgB,mBAClB,CACF,CACF,CACF,EACA,OAAQ,CACN,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACF,CACF,EACA,CACE,KAAMA,EAA6B,OACnC,KAAM,EAAU,OAChB,OAAQ,CAAC,EACT,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CACpE,EACA,CACE,KAAM,aACN,KAAM,EAAU,OAChB,OAAQ,CAAC,EACT,OAAQ,CACN,OACA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,SACA,WACA,MACA,MACA,MACA,MACA,WACA,WACA,UACF,CACF,EACA,CACE,KAAMA,EAA6B,OACnC,KAAM,EAAU,OAChB,OAAQ,CAAC,EACT,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAE,CAC/D,EACA,CACE,KAAM,aACN,KAAM,EAAU,OAChB,OAAQ,CAAC,EACT,OAAQ,CACN,YACA,SACA,OACA,SACA,cACA,YACA,WACA,WACA,SACA,WACA,OACA,MACA,MACA,MACA,WACA,YACA,UACF,CACF,EACA,CACE,KAAMA,EAA6B,SACnC,KAAM,EAAU,OAChB,OAAQ,CAAE,YAAa,qBAAsB,EAC7C,OAAQ,CACN,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,eACA,gBACA,kBACA,eACA,eACA,eACA,iBACA,eACA,kBACA,kBACA,cACF,CACF,EACA,CACE,KAAMA,EAA6B,cACnC,KAAM,EAAU,OAChB,OAAQ,CAAE,KAAM,QAAS,YAAa,yBAA0B,EAChE,OAAQ,CACN,kBAAmB,mBAAoB,mBAAqB,mBAAoB,oBAChF,mBAAoB,mBAAoB,oBAAsB,mBAAoB,mBAClF,kBAAmB,kBAAmB,iBAAmB,QAAS,MAAO,mBAAoB,kBAC/F,CACF,CACF,EACA,KAAM,CAAE,2BAA4B,WAAqB,EACzD,KAAM,OACR,ECtUO,SAASK,GAAoB7Y,EAAQ,GAAI,CAC9C,MAAM2Y,EAAQ,CAAC,EACTC,EAAkB,CAAC,EAEnBrmC,EAAO,CACX,GAAI,OACJ,MAAO,OACP,SAAU,SACV,QAAS,EACT,MAAO,EACP,MAAO,KAAK,OAAO,EACnB,MAAO,KAAK,OAAO,EACnB,MAAAqmC,CACF,EACAD,EAAM,KAAKpmC,CAAI,EACf,MAAMumC,EAAuB,CAACvmC,CAAI,EAE5BwmC,EAAW,EAEjB,QAAStxB,EAAI,EAAGA,EAAIuY,EAAOvY,IAAK,CAC9B,MAAMhV,EAAOumC,GAAevxB,CAAC,EAC7BkxB,EAAM,KAAKlmC,CAAI,EACf,MAAMwmC,EAAc,KAAK,MAAM,KAAK,OAAO,EAAI,KAAK,MAAMH,EAAqB,OAAS,CAAC,CAAC,EACpF7oB,EAAS6oB,EAAqBG,CAAW,EAC/ChpB,EAAO,MAAM,KAAKxd,EAAK,EAAE,EACrBwd,EAAO,MAAM,QAAU8oB,GACzBD,EAAqB,OAAOG,EAAa,CAAC,EAE5CH,EAAqB,KAAKrmC,CAAI,EAIhC,MAAMymC,EAAkB,KAAK,MAAMlZ,EAAQ,CAAC,EAC5C,QAASvY,EAAI,EAAGA,GAAKyxB,EAAiBzxB,IAAK,CACzC,MAAMwxB,EAAc,KAAK,MAAM,KAAK,OAAO,EAAI,KAAK,MAAMN,EAAM,OAAS,CAAC,CAAC,EACrEQ,EAAc,KAAK,MAAM,KAAK,OAAO,EAAI,KAAK,MAAMR,EAAM,OAAS,CAAC,CAAC,EACvEM,IAAgBE,GAAeR,EAAMM,CAAW,EAAE,KAAO,KAAON,EAAMQ,CAAW,EAAE,KAAO,KAI9FR,EAAMM,CAAW,EAAE,MAAM,KAAKN,EAAMQ,CAAW,EAAE,EAAE,EAGrD,MAAMC,EAAyE,CAC7E,CAACZ,EAA6B,EAAE,EAAG,CACjC,OAAQ,CAAC,EACT,KAAM,EAAU,OAChB,OAAQ,CACN,MAAO,CACL,CACE,MAAO,iBACP,IAAK,GACL,SAAU,CACR,MAAO,CAAE,WAAY,OAAQ,MAAO,qBAAsB,YAAa,KAAM,EAC7E,cAAe,gBACf,eAAgB,eAClB,CACF,CACF,CACF,CACF,EACA,CAACA,EAA6B,KAAK,EAAG,CACpC,OAAQ,CAAC,EACT,KAAM,EAAU,MAClB,EACA,CAACA,EAA6B,QAAQ,EAAG,CACvC,OAAQ,CAAC,EACT,KAAM,EAAU,MAClB,EACA,CAACA,EAA6B,QAAQ,EAAG,CACvC,OAAQ,CAAC,EACT,KAAM,EAAU,OAChB,OAAQ,CAAE,YAAa,yBAA0B,CACnD,EACA,CAACA,EAA6B,aAAa,EAAG,CAC5C,OAAQ,CAAC,EACT,KAAM,EAAU,OAChB,OAAQ,CAAE,YAAa,kBAAmB,CAC5C,EACA,CAACA,EAA6B,IAAM,SAAS,EAAG,CAC9C,OAAQ,CAAC,EACT,KAAM,EAAU,OAChB,OAAQ,CAAE,MAAO,CAAE,WAAY,QAAS,KAAMC,GAAiB,KAAM,EAAG,YAAa,SAAU,CACjG,EACA,CAACD,EAA6B,IAAM,QAAQ,EAAG,CAC7C,OAAQ,CAAC,EACT,KAAM,EAAU,OAChB,OAAQ,CAAE,MAAO,CAAE,WAAY,MAAO,KAAMC,GAAiB,KAAM,EAAG,YAAa,QAAS,CAC9F,EACA,CAACD,EAA6B,IAAI,EAAG,CACnC,OAAQ,CAAC,EACT,KAAM,EAAU,MAClB,EACA,CAACA,EAA6B,UAAU,EAAG,CACzC,OAAQ,CAAC,EACT,KAAM,EAAU,MAClB,EACA,CAACA,EAA6B,WAAW,EAAG,CAC1C,OAAQ,CAAC,EACT,KAAM,EAAU,OAClB,CACF,EAEMa,EAAY,IAAIjH,EAAiB,CACrC,KAAM,QACN,OAAQ,OAAO,KAAKgH,CAAU,EAAE,IAAKhsC,IAAS,CAC5C,GAAGgsC,EAAWhsC,CAAG,EACjB,KAAMA,CACR,EAAE,EACF,KAAM,CAAE,2BAA4B,WAAY,CAClD,CAAC,EAEKksC,EAAwB,CAC5B,KAAM,QACN,OAAQ,CACN,CAAE,KAAMd,EAA6B,GAAI,OAAQ,CAAC,EAAG,KAAM,EAAU,OAAQ,OAAQ,CAAC,CAAE,EACxF,CAAE,KAAMA,EAA6B,OAAQ,OAAQ,CAAC,EAAG,KAAM,EAAU,OAAQ,OAAQ,CAAC,CAAE,EAC5F,CAAE,KAAMA,EAA6B,OAAQ,OAAQ,CAAC,EAAG,KAAM,EAAU,OAAQ,OAAQ,CAAC,CAAE,EAC5F,CAAE,KAAMA,EAA6B,SAAU,OAAQ,CAAC,EAAG,KAAM,EAAU,OAAQ,OAAQ,CAAC,CAAE,EAC9F,CAAE,KAAMA,EAA6B,YAAa,OAAQ,CAAC,EAAG,KAAM,EAAU,QAAS,OAAQ,CAAC,CAAE,EAClG,CAAE,KAAMA,EAA6B,UAAW,OAAQ,CAAC,EAAG,KAAM,EAAU,OAAQ,OAAQ,CAAC,CAAE,CACjG,EACA,KAAM,CAAE,2BAA4B,WAAY,EAChD,OAAQ,CACV,EAEMe,EAAW,IAAI,IACrB,UAAW9mC,KAAQkmC,EAAO,CACxBS,EAAW,GAAG,OAAO,KAAK3mC,EAAK,EAAE,EACjC2mC,EAAW,MAAM,OAAO,KAAK3mC,EAAK,KAAK,EACvC2mC,EAAWZ,EAA6B,QAAQ,EAAE,OAAO,KAAK/lC,EAAK,QAAQ,EAC3E2mC,EAAWZ,EAA6B,QAAQ,EAAE,OAAO,KAAK/lC,EAAK,KAAK,EACxE2mC,EAAWZ,EAA6B,aAAa,EAAE,OAAO,KAAK/lC,EAAK,KAAK,EAC7E2mC,EAAW,aAAa,OAAO,KAAK3mC,EAAK,OAAO,EAChD2mC,EAAW,YAAY,OAAO,KAAK3mC,EAAK,KAAK,EAC7C,MAAM+mC,EAAM,KAAK,OAAO,EACxBJ,EAAWZ,EAA6B,IAAI,EAAE,OAAO,KAAKgB,EAAM,GAAM,WAAaA,EAAM,GAAM,QAAU,EAAE,EAC3GJ,EAAWZ,EAA6B,UAAU,EAAE,OAAO,KAAK,KAAK,IAAIgB,EAAM,IAAK,EAAE,CAAC,EACvFJ,EAAWZ,EAA6B,WAAW,EAAE,OAAO,KAAK,KAAK,OAAO,EAAI,EAAG,EAEpF,UAAWiB,KAAQhnC,EAAK,MAAO,CAC7B,MAAM8O,EAAK,GAAG9O,EAAK,OAAOgnC,IAEtBF,EAAS,IAAIh4B,CAAE,IAGnBg4B,EAAS,IAAIh4B,CAAE,EACf+3B,EAAW,OAAO,CAAC,EAAE,OAAO,KAAK,GAAG7mC,EAAK,OAAOgnC,GAAM,EACtDH,EAAW,OAAO,CAAC,EAAE,OAAO,KAAK7mC,EAAK,EAAE,EACxC6mC,EAAW,OAAO,CAAC,EAAE,OAAO,KAAKG,CAAI,EACrCH,EAAW,OAAO,CAAC,EAAE,OAAO,KAAK,KAAK,OAAO,EAAI,GAAG,EACpDA,EAAW,OAAO,CAAC,EAAE,OAAO,KAAK,KAAK,OAAO,EAAI,EAAG,EACpDA,EAAW,OAAO,CAAC,EAAE,OAAO,KAAK,KAAK,KAAK,KAAK,OAAO,EAAI,EAAE,CAAC,IAGlE,OAAAA,EAAW,OAASA,EAAW,OAAO,CAAC,EAAE,OAAO,OAEzC,CAACD,EAAWC,CAAU,CAC/B,CAEA,SAASN,GAAerqC,EAAe,CACrC,MAAM+qC,EAAU,KAAK,OAAO,EACtB7pC,EAAQ,EAAI6pC,EAClB,MAAO,CACL,GAAI,WAAW/qC,IACf,MAAO,WAAWA,IAClB,SAAU,UACV,QAAA+qC,EACA,MAAA7pC,EACA,MAAO,KAAK,OAAO,EACnB,MAAO,KAAK,OAAO,EACnB,MAAO,CAAC,EACR,YAAa,KAAK,OAAO,EAAI,EAC/B,CACF,CAEO,SAAS8pC,IAAqB,CACnC,MAAO,CAAC,IAAIvH,EAAiBuG,EAAK,EAAG,IAAIvG,EAAiBwG,EAAK,CAAC,CAClE,CAGO,SAASgB,GAAoB5Z,EAAQ,GAAI,CAC9C,OAAO6Y,GAAoB7Y,CAAK,EAAE,CAAC,CACrC,CChMO,MAAM6Z,GAA+B,CAC1C,KAAM,WAEN,KAAM,CAAE,2BAA4B,YAAa,EACjD,OAAQ,CACN,CACE,KAAM,QACN,OAAQ,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC9G,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3G,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,E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,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,KAAW,KAAW,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAAW,IACrG,IAAU,IAAU,IAAU,KAAW,IAAU,IAAU,KAAW,IAAU,IAAU,KAC5F,KAAW,IAAU,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACvG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,KAAW,KAAW,KAAW,KAAW,KAAW,KAAW,KAAW,KACjG,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,KAAW,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACtG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IACpG,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAA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AI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KACtG,KAAM,KAAM,KAAM,KAAM,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAC7G,KAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAC1G,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1G,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAC7G,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACzG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5G,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KAC1G,KAAM,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAC1G,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,EACd,EACA,OAAQ,CACN,KAAM,OACR,CACF,EACA,CACE,KAAM,QACN,KAAM,EAAU,KAChB,OAAQ,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAC5G,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAC5G,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAC1G,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAC3G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAC7G,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,GAAI,GAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,GAAI,IAAK,GAC1G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,EAC5G,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAC5G,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAC1G,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5G,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3G,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACzG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1G,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GACjC,EACA,OAAQ,CACN,KAAM,CACJ,KAAM,CACJ,KAAM,CACJ,QACA,uCACA,kCACA,2CACA,gCACA,qCACA,uCACA,0CACA,gDACA,iDACA,4CACA,6CACA,kBACA,yDACA,YACA,iBACA,qBACA,gCACA,eACA,iDACA,+CACA,4BACA,iDACA,yCACA,0BACA,uBACA,2BACA,oBACA,mBACA,+BACA,wBACA,sBACA,8BACA,yBACA,mBACA,qBACA,0BACA,gCACA,oBACA,2CACA,oBACA,sBACA,yBACA,gDACA,+CACA,6BACA,2BACA,kCACA,0BACA,gCACA,2BACA,yBACA,oBACA,uBACA,oBACA,iDACA,0BACA,+BACA,6BACA,oCACA,4BACA,mCACA,gCACA,qCACA,sCACA,sCACA,sCACA,2BACA,yBACA,qBACA,2BACA,sBACA,qBACA,kDACA,qCACA,wDACA,0CACA,qCACA,+CACA,+CACA,mCACA,iCACA,4BACA,oBACA,qBACA,4CACA,8CACA,gDACA,2DACA,0DACA,2CACA,0CACA,sCACA,4CACA,oBACA,aACA,+BACA,sCACA,6CACA,8CACA,0CACA,yCACA,2BACA,0CACA,2CACA,yBACA,mCACA,iCACA,8BACA,kDACA,+CACA,wEACA,yDACA,gEACA,yDACA,kEACA,6CACA,sDACA,4DACA,8DACA,qCACA,oDACA,2DACA,kEACA,+DACA,yEACA,+DACA,gEACA,+BACA,6BACA,kCACA,8BACA,kCACA,iCACA,yCACA,oDACA,+CACA,kDACA,cACA,2CACA,2BACA,mBACA,0BACA,mBACA,uBACA,uBACA,kBACA,wBACA,uBACA,mBACA,8BACA,mBACA,0BACA,0BACA,yCACA,mBACA,8CACA,4BACA,6BACA,cACA,YACA,qBACA,yBACA,oBACA,yCACA,sBACA,iDACA,6CACA,+EACA,uFACA,8EACA,yDACA,gDACA,+BACA,uBACA,8BACA,iCACA,eACA,sBACA,sBACA,kBACA,eACA,uCACA,mCACA,qCACA,iBACA,yBACA,oBACA,qBACA,mDACA,4CACA,gEACA,mEACA,kEACA,6DACA,kEACA,iBACA,gCACA,+BACA,iCACA,qCACA,kEACA,0DACA,qEACA,wEACA,0EACA,2BACA,0DACA,wBACA,8BACA,0CACA,uBACA,8BACA,mBACA,oBACA,eACA,eACA,kBACA,iCACA,uBACA,mCACA,mCACA,2BACA,kCACA,+BACA,2CACA,wCACA,wCACA,uDACA,2CACA,iEACA,4EACA,8EACA,6BACA,6BACA,wBACA,wBACA,gCACA,sCACA,oBACA,qBACA,4BACA,gBACA,8BACA,uCACA,oCACA,qCACA,0CACA,qCACA,uCACA,yCACA,oCACA,mCACA,qDACA,+CACA,sCACA,4BACA,6BACA,4BACA,yCACA,mBACA,mBACA,wBACA,0BACA,yBACA,iCACA,mBACA,mBACA,gBACA,mBACA,wBACA,uBACA,+CACA,8CACA,2BACA,2BACA,gCACA,sCACA,mBACA,wCACA,yCACA,+CACA,wDACA,sBACA,cACA,qBACA,qBACA,uBACA,wBACA,8BACA,wBACA,oBACA,kCACA,8CACA,cACA,uBACA,gCACA,eACA,oCACA,+BACA,oCACA,mDACA,qCACA,uBACA,2CACA,6CACA,gBACA,sBACA,2CACA,4BACA,2CACA,wBACA,8BACA,gCACA,gBACA,iBACA,qBACA,sBACA,gBACA,2CACA,kCACA,wCACA,wBACA,4BACA,yBACA,wBACA,qBACA,kCACA,2BACA,cACA,eACA,iBACA,mBACA,wCACA,YACA,6CACA,UACA,mBACA,aACA,uBACA,6BACA,uBACA,qBACA,oCACA,kBACA,4BACA,gBACA,kBACA,oCACA,UACA,6EACA,oBACA,kBACA,gCACA,kEACA,uDACA,yDACA,eACA,yCACA,wCACA,8CACA,6BACA,6BACA,gCACA,oDACA,qDACA,gEACA,qBACA,4DACA,qCACA,sCACA,8BACA,kCACA,mBACA,+BACA,sBACA,yBACA,+BACA,kBACA,0BACA,4BACA,wBACA,mBACA,kBACA,0BACA,oCACA,4BACA,qBACA,2BACA,qBACA,0BACA,wBACA,0BACA,4BACA,kBACA,+BACA,qBACA,4BACA,sBACA,4BACA,uBACA,kCACA,mBACA,oCACA,oCACA,+BACA,mCACA,mBACA,eACA,kBACA,wBACA,gBACA,kBACA,uBACA,uBACA,+BACA,uCACA,kFACA,kBACA,mBACA,oCACA,+BACA,kCACA,8BACA,mDACA,gBACA,iBACA,mBACA,uBACA,kBACA,oBACA,gBACA,oBACA,qBACA,+BACA,sBACA,mBACA,sBACA,kBACA,gBACA,oBACA,yBACA,oBACA,eACA,sBACA,kBACA,qBACA,oCACA,4BACA,6BACA,kBACA,oBACA,mBACA,mCACA,sBACA,0BACA,qCACA,iDACA,mDACA,sDACA,2EACA,0DACA,sDACA,sDACA,2DACA,uEACA,+DACA,oEACA,gCACA,qCACA,qCACA,4BACA,uCACA,mBACA,oBACA,2BACA,yCACA,6DACA,gEACA,yDACA,mBACA,oBACA,mBACA,eACA,mEACA,qEACA,6DACA,sEACA,8BACA,6CACA,kCACA,wCACA,0BACF,CACF,CACF,CACF,CACF,CACF,CACF,EAEaC,GAAmC,CAC9C,KAAM,WACN,KAAM,CAAE,2BAA4B,YAAa,EACjD,OAAQ,CACN,CACE,KAAM,QACN,OAAQ,CACN,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC9G,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5G,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,CACjF,CACF,EACA,CACE,KAAM,QACN,OAAQ,CACN,QACA,+FACA,uFACA,yFACA,8FACA,wDACA,+BACA,qEACA,qIACA,qGACA,oFACA,oHACA,yEACA,6FACA,6FACA,kHACA,+EACA,mFACA,4EACA,gGACA,8FACA,sHACA,2FACA,yFACA,iHACA,oEACA,yDACA,kDACA,4BACA,0CACA,+BACA,6BACA,kCACA,iCACA,8DACA,+DACA,mCACA,kDACA,+BACA,0CACA,+BACA,6BACA,kCACA,iCACA,8DACA,+DACA,mCACA,kDACA,2BACA,0CACA,6BACA,qEACA,+CACA,+BACA,0DACA,+DACA,6BACA,kCACA,kCACA,iCACA,8DACA,+DACA,mFACA,qEACA,qEACA,2DACA,6IACA,kGACA,kHACA,qDACA,yDACA,uDACA,wFACA,8FACA,sDACA,yEACA,qEACA,gFACA,+EACA,oEACA,6BACA,oCACA,qBACA,qCACA,gEACA,0EACA,8EACA,uFACA,2JACA,0CACA,gFACA,+CACA,kEACA,8DACA,yEACA,kEACA,uEACA,oFACA,qBACA,yEACA,kGACA,qCACA,2EACA,oCACA,0CACA,kDACA,sDACA,+DACA,kDACA,uEACA,6DACA,qDACA,iEACA,gFACA,+CACA,kEACA,8DACA,yEACA,kEACA,6BACA,0CACA,oCACA,qBACA,+BACA,wBACA,0BACA,oFACA,qBACA,qCACA,uCACA,0EACA,mCACA,kDACA,uEACA,wEACA,kDACA,yFACA,sFACA,4FACA,6JACA,oKACA,+EACA,mFACA,wGACA,yHACA,sCACA,uFACA,iKACA,iKACA,qFACA,4FACA,mHACA,sCACA,4FACA,qFACA,mMACA,6IACA,mMACA,kJACA,iGACA,kMACA,iJACA,8CACA,oDACA,yGACA,0GACA,wFACA,sDACA,+DACA,kDACA,yLACA,wIACA,gDACA,sHACA,6NACA,gDACA,yGACA,2FACA,oHACA,8GACA,mEACA,gDACA,sFACA,kGACA,oFACA,sEACA,6EACA,yGACA,gDACA,6GACA,8FACA,wFACA,sDACA,iCACA,wFACA,4FACA,kFACA,4GACA,iGACA,yCACA,8CACA,6DACA,qDACA,uFACA,oDACA,yDACA,uDACA,mJACA,qCACA,yDACA,uDACA,sIACA,yFACA,+EACA,yGACA,mIACA,8CACA,iDACA,mDACA,kDACA,oDACA,oDACA,+CACA,mEACA,yGACA,gDACA,wKACA,sHACA,mDACA,kDACA,8FACA,sHACA,uEACA,2FACA,4GACA,wEACA,qCACA,mGACA,gFACA,gFACA,0HACA,6FACA,oFACA,6GACA,sEACA,wCACA,4DACA,0GACA,mEACA,qEACA,iDACA,mDACA,kDACA,6BACA,oDACA,2CACA,2CACA,gEACA,iDACA,mDACA,kDACA,6BACA,4CACA,gOACA,gDACA,4GACA,uGACA,2DACA,yGACA,kEACA,iHACA,oEACA,yDACA,kDACA,4BACA,0CACA,6BACA,kCACA,mFACA,qEACA,qEACA,2DACA,6IACA,kGACA,kHACA,qDACA,yDACA,uDACA,wFACA,8FACA,sDACA,yEACA,qEACA,gFACA,+EACA,oEACA,6BACA,oCACA,qBACA,gEACA,0EACA,8EACA,uFACA,2JACA,0CACA,6DACA,qDACA,iEACA,gFACA,+CACA,kE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EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC9G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACpE,CACF,EACA,CACE,KAAM,ahC,CACF,CACF,CACF,ECzqCO,IAAKC,IAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,SAAW,WACXA,EAAA,OAAS,SACTA,EAAA,WAAa,aAJHA,IAAAA,IAAA,IAUL,MAAeC,EAIpB,CAOF,CAKO,MAAeC,WAIZD,EAA8C,CACtD,SAA+B,CAC7B,MAAO,UACT,CAIF,CAKO,MAAeE,WAKZ,IAA8C,CACtD,SAA+B,CAC7B,MAAO,QACT,CAYF,CAKO,MAAeC,WAIZ,IAA8C,CACtD,SAA+B,CAC7B,MAAO,YACT,CACF,CCvFO,MAAMC,WAAgCH,EAA4C,CACvF,YAAY5zB,EAAwC,CAClD,MAAO,CACL,MAAO,mCACP,YAAaA,EAAM,MACnB,WAAY,KAAkB,eAC9B,QAAS,MACX,CACF,CACF,CCeO,MAAMg0B,WAA2BC,GAAA,EAAgC,CAGtE,YACE3tC,EACiB4tC,KAA2B,MAAe,EAC3D,CACA,MAAM5tC,CAAgB,EAFL,iBAAA4tC,EAGjB,KAAK,UAAY,IAAIH,GACrB,KAAK,YAAc,CACjB,gBAAiB,KAAO,CAAE,WAAY,KAAkB,YAAa,MAAO,EAAG,GAG/E,kBAAoBI,GACdA,EAAI,QAAQ,YAAY,OACnBA,EAEF,CACL,GAAGA,EACH,OAAQ,CACN,MAAO,OACP,WAAY,KAAkB,YAC9B,MAAO,EACT,CACF,CAEJ,CACF,CAEA,iBAAqC,CACnC,MAAO,CACL,WAAY,KAAkB,WAC9B,YAAa,CACf,CACF,CAEA,MAAM59B,EAAoE,CACxE,MAAM69B,EAA6B,CAAC,EAC9BC,EAAgD,CAAC,EAGvD,UAAWxvC,KAAU0R,EAAQ,QAC3B,GAAI,CAAA1R,EAAO,KAMX,OAFA,KAAK,yBAAyBA,EAAQ0R,EAAQ,UAAU,EAEhD1R,EAAO,WAAY,CACzB,IAAK,OACHwvC,EAAQ,KAAKC,GAAoBzvC,EAAQ0R,CAAO,CAAC,EACjD,MACF,IAAK,mBACH89B,EAAQ,KAAK3G,GAAU7oC,EAAQ0R,CAAO,CAAC,EACvC,MACF,IAAK,cACH89B,EAAQ,KAAKE,GAAc1vC,EAAQ0R,CAAO,CAAC,EAC3C,MACF,KAAK,KAAkB,YACrB89B,EAAQ,KAAK,KAAK,wBAAwBxvC,EAAQ0R,CAAO,CAAC,EAC1D,MACF,IAAK,kBACH89B,EAAQ,KAAK,KAAK,eAAexvC,EAAQ0R,CAAO,CAAC,EACjD,MACF,IAAK,aACH89B,EAAQ,KAAK,KAAK,WAAWxvC,EAAQ0R,CAAO,CAAC,EAC7C,MACF,IAAK,cACH89B,EAAQ,KAAK,KAAK,gBAAgBxvC,CAAM,CAAC,EACzC,MACF,IAAK,QACHwvC,EAAQ,KAAK,KAAK,MAAM99B,CAAO,CAAC,EAChC,MACF,IAAK,YACH89B,EAAQ,KAAK,KAAK,cAAcxvC,EAAQ0R,CAAO,CAAC,EAChD,MACF,IAAK,mBAGH,MAAMyJ,EAAQ,KAAK,iBAAiBnb,EAAQ0R,CAAO,EACnDyJ,EAAQq0B,EAAQ,KAAKr0B,CAAK,EAAIo0B,EAAe,KAAKvvC,CAAM,EACxD,MAEF,IAAK,eAAgB,CACnB,IAAI4e,EAAa;AAAA,EACjB,GAAI5e,EAAO,OACT,UAAWynB,KAASznB,EAAO,OACzB4e,GAAc,GAAG6I,EAAM,CAAC,KAAKA,EAAM,CAAC;AAAA,EAGxCznB,EAAO,WAAa,KAAkB,WACtCA,EAAO,WAAa4e,CACtB,CAEA,QACE2wB,EAAe,KAAKvvC,CAAM,CAC9B,CAGF,GAAIuvC,EAAe,OAAQ,CACzB,MAAMI,EAAc,CAClB,GAAGj+B,EACH,QAAS69B,CACX,EACAC,EAAQ,KAAK,MAAM,MAAMG,CAAW,CAAC,EAGvC,OAAIH,EAAQ,SAAW,KACdvM,GAAA,IAAG,CAAE,KAAM,CAAC,CAAE,CAAC,KAGjB2M,GAAA,GAAM,GAAGJ,CAAO,CACzB,CAEA,yBAAyBr0B,EAAiB00B,EAAwB,CAC5D10B,EAAM,SACRA,EAAM,OAAS,KAAK,YAAY,QAAQA,EAAM,OAAQ00B,CAAU,GAE9D10B,EAAM,QACRA,EAAM,MAAQ,KAAK,YAAY,QAAQA,EAAM,MAAO00B,CAAU,GAE5D10B,EAAM,aACRA,EAAM,WAAa,KAAK,YAAY,QAAQA,EAAM,WAAY00B,CAAU,GAEtE10B,EAAM,cACRA,EAAM,YAAc,KAAK,YAAY,QAAQA,EAAM,YAAa00B,CAAU,GAExE10B,EAAM,aACRA,EAAM,WAAa,KAAK,YAAY,QAAQA,EAAM,WAAY00B,CAAU,GAEtE10B,EAAM,kBACRA,EAAM,gBAAkB,KAAK,YAAY,QAAQA,EAAM,gBAAiB00B,CAAU,EAEtF,CAEA,uBAAuB10B,EAAiB00B,EAAkC,CACxE,YAAK,yBAAyB10B,EAAO00B,CAAU,EACxC10B,CACT,CAEA,wBAAwBnb,EAAkB8oC,EAAgE,CACxG,MAAMgH,EAAS,KAAK,0BAA0BhH,EAAI,MAAO9oC,EAAO,OAAS,EAAE,EACrEgqB,EAAY,IAAIlF,GAAegrB,CAAM,EAC3C,OAAA9lB,EAAU,KAAO,CAAE,UAAWuhB,GAAU,WAAY,KAC7CtI,GAAA,IAAG,CAAE,IAAKjjC,EAAO,MAAO,KAAM,CAACgqB,CAAS,CAAE,CAAC,EAAE,QAAKpX,GAAA,GAAM,GAAG,CAAC,CACrE,CAEA,0BAA0BgK,EAAkBkY,EAAkC,CAC5E,IAAIib,EAAanzB,EAAM,KAAK,QAAQ,EACpC,MAAMozB,EAAKpzB,EAAM,GAAG,QAAQ,EACtBkzB,EAAS,CAAC,EACVx0B,GAAQ00B,EAAKD,GAAcjb,EAEjC,QAASvY,EAAI,EAAGA,EAAIuY,EAAOvY,IACzBuzB,EAAO,KAAK,CACV,KAAMC,EACN,KAAM,kEACN,KAAM,CAAC,OAAQ,QAAQ,CACzB,CAAC,EACDA,GAAcz0B,EAGhB,OAAOw0B,CACT,CAEA,oBAAoB30B,EAAiB,CACnC,MAAMsvB,EAAWtvB,EAAM,YAAc,mBAErC,OAAIA,EAAM,MACDsvB,EAAW,OAAStvB,EAAM,MAG5BsvB,CACT,CAEA,gBAAiB,CACf,OAAO,QAAQ,QAAQ,CACrB,OAAQ,UACR,QAAS,wBACX,CAAC,CACH,CAEA,cAAoC,CAClC,OAAK,KAAK,iBACR,KAAK,eAAiB,KAAK,YAAY,WAAW,GAG7C,KAAK,cACd,CAEA,eAAezqC,EAAkB0R,EAAoE,CACnG,MAAMyJ,EAAQnb,EAAO,aAAe,GAC9BiwC,EAAoB,KAAK,YAAY,QAAQ90B,EAAO0wB,GAAyB,CAAE,MAAA1wB,EAAO,aAAc,GAAI,CAAC,CAAC,EAE1G0B,EADWwwB,GAAgB4C,CAAiB,EAC3B,IAAKluB,IAAU,CAAE,MAAOA,EAAK,KAAM,KAAMA,EAAK,IAAK,EAAE,EACtEiI,EAAY,IAAIlF,GAAejI,CAAK,EAE1C,SAAOomB,GAAA,IAAG,CAAE,KAAM,CAACjZ,CAAS,CAAE,CAAC,EAAE,QAAKpX,GAAA,GAAM,GAAG,CAAC,CAClD,CAEA,WAAW5S,EAAkB0R,EAAoE,CAC/F,MAAMlM,EAAOxF,EAAO,OAAO,MAAQ,SACnC,IAAI21B,EACJ,OAAQnwB,EAAM,CACZ,IAAK,SACHmwB,EAASgY,GAAoB3tC,EAAO,OAAO,KAAK,EAChD,MACF,IAAK,WACH21B,EAAS8Y,GAAmB,EAC5B,MACF,IAAK,eACH9Y,EAAS,CAAC+Y,GAAoB1uC,EAAO,OAAO,KAAK,CAAC,EAClD,MACF,QACE,MAAM,IAAI,MAAM,+BAA+BwF,GAAM,CACzD,CAEA,SAAOy9B,GAAA,IAAG,CAAE,KAAMtN,CAAO,CAAC,EAAE,QAAK/iB,GAAA,GAAM,GAAG,CAAC,CAC7C,CAEA,gBAAgB5S,EAAiD,CAC/D,MAAMuD,EAAOvD,EAAO,eAAiB4uC,GAAqBD,GAC1D,SAAO1L,GAAA,IAAG,CAAE,KAAM,CAAC,CAAE,GAAG1/B,EAAM,MAAOvD,EAAO,KAAM,CAAC,CAAE,CAAC,EAAE,QAAK4S,GAAA,GAAM,GAAG,CAAC,CACzE,CAEA,MAAMlB,EAAoE,CACxE,MAAMlO,EAAQ,IAAI0jC,EAAiB,CACjC,KAAM,CACJ,2BAA4B,OAC9B,EACA,OAAQ,CACN,CAAE,KAAM,SAAU,EAClB,CAAE,KAAM,QAAS,EACjB,CAAE,KAAM,cAAe,EACvB,CAAE,KAAM,eAAgB,EACxB,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,YAAa,EACrB,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,YAAa,CACvB,CACF,CAAC,EACKgJ,EAAgBx+B,EAAQ,QAAQ,CAAC,EAAE,WAAa,GAChDy+B,EAAe,cACfjK,EAAQ,KAAK,IAAI,EAAI,IAAO,GAAK,GACjCkK,EAAQ,CAAC,SAAU,SAAU,EAAE,EAC/BC,EAAc,CAAC,EAAG,EAAG,CAAC,EAE5B,QAAS9zB,EAAI,EAAGA,EAAI2zB,EAAe3zB,IACjC/Y,EAAM,IAAI,CACR,QAAS2sC,EAAe,QACxB,OAAQA,GAAgB,IAAQ5zB,GAChC,aAAcA,IAAM,EAAI,GAAK4zB,EAAe,IAC5C,cAAe,aAAa5zB,IAC5B,YAAa,WAAWA,IACxB,UAAW2pB,EAAQ3pB,EAAI,IACvB,SAAU,IACV,KAAM,CACJ,CAAE,IAAK,cAAe,MAAO,MAAO,EACpC,CAAE,IAAK,mBAAoB,MAAO,GAAI,EACtC,CAAE,IAAK,WAAY,MAAO,UAAUA,MAAO,CAC7C,EACA,YAAa,CACX,CAAE,IAAK,cAAe,MAAO,mBAAoB,EACjD,CAAE,IAAK,eAAgB,MAAO,UAAUA,GAAI,EAC5C,CAAE,IAAK,KAAM,MAAO,SAAU,EAC9B,CAAE,IAAK,iBAAkB,MAAO,EAAM,CACxC,EACA,KACEA,EAAI,IAAM,EACN,CACE,CAAE,UAAW2pB,EAAQ3pB,EAAI,IAAK,OAAQ,CAAC,CAAE,IAAK,MAAO,MAAO,iBAAkB,CAAC,CAAE,EACjF,CAAE,UAAW2pB,EAAQ3pB,EAAI,IAAM,IAAK,OAAQ,CAAC,CAAE,IAAK,OAAQ,MAAO,KAAM,CAAC,CAAE,CAC9E,EACA,CAAC,EACP,KAAMA,IAAM,EAAI,SAAW6zB,EAAM,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAM,MAAM,CAAC,EACzE,WAAYC,EAAY,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAY,MAAM,CAAC,CACxE,CAAC,EAGH,SAAOpN,GAAA,IAAG,CAAE,KAAM,CAACz/B,CAAK,CAAE,CAAC,EAAE,QAAKoP,GAAA,GAAM,GAAG,CAAC,CAC9C,CAEA,cAAc5S,EAAkB0R,EAAoE,CAClG,GAAI,CACF,MAAMnO,EAAO,KAAK,MAAMvD,EAAO,iBAAmB,IAAI,EAAE,IAAKkZ,GAAW,CACtE,MAAM8F,EAAIwJ,GAAYtP,CAAC,EACvB,OAAA8F,EAAE,MAAQhf,EAAO,MACVgf,CACT,CAAC,EACD,SAAOikB,GAAA,IAAG,CAAE,KAAA1/B,EAAM,MAAO,GAAa,IAAK,CAAC,EAAE,QAAKqP,GAAA,GAAM,GAAG,CAAC,CAC/D,OAAS09B,EAAP,CACA,SAAOrN,GAAA,IAAG,CACR,KAAM,CAAC,EACP,MAAOqN,aAAc,MAAQA,EAAK,IAAI,MAAM,cAAc,CAC5D,CAAC,EAAE,QAAK19B,GAAA,GAAM,GAAG,CAAC,CACpB,CACF,CAEA,iBAAiB5S,EAAkB0R,EAA2E,CAC5G,KAAM,CAAE,UAAA6+B,CAAU,EAAIvwC,EAEtB,GAAIuwC,IAAc,eAChB,OAAO,KAIT,IADoBvwC,EAAO,aAAe,MACtB,GAAI,CACtB,GAAIuwC,IAAc,qBAChB,MAAM,IAAI,MAAM,0EAA0E,EAE1F,SAAOC,GAAA,GAAW,IAAM,IAAI,MAAM,yDAAyD,CAAC,EAIhG,OAAO,IACT,CACF,CAEA,SAASd,GAAc1vC,EAAkB8oC,EAAgE,CACvG,MAAM2H,EAAM,QAAQzwC,EAAO,cAC3B,SAAO0wC,GAAA,MACL,MAAc,EACX,IAAID,CAAG,EACP,KAAMtgB,GAAQ,CACb,MAAM3sB,EAAQ,IAAIshB,GAAeqL,CAAG,EACpC,MAAO,CACL,MAAO,GAAa,KACpB,KAAM,CAAC3sB,CAAK,CACd,CACF,CAAC,CACL,CACF,CAEA,IAAImtC,GAAmB,IAEvB,SAASlB,GAAoBzvC,EAAkB8oC,EAAgE,CAC7G,GAAI,CAAC9oC,EAAO,QACV,MAAM,IAAI,MAAM,wBAAwB,EAE1C,SAAO,OAAkB,EAAE,cAAc,CACvC,KAAM,CACJ,MAAO+rC,GAAiB,OACxB,UAAW,WACX,KAAM/rC,EAAO,OACf,EACA,IAAK,cAAc2wC,MACrB,CAAC,CACH,CCrXO,MAAM,GAAS,IAAIhwC,GAAiBwuC,EAAkB,EAC1D,gBAAgBttC,EAAY,EAC5B,eAAeZ,EAAW,EAC1B,qBAAqBqC,EAAiB,EACtC,cAAc,CACb,MAAO,QACP,KAAM,UACN,KAAMgoC,GACN,GAAI,OACN,CAAC,C,oICDH,IAAIsF,EAAwD,KAGrD,MAAMC,GAAwB,IAAI,QAI5BC,GAAqD1nC,GAAsC,CACtG,MAAM2nC,EAA8DzuC,GAAU,CAK5E,MAAM0uC,EAAmBJ,GAAoB,aAC7C,OAEE,oBAACI,EAAiB,SAAjB,KAA4BjvC,IAAU,oBAACqH,EAAA,CAAW,GAAG9G,EAAO,MAAOP,GAAM,GAAI,CAAG,CAErF,EAEA,OAAAgvC,EAAU,YAAc,aAAa3nC,EAAU,eAC/C,qBAAqB2nC,EAAW3nC,CAAS,EAElC2nC,CACT,EAGaE,GAAuD7nC,GAAsC,CACxG,MAAM2nC,EAA+DzuC,GAAU,CAK7E,MAAM0uC,EAAmBJ,GAAoB,KAC7C,OAEE,iBAACI,EAAiB,SAAjB,KAA4BjvC,IAAU,iBAACqH,EAAA,CAAW,GAAG9G,EAAO,MAAAP,EAAA,CAAc,CAAG,CAElF,EAEA,OAAAgvC,EAAU,YAAc,aAAa3nC,EAAU,eAC/C,KAAqB2nC,EAAW3nC,CAAS,EAElC2nC,CACT,EAIO,SAASG,IAAyB,CACvC,OAAO,WAAWN,GAAoB,YAAY,EAAE,EACtD,CAGO,SAASO,IAA2B,CACzC,SAAO,eAAWP,GAAoB,IAAY,CACpD,CAWO,SAASQ,GAAahuC,EAAuC,CAClE,MAAMrB,EAAQmvC,GAAS,EAEvB,IAAIG,EAAyCR,GAAsB,IAAIztC,CAAS,EAEhF,OAAKiuC,IACHA,EAAuB,cAAcjuC,CAAS,EAC9CytC,GAAsB,IAAIztC,EAAWiuC,CAAoB,GAGpDA,EAAqBtvC,CAAK,CACnC,CAoBO,SAASuvC,EACdluC,KACGmuC,EACa,CAChB,MAAMxvC,EAAQovC,GAAU,EAExB,IAAIE,EAAyCR,GAAsB,IAAIztC,CAAS,EAEhF,OAAKiuC,IACHA,EAAuB,IAAQjuC,EAAW,CAAE,QAAS,EAAG,CAAC,EACzDytC,GAAsB,IAAIztC,EAAWiuC,CAAoB,GAGpDA,EAAqBtvC,EAAO,GAAGwvC,CAAmB,CAC3D,CAMO,MAAMC,GAAoBzvC,IAC/B6uC,EAAmB,MAAM,cAAc7uC,CAAsB,EAEtD,IAAM,CACX6uC,EAAmB,IACrB,E","sources":["webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/dataquery.gen.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/makeClassES5Compatible.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/plugin.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/datasource.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/ConfigEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Layout/utils/responsiveness.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Layout/Stack/Stack.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/MetaDataInspector.tsx","webpack://grafana/./.yarn/__virtual__/react-use-virtual-743d8a9981/2/yarn/cache/react-use-npm-17.4.0-0ef4521544-98566c4817.zip/node_modules/react-use/esm/useMountedState.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-743d8a9981/2/yarn/cache/react-use-npm-17.4.0-0ef4521544-98566c4817.zip/node_modules/react-use/esm/useAsyncFn.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-743d8a9981/2/yarn/cache/react-use-npm-17.4.0-0ef4521544-98566c4817.zip/node_modules/react-use/esm/useAsync.js","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/utils/reactUtils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Icon/utils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Icon/Icon.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/FieldValidationMessage.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/utils/tooltipUtils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Portal/Portal.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/InlineLabel.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/InlineField.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/types/icon.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Spinner/Spinner.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/DropdownIndicator.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/themes/stylesFactory.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/themes/mixins.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/commonStyles.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Input/Input.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/IndicatorsContainer.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/InputControl.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/IconButton/IconButton.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/getSelectStyles.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/MultiValue.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/SelectContainer.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/CustomScrollbar/ScrollIndicators.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/CustomScrollbar/CustomScrollbar.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/SelectMenu.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/SelectOptionGroup.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/utils/useDelayedSwitch.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/transitions/FadeTransition.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/transitions/SlideOutTransition.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/SingleValue.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/ValueContainer.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/resetSelectStyles.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/utils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/SelectBase.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Select/Select.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Switch/Switch.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/TextArea/TextArea.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/StreamingClientEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/RandomWalkEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/utils/useAsyncDependency.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/ErrorBoundary/ErrorWithStack.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/LoadingPlaceholder/LoadingPlaceholder.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Monaco/ReactMonacoEditorLazy.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Monaco/types.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Monaco/suggestions.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Monaco/CodeEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/CSVContentEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/CSVFileEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Button/Button.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/constants.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/CSVWaveEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/ErrorEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/GrafanaLiveEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/NodeGraphEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/PredictablePulseEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/datetime/moment_wrapper.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/dataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/field/fieldComparers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/dataframe/ArrayDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/dataframe/DataFrameJSON.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/dataframe/processDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Layout/Box/Box.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Text/TruncatedText.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Text/utils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Text/Text.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Alert/Alert.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/RawFrameEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/Label.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/Legend.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/components/Forms/FieldSet.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/SimulationSchemaForm.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/SimulationQueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/components/USAQueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/labels.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/Registry.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/ids.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/fieldTypeMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/data.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/fieldReducer.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/compareValues.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/fieldValueMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/field/fieldState.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/text/string.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/nameMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/predicates.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/refIdMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/simpleFieldMatcher.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/valueMatchers/equalMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/valueMatchers/nullMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/valueMatchers/numericMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/valueMatchers/rangeMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers/valueMatchers/regexMatchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/matchers.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/transformers/ids.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/transformers/joinByField.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/transformations/transformers/joinDataFrames.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/legend.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/dataframe/StreamingDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/vector.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/vector/vectorToArray.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/vector/FunctionalVector.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/vector/CircularVector.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/fieldParser.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/dataframe/MutableDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/dataframe/CircularDataFrame.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/csv.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/LogIpsum.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/runStreams.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/QueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/TestInfoTab.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/query.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/variables.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/live.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/metricTree.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/utils/nodeGraph.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/fieldColor.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/testData/serviceMapResponse.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/nodeGraphUtils.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/testData/flameGraphResponse.ts","webpack://grafana/./.yarn/__virtual__/@grafana-data-virtual-e61603e994/1/packages/grafana-data/src/types/variables.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/variables.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/datasource.ts","webpack://grafana/./.yarn/__virtual__/@grafana-plugins-grafana-testdata-datasource-virtual-abcd447352/1/public/app/plugins/datasource/grafana-testdata-datasource/module.tsx","webpack://grafana/./.yarn/__virtual__/@grafana-ui-virtual-1f7b1db036/1/packages/grafana-ui/src/themes/ThemeContext.tsx"],"sourcesContent":["// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTSTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nimport * as common from '@grafana/schema';\n\nexport enum TestDataQueryType {\n  Annotations = 'annotations',\n  Arrow = 'arrow',\n  CSVContent = 'csv_content',\n  CSVFile = 'csv_file',\n  CSVMetricValues = 'csv_metric_values',\n  DataPointsOutsideRange = 'datapoints_outside_range',\n  ExponentialHeatmapBucketData = 'exponential_heatmap_bucket_data',\n  FlameGraph = 'flame_graph',\n  GrafanaAPI = 'grafana_api',\n  LinearHeatmapBucketData = 'linear_heatmap_bucket_data',\n  Live = 'live',\n  Logs = 'logs',\n  ManualEntry = 'manual_entry',\n  NoDataPoints = 'no_data_points',\n  NodeGraph = 'node_graph',\n  PredictableCSVWave = 'predictable_csv_wave',\n  PredictablePulse = 'predictable_pulse',\n  RandomWalk = 'random_walk',\n  RandomWalkTable = 'random_walk_table',\n  RandomWalkWithError = 'random_walk_with_error',\n  RawFrame = 'raw_frame',\n  ServerError500 = 'server_error_500',\n  Simulation = 'simulation',\n  SlowQuery = 'slow_query',\n  StreamingClient = 'streaming_client',\n  TableStatic = 'table_static',\n  Trace = 'trace',\n  USA = 'usa',\n  VariablesQuery = 'variables-query',\n}\n\nexport interface StreamingQuery {\n  bands?: number;\n  noise: number;\n  speed: number;\n  spread: number;\n  type: ('signal' | 'logs' | 'fetch');\n  url?: string;\n}\n\nexport interface PulseWaveQuery {\n  offCount?: number;\n  offValue?: number;\n  onCount?: number;\n  onValue?: number;\n  timeStep?: number;\n}\n\nexport interface SimulationQuery {\n  config?: Record<string, unknown>;\n  key: {\n    type: string;\n    tick: number;\n    uid?: string;\n  };\n  last?: boolean;\n  stream?: boolean;\n}\n\nexport interface NodesQuery {\n  count?: number;\n  type?: ('random' | 'response' | 'random edges');\n}\n\nexport interface USAQuery {\n  fields?: Array<string>;\n  mode?: string;\n  period?: string;\n  states?: Array<string>;\n}\n\nexport const defaultUSAQuery: Partial<USAQuery> = {\n  fields: [],\n  states: [],\n};\n\nexport interface CSVWave {\n  labels?: string;\n  name?: string;\n  timeStep?: number;\n  valuesCSV?: string;\n}\n\n/**\n * TODO: Should this live here given it's not used in the dataquery?\n */\nexport interface Scenario {\n  description?: string;\n  hideAliasField?: boolean;\n  id: string;\n  name: string;\n  stringInput: string;\n}\n\nexport interface TestData extends common.DataQuery {\n  alias?: string;\n  channel?: string;\n  csvContent?: string;\n  csvFileName?: string;\n  csvWave?: Array<CSVWave>; // TODO can we prevent partial from being generated\n  /**\n   * Drop percentage (the chance we will lose a point 0-100)\n   */\n  dropPercent?: number;\n  errorType?: ('server_panic' | 'frontend_exception' | 'frontend_observable');\n  flamegraphDiff?: boolean;\n  labels?: string;\n  levelColumn?: boolean;\n  lines?: number;\n  nodes?: NodesQuery;\n  points?: Array<Array<(string | number)>>;\n  pulseWave?: PulseWaveQuery;\n  rawFrameContent?: string;\n  scenarioId?: TestDataQueryType;\n  seriesCount?: number;\n  sim?: SimulationQuery;\n  spanCount?: number;\n  stream?: StreamingQuery;\n  stringInput?: string;\n  usa?: USAQuery;\n}\n\nexport const defaultTestData: Partial<TestData> = {\n  csvWave: [],\n  points: [],\n  scenarioId: TestDataQueryType.RandomWalk,\n};\n","/**\n * @beta\n * Proxies a ES6 class so that it can be used as a base class for an ES5 class\n */\nexport function makeClassES5Compatible<T extends abstract new (...args: ConstructorParameters<T>) => InstanceType<T>>(\n  ES6Class: T\n): T {\n  return new Proxy(ES6Class, {\n    // ES5 code will call it like a function using super\n    apply(target, self, argumentsList) {\n      if (typeof Reflect === 'undefined' || !Reflect.construct) {\n        alert('Browser is too old');\n      }\n\n      return Reflect.construct(target, argumentsList, self.constructor);\n    },\n  });\n}\n","import { ComponentType } from 'react';\n\nimport { KeyValue } from './data';\nimport { IconName } from './icon';\n\n/** Describes plugins life cycle status */\nexport enum PluginState {\n  alpha = 'alpha', // Only included if `enable_alpha` config option is true\n  beta = 'beta', // Will show a warning banner\n  stable = 'stable', // Will not show anything\n  deprecated = 'deprecated', // Will continue to work -- but not show up in the options to add\n}\n\n/** Describes {@link https://grafana.com/docs/grafana/latest/plugins | type of plugin} */\nexport enum PluginType {\n  panel = 'panel',\n  datasource = 'datasource',\n  app = 'app',\n  renderer = 'renderer',\n  secretsmanager = 'secretsmanager',\n}\n\n/** Describes status of {@link https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/ | plugin signature} */\nexport enum PluginSignatureStatus {\n  internal = 'internal', // core plugin, no signature\n  valid = 'valid', // signed and accurate MANIFEST\n  invalid = 'invalid', // invalid signature\n  modified = 'modified', // valid signature, but content mismatch\n  missing = 'missing', // missing signature file\n}\n\n/** Describes level of {@link https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/#plugin-signature-levels/ | plugin signature level} */\nexport enum PluginSignatureType {\n  grafana = 'grafana',\n  commercial = 'commercial',\n  community = 'community',\n  private = 'private',\n  core = 'core',\n}\n\n/** Describes error code returned from Grafana plugins API call */\nexport enum PluginErrorCode {\n  missingSignature = 'signatureMissing',\n  invalidSignature = 'signatureInvalid',\n  modifiedSignature = 'signatureModified',\n}\n\n/** Describes error returned from Grafana plugins API call */\nexport interface PluginError {\n  errorCode: PluginErrorCode;\n  pluginId: string;\n  pluginType?: PluginType;\n}\n\nexport interface AngularMeta {\n  detected: boolean;\n  hideDeprecation: boolean;\n}\n\nexport interface PluginMeta<T extends KeyValue = {}> {\n  id: string;\n  name: string;\n  type: PluginType;\n  info: PluginMetaInfo;\n  includes?: PluginInclude[];\n  state?: PluginState;\n  aliasIDs?: string[];\n\n  // System.load & relative URLS\n  module: string;\n  baseUrl: string;\n\n  // Define plugin requirements\n  dependencies?: PluginDependencies;\n\n  // Filled in by the backend\n  jsonData?: T;\n  secureJsonData?: KeyValue;\n  secureJsonFields?: KeyValue<boolean>;\n  enabled?: boolean;\n  defaultNavUrl?: string;\n  hasUpdate?: boolean;\n  enterprise?: boolean;\n  latestVersion?: string;\n  pinned?: boolean;\n  signature?: PluginSignatureStatus;\n  signatureType?: PluginSignatureType;\n  signatureOrg?: string;\n  live?: boolean;\n  angular?: AngularMeta;\n}\n\ninterface PluginDependencyInfo {\n  id: string;\n  name: string;\n  version: string;\n  type: PluginType;\n}\n\nexport interface PluginDependencies {\n  grafanaDependency?: string;\n  grafanaVersion: string;\n  plugins: PluginDependencyInfo[];\n}\n\nexport enum PluginIncludeType {\n  dashboard = 'dashboard',\n  page = 'page',\n\n  // Only valid for apps\n  panel = 'panel',\n  datasource = 'datasource',\n}\n\nexport interface PluginInclude {\n  type: PluginIncludeType;\n  name: string;\n  path?: string;\n  icon?: string;\n\n  // \"Admin\", \"Editor\" or \"Viewer\". If set then the include will only show up in the navigation if the user has the required roles.\n  role?: string;\n\n  // Adds the \"page\" or \"dashboard\" type includes to the navigation if set to `true`.\n  addToNav?: boolean;\n\n  // Angular app pages\n  component?: string;\n}\n\ninterface PluginMetaInfoLink {\n  name: string;\n  url: string;\n  target?: '_blank' | '_self' | '_parent' | '_top';\n}\n\nexport interface PluginBuildInfo {\n  time?: number;\n  repo?: string;\n  branch?: string;\n  hash?: string;\n  number?: number;\n  pr?: number;\n}\n\nexport interface ScreenshotInfo {\n  name: string;\n  path: string;\n}\n\nexport interface PluginMetaInfo {\n  author: {\n    name: string;\n    url?: string;\n  };\n  description: string;\n  links: PluginMetaInfoLink[];\n  logos: {\n    large: string;\n    small: string;\n  };\n  build?: PluginBuildInfo;\n  screenshots: ScreenshotInfo[];\n  updated: string;\n  version: string;\n}\n\nexport interface PluginConfigPageProps<T extends PluginMeta> {\n  plugin: GrafanaPlugin<T>;\n  query: KeyValue; // The URL query parameters\n}\n\nexport interface PluginConfigPage<T extends PluginMeta> {\n  title: string; // Display\n  icon?: IconName;\n  id: string; // Unique, in URL\n\n  body: ComponentType<PluginConfigPageProps<T>>;\n}\n\nexport class GrafanaPlugin<T extends PluginMeta = PluginMeta> {\n  // Meta is filled in by the plugin loading system\n  meta: T;\n\n  // This is set if the plugin system had errors loading the plugin\n  loadError?: boolean;\n\n  // Config control (app/datasource)\n  angularConfigCtrl?: any;\n\n  // Show configuration tabs on the plugin page\n  configPages?: Array<PluginConfigPage<T>>;\n\n  // Tabs on the plugin page\n  addConfigPage(tab: PluginConfigPage<T>) {\n    if (!this.configPages) {\n      this.configPages = [];\n    }\n    this.configPages.push(tab);\n    return this;\n  }\n\n  /**\n   * @deprecated -- this is no longer necessary and will be removed\n   */\n  setChannelSupport() {\n    console.warn('[deprecation] plugin is using ignored option: setChannelSupport', this.meta);\n    return this;\n  }\n\n  constructor() {\n    this.meta = {} as T;\n  }\n}\n","import { ComponentType } from 'react';\nimport { Observable } from 'rxjs';\n\nimport { makeClassES5Compatible } from '../utils/makeClassES5Compatible';\n\nimport { ScopedVars } from './ScopedVars';\nimport { AnnotationEvent, AnnotationQuery, AnnotationSupport } from './annotations';\nimport { CoreApp } from './app';\nimport { KeyValue, LoadingState, TableData, TimeSeries } from './data';\nimport { DataFrame, DataFrameDTO } from './dataFrame';\nimport { PanelData } from './panel';\nimport { GrafanaPlugin, PluginMeta } from './plugin';\nimport { DataQuery } from './query';\nimport { RawTimeRange, TimeRange } from './time';\nimport { CustomVariableSupport, DataSourceVariableSupport, StandardVariableSupport } from './variables';\n\nimport { AdHocVariableFilter, DataSourceRef, WithAccessControlMetadata } from '.';\n\nexport interface DataSourcePluginOptionsEditorProps<\n  JSONData extends DataSourceJsonData = DataSourceJsonData,\n  SecureJSONData = {},\n> {\n  options: DataSourceSettings<JSONData, SecureJSONData>;\n  onOptionsChange: (options: DataSourceSettings<JSONData, SecureJSONData>) => void;\n}\n\n// Utility type to extract the query type TQuery from a class extending DataSourceApi<TQuery, TOptions>\nexport type DataSourceQueryType<DSType> = DSType extends DataSourceApi<infer TQuery, any> ? TQuery : never;\n\n// Utility type to extract the options type TOptions from a class extending DataSourceApi<TQuery, TOptions>\nexport type DataSourceOptionsType<DSType> = DSType extends DataSourceApi<any, infer TOptions> ? TOptions : never;\n\nexport class DataSourcePlugin<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataSourceQueryType<DSType>,\n  TOptions extends DataSourceJsonData = DataSourceOptionsType<DSType>,\n  TSecureOptions = {},\n> extends GrafanaPlugin<DataSourcePluginMeta<TOptions>> {\n  components: DataSourcePluginComponents<DSType, TQuery, TOptions, TSecureOptions> = {};\n\n  constructor(public DataSourceClass: DataSourceConstructor<DSType, TQuery, TOptions>) {\n    super();\n  }\n\n  setConfigEditor(editor: ComponentType<DataSourcePluginOptionsEditorProps<TOptions, TSecureOptions>>) {\n    this.components.ConfigEditor = editor;\n    return this;\n  }\n\n  setConfigCtrl(ConfigCtrl: any) {\n    this.angularConfigCtrl = ConfigCtrl;\n    return this;\n  }\n\n  setQueryCtrl(QueryCtrl: any) {\n    this.components.QueryCtrl = QueryCtrl;\n    return this;\n  }\n\n  /** @deprecated -- register the annotation support in the instance constructor */\n  setAnnotationQueryCtrl(AnnotationsQueryCtrl: any) {\n    this.components.AnnotationsQueryCtrl = AnnotationsQueryCtrl;\n    return this;\n  }\n\n  setQueryEditor(QueryEditor: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.QueryEditor = QueryEditor;\n    return this;\n  }\n\n  /** @deprecated Use `setQueryEditor` instead. When using Explore `props.app` is equal to `CoreApp.Explore` */\n  setExploreQueryField(ExploreQueryField: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreQueryField = ExploreQueryField;\n    return this;\n  }\n\n  /** @deprecated Use `setQueryEditor` instead. */\n  setExploreMetricsQueryField(ExploreQueryField: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreMetricsQueryField = ExploreQueryField;\n    return this;\n  }\n\n  /** @deprecated Use `setQueryEditor` instead. */\n  setExploreLogsQueryField(ExploreQueryField: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreLogsQueryField = ExploreQueryField;\n    return this;\n  }\n\n  setQueryEditorHelp(QueryEditorHelp: ComponentType<QueryEditorHelpProps<TQuery>>) {\n    this.components.QueryEditorHelp = QueryEditorHelp;\n    return this;\n  }\n\n  /**\n   * @deprecated prefer using `setQueryEditorHelp`\n   */\n  setExploreStartPage(ExploreStartPage: ComponentType<QueryEditorHelpProps<TQuery>>) {\n    return this.setQueryEditorHelp(ExploreStartPage);\n  }\n\n  /**\n   * @deprecated -- prefer using {@link StandardVariableSupport} or {@link CustomVariableSupport} or {@link DataSourceVariableSupport} in data source instead\n   */\n  setVariableQueryEditor(VariableQueryEditor: any) {\n    this.components.VariableQueryEditor = VariableQueryEditor;\n    return this;\n  }\n\n  setMetadataInspector(MetadataInspector: ComponentType<MetadataInspectorProps<DSType, TQuery, TOptions>>) {\n    this.components.MetadataInspector = MetadataInspector;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: any) {\n    this.angularConfigCtrl = pluginExports.ConfigCtrl;\n\n    this.components.QueryCtrl = pluginExports.QueryCtrl;\n    this.components.AnnotationsQueryCtrl = pluginExports.AnnotationsQueryCtrl;\n    this.components.ExploreQueryField = pluginExports.ExploreQueryField;\n    this.components.QueryEditor = pluginExports.QueryEditor;\n    this.components.QueryEditorHelp = pluginExports.QueryEditorHelp;\n    this.components.VariableQueryEditor = pluginExports.VariableQueryEditor;\n  }\n}\n\nexport interface DataSourcePluginMeta<T extends KeyValue = {}> extends PluginMeta<T> {\n  builtIn?: boolean; // Is this for all\n  metrics?: boolean;\n  logs?: boolean;\n  annotations?: boolean;\n  alerting?: boolean;\n  tracing?: boolean;\n  mixed?: boolean;\n  hasQueryHelp?: boolean;\n  category?: string;\n  queryOptions?: PluginMetaQueryOptions;\n  sort?: number;\n  streaming?: boolean;\n  unlicensed?: boolean;\n  backend?: boolean;\n  isBackend?: boolean;\n}\n\ninterface PluginMetaQueryOptions {\n  cacheTimeout?: boolean;\n  maxDataPoints?: boolean;\n  minInterval?: boolean;\n}\ninterface PluginQueryCachingConfig {\n  enabled?: boolean;\n  TTLMs?: number;\n}\n\nexport interface DataSourcePluginComponents<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n  TSecureOptions = {},\n> {\n  QueryCtrl?: any;\n  AnnotationsQueryCtrl?: any;\n  VariableQueryEditor?: any;\n  QueryEditor?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  /** @deprecated it will be removed in a future release and `QueryEditor` will be used instead. */\n  ExploreQueryField?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  /** @deprecated it will be removed in a future release and `QueryEditor` will be used instead. */\n  ExploreMetricsQueryField?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  /** @deprecated it will be removed in a future release and `QueryEditor` will be used instead. */\n  ExploreLogsQueryField?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  QueryEditorHelp?: ComponentType<QueryEditorHelpProps<TQuery>>;\n  ConfigEditor?: ComponentType<DataSourcePluginOptionsEditorProps<TOptions, TSecureOptions>>;\n  MetadataInspector?: ComponentType<MetadataInspectorProps<DSType, TQuery, TOptions>>;\n}\n\n// Only exported for tests\nexport interface DataSourceConstructor<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n> {\n  new (instanceSettings: DataSourceInstanceSettings<TOptions>, ...args: any[]): DSType;\n}\n\n// VariableSupport is hoisted up to its own type to fix the wonky intermittent\n// 'variables is references directly or indirectly' error\ntype VariableSupport<TQuery extends DataQuery, TOptions extends DataSourceJsonData> =\n  | StandardVariableSupport<DataSourceApi<TQuery, TOptions>>\n  | CustomVariableSupport<DataSourceApi<TQuery, TOptions>>\n  | DataSourceVariableSupport<DataSourceApi<TQuery, TOptions>>;\n\n/**\n * The main data source abstraction interface, represents an instance of a data source\n *\n * Although this is a class, datasource implementations do not *yet* need to extend it.\n * As such, we can not yet add functions with default implementations.\n */\nabstract class DataSourceApi<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n  TQueryImportConfiguration extends Record<string, object> = {},\n> {\n  /**\n   *  Set in constructor\n   */\n  readonly name: string;\n\n  /**\n   *  Set in constructor\n   */\n  readonly id: number;\n\n  /**\n   *  Set in constructor\n   */\n  readonly type: string;\n\n  /**\n   *  Set in constructor\n   */\n  readonly uid: string;\n\n  /**\n   *  min interval range\n   */\n  interval?: string;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<TOptions>) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.type = instanceSettings.type;\n    this.meta = instanceSettings.meta;\n    this.cachingConfig = instanceSettings.cachingConfig;\n    this.uid = instanceSettings.uid;\n  }\n\n  /**\n   * @deprecated use DataSourceWithQueryImportSupport and DataSourceWithQueryExportSupport\n   */\n  async importQueries?(queries: DataQuery[], originDataSource: DataSourceApi<DataQuery>): Promise<TQuery[]>;\n\n  /**\n   * Returns configuration for importing queries from other data sources\n   */\n  getImportQueryConfiguration?(): TQueryImportConfiguration;\n\n  /**\n   * Initializes a datasource after instantiation\n   */\n  init?: () => void;\n\n  /**\n   * Query for data, and optionally stream results\n   */\n  abstract query(request: DataQueryRequest<TQuery>): Promise<DataQueryResponse> | Observable<DataQueryResponse>;\n\n  /**\n   * Test & verify datasource settings & connection details (returning TestingStatus)\n   *\n   * When verification fails - errors specific to the data source should be handled here and converted to\n   * a TestingStatus object. Unknown errors and HTTP errors can be re-thrown and will be handled here:\n   * public/app/features/datasources/state/actions.ts\n   */\n  abstract testDatasource(): Promise<TestDataSourceResponse>;\n\n  /**\n   * This function is not called automatically unless running within the DataSourceWithBackend\n   *\n   * @deprecated\n   */\n  filterQuery?(query: TQuery): boolean;\n\n  /**\n   *  Get hints for query improvements\n   */\n  getQueryHints?(query: TQuery, results: any[], ...rest: any): QueryHint[];\n\n  /**\n   * Convert a query to a simple text string\n   */\n  getQueryDisplayText?(query: TQuery): string;\n\n  /**\n   * Variable query action.\n   */\n  metricFindQuery?(query: any, options?: LegacyMetricFindQueryOptions): Promise<MetricFindValue[]>;\n\n  /**\n   * Get tag keys for adhoc filters\n   */\n  getTagKeys?(options?: DataSourceGetTagKeysOptions): Promise<MetricFindValue[]>;\n\n  /**\n   * Get tag values for adhoc filters\n   */\n  getTagValues?(options: DataSourceGetTagValuesOptions): Promise<MetricFindValue[]>;\n\n  /**\n   * Set after constructor call, as the data source instance is the most common thing to pass around\n   * we attach the components to this instance for easy access\n   */\n  components?: DataSourcePluginComponents<DataSourceApi<TQuery, TOptions>, TQuery, TOptions>;\n\n  /**\n   * static information about the datasource\n   */\n  meta: DataSourcePluginMeta;\n\n  /**\n   * Information about the datasource's query caching configuration\n   * When the caching feature is disabled, this config will always be falsy\n   */\n  cachingConfig?: PluginQueryCachingConfig;\n\n  /**\n   * Used by alerting to check if query contains template variables\n   */\n  targetContainsTemplate?(query: TQuery): boolean;\n\n  /**\n   * Used in explore\n   */\n  modifyQuery?(query: TQuery, action: QueryFixAction): TQuery;\n\n  /** Get an identifier object for this datasource instance */\n  getRef(): DataSourceRef {\n    return { type: this.type, uid: this.uid };\n  }\n\n  /**\n   * Used in explore\n   */\n  languageProvider?: any;\n\n  getVersion?(optionalOptions?: any): Promise<string>;\n\n  interpolateVariablesInQueries?(queries: TQuery[], scopedVars: ScopedVars, filters?: AdHocVariableFilter[]): TQuery[];\n\n  /**\n   * An annotation processor allows explicit control for how annotations are managed.\n   *\n   * It is only necessary to configure an annotation processor if the default behavior is not desirable\n   */\n  annotations?: AnnotationSupport<TQuery>;\n\n  /**\n   * Can be optionally implemented to allow datasource to be a source of annotations for dashboard.\n   * This function will only be called if an angular {@link AnnotationsQueryCtrl} is configured and\n   * the {@link annotations} is undefined\n   *\n   * @deprecated -- prefer using {@link AnnotationSupport}\n   */\n  annotationQuery?(options: AnnotationQueryRequest<TQuery>): Promise<AnnotationEvent[]>;\n\n  /**\n   * Defines new variable support\n   * @alpha -- experimental\n   */\n  variables?: VariableSupport<TQuery, TOptions>;\n\n  /*\n   * Optionally, use this method to set default values for a query\n   * @alpha -- experimental\n   */\n  getDefaultQuery?(app: CoreApp): Partial<TQuery>;\n}\n\n/**\n * Options argument to DataSourceAPI.getTagKeys\n */\nexport interface DataSourceGetTagKeysOptions {\n  /**\n   * The other existing filters or base filters. New in v10.3\n   */\n  filters: AdHocVariableFilter[];\n  /**\n   * Context time range. New in v10.3\n   */\n  timeRange?: TimeRange;\n}\n\n/**\n * Options argument to DataSourceAPI.getTagValues\n */\nexport interface DataSourceGetTagValuesOptions {\n  key: string;\n  /**\n   * The other existing filters or base filters. New in v10.3\n   */\n  filters: AdHocVariableFilter[];\n  /**\n   * Context time range. New in v10.3\n   */\n  timeRange?: TimeRange;\n}\n\nexport interface MetadataInspectorProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n> {\n  datasource: DSType;\n\n  // All Data from this DataSource\n  data: DataFrame[];\n}\n\nexport interface LegacyMetricFindQueryOptions {\n  searchFilter?: string;\n  scopedVars?: ScopedVars;\n  range?: TimeRange;\n  variable?: { name: string };\n}\n\nexport interface QueryEditorProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n  TVQuery extends DataQuery = TQuery,\n> {\n  datasource: DSType;\n  query: TVQuery;\n  onRunQuery: () => void;\n  onChange: (value: TVQuery) => void;\n  onBlur?: () => void;\n  onAddQuery?: (query: TQuery) => void;\n  /**\n   * Contains query response filtered by refId of QueryResultBase and possible query error\n   */\n  data?: PanelData;\n  range?: TimeRange;\n  /**\n   * @deprecated This is not used anymore and will be removed in a future release.\n   */\n  exploreId?: string;\n  history?: Array<HistoryItem<TQuery>>;\n  queries?: DataQuery[];\n  app?: CoreApp;\n}\n\n// TODO: not really needed but used as type in some data sources and in DataQueryRequest\nexport enum ExploreMode {\n  Logs = 'Logs',\n  Metrics = 'Metrics',\n  Tracing = 'Tracing',\n}\n\n/**\n * @deprecated use QueryEditorProps instead\n */\nexport type ExploreQueryFieldProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData,\n> = QueryEditorProps<DSType, TQuery, TOptions>;\n\nexport interface QueryEditorHelpProps<TQuery extends DataQuery = DataQuery> {\n  datasource: DataSourceApi<TQuery>;\n  query: TQuery;\n  onClickExample: (query: TQuery) => void;\n  exploreId?: any;\n}\n\n/**\n * Starting in v6.2 DataFrame can represent both TimeSeries and TableData\n */\nexport type LegacyResponseData = TimeSeries | TableData | any;\n\nexport type DataQueryResponseData = DataFrame | DataFrameDTO | LegacyResponseData;\n\nexport interface DataQueryResponse {\n  /**\n   * The response data.  When streaming, this may be empty\n   * or a partial result set\n   */\n  data: DataQueryResponseData[];\n\n  /**\n   * When returning multiple partial responses or streams\n   * Use this key to inform Grafana how to combine the partial responses\n   * Multiple responses with same key are replaced (latest used)\n   */\n  key?: string;\n\n  /**\n   * Optionally include error info along with the response data\n   * @deprecated use errors instead -- will be removed in Grafana 10+\n   */\n  error?: DataQueryError;\n\n  /**\n   * Optionally include multiple errors for different targets\n   */\n  errors?: DataQueryError[];\n\n  /**\n   * Use this to control which state the response should have\n   * Defaults to LoadingState.Done if state is not defined\n   */\n  state?: LoadingState;\n\n  /**\n   * traceIds related to the response, if available\n   */\n  traceIds?: string[];\n}\n\nexport interface TestDataSourceResponse {\n  status: string;\n  message: string;\n  error?: Error;\n  details?: { message?: string; verboseMessage?: string };\n}\n\nexport enum DataQueryErrorType {\n  Cancelled = 'cancelled',\n  Timeout = 'timeout',\n  Unknown = 'unknown',\n}\n\nexport interface DataQueryError {\n  data?: {\n    /**\n     * Short information about the error\n     */\n    message?: string;\n    /**\n     * Detailed information about the error. Only returned when app_mode is development.\n     */\n    error?: string;\n  };\n  message?: string;\n  status?: number;\n  statusText?: string;\n  refId?: string;\n  traceId?: string;\n  type?: DataQueryErrorType;\n}\n\nexport interface DataQueryRequest<TQuery extends DataQuery = DataQuery> {\n  requestId: string; // Used to identify results and optionally cancel the request in backendSrv\n\n  interval: string;\n  intervalMs: number;\n  maxDataPoints?: number;\n  range: TimeRange;\n  scopedVars: ScopedVars;\n  targets: TQuery[];\n  timezone: string;\n  app: CoreApp | string;\n\n  cacheTimeout?: string | null;\n  queryCachingTTL?: number | null;\n  skipQueryCache?: boolean;\n  rangeRaw?: RawTimeRange;\n  timeInfo?: string; // The query time description (blue text in the upper right)\n  panelId?: number;\n  dashboardUID?: string;\n\n  /** Filters to dynamically apply to all queries */\n  filters?: AdHocVariableFilter[];\n\n  // Request Timing\n  startTime: number;\n  endTime?: number;\n\n  // Explore state used by various datasources\n  liveStreaming?: boolean;\n\n  // Make it possible to hide support queries from the inspector\n  hideFromInspector?: boolean;\n\n  // Used to correlate multiple related requests\n  queryGroupId?: string;\n}\n\nexport interface DataQueryTimings {\n  dataProcessingTime: number;\n}\n\nexport interface QueryFix {\n  title?: string;\n  label: string;\n  action?: QueryFixAction;\n}\n\nexport type QueryFixType = 'ADD_FILTER' | 'ADD_FILTER_OUT' | 'ADD_STRING_FILTER' | 'ADD_STRING_FILTER_OUT';\nexport interface QueryFixAction {\n  query?: string;\n  preventSubmit?: boolean;\n  /**\n   * The type of action to perform. Will be passed to the data source to handle.\n   */\n  type: QueryFixType | string;\n  /**\n   * A key value map of options that will be passed. Usually used to pass e.g. the label and value.\n   */\n  options?: KeyValue<string>;\n  /**\n   * An optional single row data frame containing the row that triggered the the QueryFixAction.\n   */\n  frame?: DataFrame;\n}\n\nexport interface QueryHint {\n  type: string;\n  label: string;\n  fix?: QueryFix;\n}\n\nexport interface MetricFindValue {\n  text: string;\n  value?: string | number;\n  expandable?: boolean;\n}\n\nexport interface DataSourceJsonData {\n  authType?: string;\n  defaultRegion?: string;\n  profile?: string;\n  manageAlerts?: boolean;\n  alertmanagerUid?: string;\n}\n\n/**\n * Data Source instance edit model.  This is returned from:\n *  /api/datasources\n */\nexport interface DataSourceSettings<T extends DataSourceJsonData = DataSourceJsonData, S = {}>\n  extends WithAccessControlMetadata {\n  id: number;\n  uid: string;\n  orgId: number;\n  name: string;\n  typeLogoUrl: string;\n  type: string;\n  typeName: string;\n  access: string;\n  url: string;\n  user: string;\n  /**\n   *  @deprecated -- use jsonData to store information related to database.\n   *  This field should only be used by Elasticsearch and Influxdb.\n   */\n  database: string;\n  basicAuth: boolean;\n  basicAuthUser: string;\n  isDefault: boolean;\n  jsonData: T;\n  secureJsonData?: S;\n  secureJsonFields: KeyValue<boolean>;\n  readOnly: boolean;\n  withCredentials: boolean;\n  version?: number;\n}\n\n/**\n * Frontend settings model that is passed to Datasource constructor. This differs a bit from the model above\n * as this data model is available to every user who has access to a data source (Viewers+).  This is loaded\n * in bootData (on page load), or from: /api/frontend/settings\n */\nexport interface DataSourceInstanceSettings<T extends DataSourceJsonData = DataSourceJsonData> {\n  id: number;\n  uid: string;\n  type: string;\n  name: string;\n  meta: DataSourcePluginMeta;\n  cachingConfig?: PluginQueryCachingConfig;\n  readOnly: boolean;\n  url?: string;\n  jsonData: T;\n  username?: string;\n  password?: string; // when access is direct, for some legacy datasources\n  /**\n   *  @deprecated -- use jsonData to store information related to database.\n   *  This field should only be used by Elasticsearch and Influxdb.\n   */\n  database?: string;\n  isDefault?: boolean;\n  access: 'direct' | 'proxy'; // Currently we support 2 options - direct (browser) and proxy (server)\n\n  /**\n   * This is the full Authorization header if basic auth is enabled.\n   * Only available here when access is Browser (direct), when access is Server (proxy)\n   * The basic auth header, username & password is never exposed to browser/Frontend\n   * so this will be empty then.\n   */\n  basicAuth?: string;\n  withCredentials?: boolean;\n\n  /** When the name+uid are based on template variables, maintain access to the real values */\n  rawRef?: DataSourceRef;\n}\n\n/**\n * @deprecated -- use {@link DataSourceInstanceSettings} instead\n */\nexport interface DataSourceSelectItem {\n  name: string;\n  value: string | null;\n  meta: DataSourcePluginMeta;\n}\n\n/**\n * Options passed to the datasource.annotationQuery method. See docs/plugins/developing/datasource.md\n *\n * @deprecated -- use {@link AnnotationSupport}\n */\nexport interface AnnotationQueryRequest<MoreOptions = {}> {\n  range: TimeRange;\n  rangeRaw: RawTimeRange;\n  // Should be DataModel but cannot import that here from the main app. Needs to be moved to package first.\n  dashboard: any;\n  annotation: AnnotationQuery;\n}\n\nexport interface HistoryItem<TQuery extends DataQuery = DataQuery> {\n  ts: number;\n  query: TQuery;\n}\n\nabstract class LanguageProvider {\n  abstract datasource: DataSourceApi<any, any>;\n  abstract request: (url: string, params?: any) => Promise<any>;\n\n  /**\n   * Returns startTask that resolves with a task list when main syntax is loaded.\n   * Task list consists of secondary promises that load more detailed language features.\n   */\n  abstract start: (timeRange?: TimeRange) => Promise<Array<Promise<any>>>;\n  startTask?: Promise<any[]>;\n}\n\n//@ts-ignore\nLanguageProvider = makeClassES5Compatible(LanguageProvider);\nexport { LanguageProvider };\n\n//@ts-ignore\nDataSourceApi = makeClassES5Compatible(DataSourceApi);\n\nexport { DataSourceApi };\n","// Libraries\nimport React, { PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\n\ntype Props = DataSourcePluginOptionsEditorProps;\n\n/**\n * Empty Config Editor -- settings to save\n */\nexport class ConfigEditor extends PureComponent<Props> {\n  render() {\n    return <div />;\n  }\n}\n","import { CSSInterpolation } from '@emotion/css';\n\nimport { GrafanaTheme2, ThemeBreakpointsKey } from '@grafana/data';\n\n/**\n * Type that represents a prop that can be responsive.\n *\n * @example To turn a prop like `margin: number` responsive, change it to `margin: ResponsiveProp<number>`.\n */\nexport type ResponsiveProp<T> = T | Responsive<T>;\n\ntype Responsive<T> = {\n  xs: T;\n  sm?: T;\n  md?: T;\n  lg?: T;\n  xl?: T;\n  xxl?: T;\n};\n\nfunction breakpointCSS<T>(\n  theme: GrafanaTheme2,\n  prop: Responsive<T>,\n  getCSS: (val: T) => CSSInterpolation,\n  key: ThemeBreakpointsKey\n) {\n  const value = prop[key];\n  if (value !== undefined && value !== null) {\n    return {\n      [theme.breakpoints.up(key)]: getCSS(value),\n    };\n  }\n  return;\n}\n/**\n * Function that converts a ResponsiveProp object into CSS\n *\n * @param theme Grafana theme object\n * @param prop Prop as it is passed to the component\n * @param getCSS Function that returns the css block for the prop\n * @returns The CSS block repeated for each breakpoint\n *\n * @example To get the responsive css equivalent of `margin && { margin }`, you can write `getResponsiveStyle(theme, margin, (val) => { margin: val })`\n */\nexport function getResponsiveStyle<T>(\n  theme: GrafanaTheme2,\n  prop: ResponsiveProp<T> | undefined,\n  getCSS: (val: T) => CSSInterpolation\n): CSSInterpolation {\n  if (prop === undefined || prop === null) {\n    return null;\n  }\n  if (typeof prop !== 'object' || !('xs' in prop)) {\n    return getCSS(prop);\n  }\n\n  return [\n    breakpointCSS(theme, prop, getCSS, 'xs'),\n    breakpointCSS(theme, prop, getCSS, 'sm'),\n    breakpointCSS(theme, prop, getCSS, 'md'),\n    breakpointCSS(theme, prop, getCSS, 'lg'),\n    breakpointCSS(theme, prop, getCSS, 'xl'),\n    breakpointCSS(theme, prop, getCSS, 'xxl'),\n  ];\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, ThemeSpacingTokens } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { AlignItems, Direction, FlexProps, JustifyContent, Wrap } from '../types';\nimport { ResponsiveProp, getResponsiveStyle } from '../utils/responsiveness';\n\ninterface StackProps extends FlexProps, Omit<React.HTMLAttributes<HTMLElement>, 'className' | 'style'> {\n  gap?: ResponsiveProp<ThemeSpacingTokens>;\n  alignItems?: ResponsiveProp<AlignItems>;\n  justifyContent?: ResponsiveProp<JustifyContent>;\n  direction?: ResponsiveProp<Direction>;\n  wrap?: ResponsiveProp<Wrap>;\n  children?: React.ReactNode;\n}\n\nexport const Stack = React.forwardRef<HTMLDivElement, StackProps>((props, ref) => {\n  const { gap = 1, alignItems, justifyContent, direction, wrap, children, grow, shrink, basis, flex, ...rest } = props;\n  const styles = useStyles2(getStyles, gap, alignItems, justifyContent, direction, wrap, grow, shrink, basis, flex);\n\n  return (\n    <div ref={ref} className={styles.flex} {...rest}>\n      {children}\n    </div>\n  );\n});\n\nStack.displayName = 'Stack';\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  gap: StackProps['gap'],\n  alignItems: StackProps['alignItems'],\n  justifyContent: StackProps['justifyContent'],\n  direction: StackProps['direction'],\n  wrap: StackProps['wrap'],\n  grow: StackProps['grow'],\n  shrink: StackProps['shrink'],\n  basis: StackProps['basis'],\n  flex: StackProps['flex']\n) => {\n  return {\n    flex: css([\n      {\n        display: 'flex',\n      },\n      getResponsiveStyle(theme, direction, (val) => ({\n        flexDirection: val,\n      })),\n      getResponsiveStyle(theme, wrap, (val) => ({\n        flexWrap: val,\n      })),\n      getResponsiveStyle(theme, alignItems, (val) => ({\n        alignItems: val,\n      })),\n      getResponsiveStyle(theme, justifyContent, (val) => ({\n        justifyContent: val,\n      })),\n      getResponsiveStyle(theme, gap, (val) => ({\n        gap: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, grow, (val) => ({\n        flexGrow: val,\n      })),\n      getResponsiveStyle(theme, shrink, (val) => ({\n        flexShrink: val,\n      })),\n      getResponsiveStyle(theme, basis, (val) => ({\n        flexBasis: val,\n      })),\n      getResponsiveStyle(theme, flex, (val) => ({\n        flex: val,\n      })),\n    ]),\n  };\n};\n","import React from 'react';\n\nimport { MetadataInspectorProps } from '@grafana/data';\nimport { Stack } from '@grafana/ui';\n\nimport { TestData } from './dataquery.gen';\nimport { TestDataDataSource } from './datasource';\n\nexport type Props = MetadataInspectorProps<TestDataDataSource, TestData>;\n\nexport function MetaDataInspector({ data }: Props) {\n  return (\n    <Stack direction=\"column\">\n      <div>Meta data inspector for the TestData data source.</div>\n\n      {data.map((frame, index) => (\n        <>\n          <div>Frame: {index}</div>\n          <div>\n            Custom meta: <br />\n            {JSON.stringify(frame.meta?.custom, null, 2)}\n          </div>\n        </>\n      ))}\n    </Stack>\n  );\n}\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import { __assign } from \"tslib\";\nimport { useCallback, useRef, useState } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = useRef(0);\n    var isMounted = useMountedState();\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var callback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        if (!state.loading) {\n            set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        }\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\n","import { useEffect } from 'react';\nimport useAsyncFn from './useAsyncFn';\nexport default function useAsync(fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useAsyncFn(fn, deps, {\n        loading: true,\n    }), state = _a[0], callback = _a[1];\n    useEffect(function () {\n        callback();\n    }, [callback]);\n    return state;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props extends Omit<HTMLProps<HTMLDivElement>, 'css'> {\n  children: ReactNode | ReactNode[];\n}\n\nexport const InlineFieldRow = ({ children, className, ...htmlProps }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      label: 'InlineFieldRow',\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      alignContent: 'flex-start',\n      rowGap: theme.spacing(0.5),\n    }),\n  };\n};\n","import React, { ReactElement } from 'react';\n\n/** Returns the ID value of the first, and only, child element  */\nexport function getChildId(children: ReactElement): string | undefined {\n  let inputId: unknown;\n\n  // Get the first, and only, child to retrieve form input's id\n  const child = React.Children.only(children);\n\n  // Retrieve input's id to apply on the label for correct click interaction\n  // For some components (like Select), we want to get the ID from a different prop\n  if ('id' in child?.props) {\n    inputId = child.props.id;\n  } else if ('inputId' in child.props) {\n    inputId = child?.props.inputId;\n  }\n\n  return typeof inputId === 'string' ? inputId : undefined;\n}\n\n/**\n * Given react node or function returns element accordingly\n *\n * @param itemToRender\n * @param props props to be passed to the function if item provided as such\n */\nexport function renderOrCallToRender<TProps = {}>(\n  itemToRender: ((props: TProps) => React.ReactNode) | React.ReactNode,\n  props?: TProps\n): React.ReactNode {\n  if (React.isValidElement(itemToRender) || typeof itemToRender === 'string' || typeof itemToRender === 'number') {\n    return itemToRender;\n  }\n\n  if (typeof itemToRender === 'function' && props) {\n    return itemToRender(props);\n  }\n\n  throw new Error(`${itemToRender} is not a React element nor a function that returns React element`);\n}\n","import { IconName, IconSize } from '../../types/icon';\n\nconst alwaysMonoIcons: IconName[] = [\n  'grafana',\n  'favorite',\n  'heart-break',\n  'heart',\n  'panel-add',\n  'library-panel',\n  'circle-mono',\n];\n\nexport function getIconSubDir(name: IconName, type: string): string {\n  if (name?.startsWith('gf-')) {\n    return 'custom';\n  } else if (alwaysMonoIcons.includes(name)) {\n    return 'mono';\n  } else if (type === 'default') {\n    return 'unicons';\n  } else if (type === 'solid') {\n    return 'solid';\n  } else {\n    return 'mono';\n  }\n}\n\n/* Transform string with px to number and add 2 pxs as path in svg is 2px smaller */\nexport function getSvgSize(size: IconSize) {\n  switch (size) {\n    case 'xs':\n      return 12;\n    case 'sm':\n      return 14;\n    case 'md':\n      return 16;\n    case 'lg':\n      return 18;\n    case 'xl':\n      return 24;\n    case 'xxl':\n      return 36;\n    case 'xxxl':\n      return 48;\n  }\n}\n\nlet iconRoot: string | undefined;\n\nexport function getIconRoot(): string {\n  if (iconRoot) {\n    return iconRoot;\n  }\n\n  const grafanaPublicPath = typeof window !== 'undefined' && window.__grafana_public_path__;\n  if (grafanaPublicPath) {\n    iconRoot = grafanaPublicPath + 'img/icons/';\n  } else {\n    iconRoot = 'public/img/icons/';\n  }\n\n  return iconRoot;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { GrafanaTheme2, isIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { IconName, IconType, IconSize } from '../../types/icon';\n\nimport { getIconRoot, getIconSubDir, getSvgSize } from './utils';\n\nexport interface IconProps extends Omit<React.SVGProps<SVGElement>, 'onLoad' | 'onError' | 'ref'> {\n  name: IconName;\n  size?: IconSize;\n  type?: IconType;\n  title?: string;\n}\n\nconst getIconStyles = (theme: GrafanaTheme2) => {\n  return {\n    icon: css({\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      label: 'Icon',\n      // line-height: 0; is needed for correct icon alignment in Safari\n      lineHeight: 0,\n      verticalAlign: 'middle',\n    }),\n    orange: css({\n      fill: theme.v1.palette.orange,\n    }),\n  };\n};\n\nexport const Icon = React.forwardRef<SVGElement, IconProps>(\n  ({ size = 'md', type = 'default', name, className, style, title = '', ...rest }, ref) => {\n    const styles = useStyles2(getIconStyles);\n\n    if (!isIconName(name)) {\n      console.warn('Icon component passed an invalid icon name', name);\n    }\n\n    // handle the deprecated 'fa fa-spinner'\n    const iconName: IconName = name === 'fa fa-spinner' ? 'spinner' : name;\n\n    const iconRoot = getIconRoot();\n    const svgSize = getSvgSize(size);\n    const svgHgt = svgSize;\n    const svgWid = name.startsWith('gf-bar-align') ? 16 : name.startsWith('gf-interp') ? 30 : svgSize;\n    const subDir = getIconSubDir(iconName, type);\n    const svgPath = `${iconRoot}${subDir}/${iconName}.svg`;\n\n    const composedClassName = cx(\n      styles.icon,\n      className,\n      type === 'mono' ? { [styles.orange]: name === 'favorite' } : '',\n      iconName === 'spinner' && 'fa-spin'\n    );\n\n    return (\n      <SVG\n        innerRef={ref}\n        src={svgPath}\n        width={svgWid}\n        height={svgHgt}\n        title={title}\n        className={composedClassName}\n        style={style}\n        {...rest}\n      />\n    );\n  }\n);\n\nIcon.displayName = 'Icon';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport interface FieldValidationMessageProps {\n  /** Override component style */\n  className?: string;\n  horizontal?: boolean;\n}\n\nexport const FieldValidationMessage = ({\n  children,\n  horizontal,\n  className,\n}: React.PropsWithChildren<FieldValidationMessageProps>) => {\n  const styles = useStyles2(getFieldValidationMessageStyles);\n  const cssName = cx(horizontal ? styles.horizontal : styles.vertical, className);\n\n  return (\n    <div role=\"alert\" className={cssName}>\n      <Icon className={styles.fieldValidationMessageIcon} name=\"exclamation-triangle\" />\n      {children}\n    </div>\n  );\n};\n\nexport const getFieldValidationMessageStyles = (theme: GrafanaTheme2) => {\n  const baseStyle = `\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding: ${theme.spacing(0.5, 1)};\n      color: ${theme.colors.error.contrastText};\n      background: ${theme.colors.error.main};\n      border-radius: ${theme.shape.radius.default};\n      position: relative;\n      display: inline-block;\n      align-self: flex-start;\n\n      a {\n        color: ${theme.colors.error.contrastText};\n        text-decoration: underline;\n      }\n\n      a:hover {\n        text-decoration: none;\n      }\n    `;\n\n  return {\n    vertical: css(baseStyle, {\n      margin: theme.spacing(0.5, 0, 0, 0),\n\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: '9px',\n        top: '-5px',\n        width: 0,\n        height: 0,\n        borderWidth: '0 4px 5px 4px',\n        borderColor: `transparent transparent ${theme.colors.error.main} transparent`,\n        borderStyle: 'solid',\n      },\n    }),\n    horizontal: css(baseStyle, {\n      marginLeft: '10px',\n\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: '-5px',\n        top: '9px',\n        width: 0,\n        height: 0,\n        borderWidth: '4px 5px 4px 0',\n        borderColor: 'transparent #e02f44 transparent transparent',\n        borderStyle: 'solid',\n      },\n    }),\n    fieldValidationMessageIcon: css({\n      marginRight: theme.spacing(),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { colorManipulator, GrafanaTheme2 } from '@grafana/data';\n\nexport function buildTooltipTheme(\n  theme: GrafanaTheme2,\n  tooltipBg: string,\n  toggletipBorder: string,\n  tooltipText: string,\n  tooltipPadding: { topBottom: number; rightLeft: number }\n) {\n  return {\n    arrow: css({\n      height: '1rem',\n      width: '1rem',\n      position: 'absolute',\n      pointerEvents: 'none',\n\n      '&::before': {\n        borderStyle: 'solid',\n        content: '\"\"',\n        display: 'block',\n        height: 0,\n        margin: 'auto',\n        width: 0,\n      },\n\n      '&::after': {\n        borderStyle: 'solid',\n        content: '\"\"',\n        display: 'block',\n        height: 0,\n        margin: 'auto',\n        position: 'absolute',\n        width: 0,\n      },\n    }),\n    container: css({\n      backgroundColor: tooltipBg,\n      borderRadius: theme.shape.radius.default,\n      border: `1px solid ${toggletipBorder}`,\n      boxShadow: theme.shadows.z2,\n      color: tooltipText,\n      fontSize: theme.typography.bodySmall.fontSize,\n      padding: theme.spacing(tooltipPadding.topBottom, tooltipPadding.rightLeft),\n      transition: 'opacity 0.3s',\n      zIndex: theme.zIndex.tooltip,\n      maxWidth: '400px',\n      overflowWrap: 'break-word',\n\n      \"&[data-popper-interactive='false']\": {\n        pointerEvents: 'none',\n      },\n\n      \"&[data-popper-placement*='bottom'] > div[data-popper-arrow='true']\": {\n        left: 0,\n        marginTop: '-7px',\n        top: 0,\n\n        '&::before': {\n          borderColor: `transparent transparent ${toggletipBorder} transparent`,\n          borderWidth: '0 8px 7px 8px',\n          position: 'absolute',\n          top: '-1px',\n        },\n\n        '&::after': {\n          borderColor: `transparent transparent ${tooltipBg} transparent`,\n          borderWidth: '0 8px 7px 8px',\n        },\n      },\n\n      \"&[data-popper-placement*='top'] > div[data-popper-arrow='true']\": {\n        bottom: 0,\n        left: 0,\n        marginBottom: '-14px',\n\n        '&::before': {\n          borderColor: `${toggletipBorder} transparent transparent transparent`,\n          borderWidth: '7px 8px 0 7px',\n          position: 'absolute',\n          top: '1px',\n        },\n\n        '&::after': {\n          borderColor: `${tooltipBg} transparent transparent transparent`,\n          borderWidth: '7px 8px 0 7px',\n        },\n      },\n\n      \"&[data-popper-placement*='right'] > div[data-popper-arrow='true']\": {\n        left: 0,\n        marginLeft: '-10px',\n\n        '&::before': {\n          borderColor: `transparent ${toggletipBorder} transparent transparent`,\n          borderWidth: '7px 6px 7px 0',\n        },\n\n        '&::after': {\n          borderColor: `transparent ${tooltipBg} transparent transparent`,\n          borderWidth: '6px 7px 7px 0',\n          left: '2px',\n          top: '1px',\n        },\n      },\n\n      \"&[data-popper-placement*='left'] > div[data-popper-arrow='true']\": {\n        marginRight: '-11px',\n        right: 0,\n\n        '&::before': {\n          borderColor: `transparent transparent transparent ${toggletipBorder}`,\n          borderWidth: '7px 0 6px 7px',\n        },\n\n        '&::after': {\n          borderColor: `transparent transparent transparent ${tooltipBg}`,\n          borderWidth: '6px 0 5px 5px',\n          left: '1px',\n          top: '1px',\n        },\n      },\n\n      code: {\n        border: 'none',\n        display: 'inline',\n        background: colorManipulator.darken(tooltipBg, 0.1),\n        color: tooltipText,\n      },\n\n      pre: {\n        background: colorManipulator.darken(tooltipBg, 0.1),\n        color: tooltipText,\n      },\n\n      a: {\n        color: tooltipText,\n        textDecoration: 'underline',\n      },\n\n      'a:hover': {\n        textDecoration: 'none',\n      },\n    }),\n    headerClose: css({\n      color: theme.colors.text.secondary,\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1.5),\n      backgroundColor: 'transparent',\n      border: 0,\n    }),\n    header: css({\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    }),\n    body: css({\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    }),\n    footer: css({\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(1),\n    }),\n  };\n}\n","import React, { PropsWithChildren, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { useTheme2 } from '../../themes';\n\ninterface Props {\n  className?: string;\n  root?: HTMLElement;\n  forwardedRef?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport function Portal(props: PropsWithChildren<Props>) {\n  const { children, className, root, forwardedRef } = props;\n  const theme = useTheme2();\n  const node = useRef<HTMLDivElement | null>(null);\n  const portalRoot = root ?? getPortalContainer();\n\n  if (!node.current) {\n    node.current = document.createElement('div');\n    if (className) {\n      node.current.className = className;\n    }\n    node.current.style.position = 'relative';\n    node.current.style.zIndex = `${theme.zIndex.portal}`;\n  }\n\n  useLayoutEffect(() => {\n    if (node.current) {\n      portalRoot.appendChild(node.current);\n    }\n\n    return () => {\n      if (node.current) {\n        portalRoot.removeChild(node.current);\n      }\n    };\n  }, [portalRoot]);\n\n  return ReactDOM.createPortal(<div ref={forwardedRef}>{children}</div>, node.current);\n}\n\n/** @internal */\nexport function getPortalContainer() {\n  return window.document.getElementById('grafana-portal-container') ?? document.body;\n}\n\n/** @internal */\nexport function PortalContainer() {\n  return <div id=\"grafana-portal-container\" />;\n}\n\nexport const RefForwardingPortal = React.forwardRef<HTMLDivElement, Props>((props, ref) => {\n  return <Portal {...props} forwardedRef={ref} />;\n});\n\nRefForwardingPortal.displayName = 'RefForwardingPortal';\n","import React, { useCallback, useEffect, useId, useState } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { buildTooltipTheme } from '../../utils/tooltipUtils';\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent, TooltipPlacement } from './types';\n\nexport interface TooltipProps {\n  theme?: 'info' | 'error' | 'info-alt';\n  show?: boolean;\n  placement?: TooltipPlacement;\n  content: PopoverContent;\n  children: JSX.Element;\n  /**\n   * Set to true if you want the tooltip to stay long enough so the user can move mouse over content to select text or click a link\n   */\n  interactive?: boolean;\n}\n\nexport const Tooltip = React.forwardRef<HTMLElement, TooltipProps>(\n  ({ children, theme, interactive, show, placement, content }, forwardedRef) => {\n    const [controlledVisible, setControlledVisible] = useState(show);\n    const tooltipId = useId();\n\n    useEffect(() => {\n      if (controlledVisible !== false) {\n        const handleKeyDown = (enterKey: KeyboardEvent) => {\n          if (enterKey.key === 'Escape') {\n            setControlledVisible(false);\n          }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n          document.removeEventListener('keydown', handleKeyDown);\n        };\n      } else {\n        return;\n      }\n    }, [controlledVisible]);\n\n    const { getArrowProps, getTooltipProps, setTooltipRef, setTriggerRef, visible, update } = usePopperTooltip({\n      visible: show ?? controlledVisible,\n      placement,\n      interactive,\n      delayHide: interactive ? 100 : 0,\n      offset: [0, 8],\n      trigger: ['hover', 'focus'],\n      onVisibleChange: setControlledVisible,\n    });\n\n    const contentIsFunction = typeof content === 'function';\n\n    /**\n     * If content is a function we need to call popper update function to make sure the tooltip is positioned correctly\n     * if it's close to the viewport boundary\n     **/\n    useEffect(() => {\n      if (update && contentIsFunction) {\n        update();\n      }\n    }, [visible, update, contentIsFunction]);\n\n    const styles = useStyles2(getStyles);\n    const style = styles[theme ?? 'info'];\n\n    const handleRef = useCallback(\n      (ref: HTMLElement | null) => {\n        setTriggerRef(ref);\n\n        if (typeof forwardedRef === 'function') {\n          forwardedRef(ref);\n        } else if (forwardedRef) {\n          forwardedRef.current = ref;\n        }\n      },\n      [forwardedRef, setTriggerRef]\n    );\n\n    return (\n      <>\n        {React.cloneElement(children, {\n          ref: handleRef,\n          tabIndex: 0, // tooltip trigger should be keyboard focusable\n          'aria-describedby': visible ? tooltipId : undefined,\n        })}\n        {visible && (\n          <Portal>\n            <div\n              data-testid={selectors.components.Tooltip.container}\n              ref={setTooltipRef}\n              id={tooltipId}\n              role=\"tooltip\"\n              {...getTooltipProps({ className: style.container })}\n            >\n              <div {...getArrowProps({ className: style.arrow })} />\n              {typeof content === 'string' && content}\n              {React.isValidElement(content) && React.cloneElement(content)}\n              {contentIsFunction &&\n                update &&\n                content({\n                  updatePopperPosition: update,\n                })}\n            </div>\n          </Portal>\n        )}\n      </>\n    );\n  }\n);\n\nTooltip.displayName = 'Tooltip';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  const info = buildTooltipTheme(\n    theme,\n    theme.components.tooltip.background,\n    theme.components.tooltip.background,\n    theme.components.tooltip.text,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n  const error = buildTooltipTheme(\n    theme,\n    theme.colors.error.main,\n    theme.colors.error.main,\n    theme.colors.error.contrastText,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n\n  return {\n    info,\n    ['info-alt']: info,\n    error,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip } from '../Tooltip';\n\nimport { LabelProps } from './Label';\n\nexport interface Props extends Omit<LabelProps, 'css' | 'description' | 'category'> {\n  /** Content for the labels tooltip. If provided, an info icon with the tooltip content\n   * will be displayed */\n  tooltip?: PopoverContent;\n  /** Custom width for the label */\n  width?: number | 'auto';\n  /** Make labels's background transparent */\n  transparent?: boolean;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n  /** @beta */\n  /** Controls which element the InlineLabel should be rendered into */\n  as?: React.ElementType;\n}\n\nexport const InlineLabel = ({\n  children,\n  className,\n  tooltip,\n  width,\n  transparent,\n  interactive,\n  as: Component = 'label',\n  ...rest\n}: Props) => {\n  const styles = useStyles2(getInlineLabelStyles, transparent, width);\n\n  return (\n    <Component className={cx(styles.label, className)} {...rest}>\n      {children}\n      {tooltip && (\n        <Tooltip interactive={interactive} placement=\"top\" content={tooltip} theme=\"info\">\n          <Icon tabIndex={0} name=\"info-circle\" size=\"sm\" className={styles.icon} />\n        </Tooltip>\n      )}\n    </Component>\n  );\n};\n\nexport const getInlineLabelStyles = (theme: GrafanaTheme2, transparent = false, width?: number | 'auto') => {\n  return {\n    label: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexShrink: 0,\n      padding: theme.spacing(0, 1),\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.size.sm,\n      backgroundColor: transparent ? 'transparent' : theme.colors.background.secondary,\n      height: theme.spacing(theme.components.height.md),\n      lineHeight: theme.spacing(theme.components.height.md),\n      marginRight: theme.spacing(0.5),\n      borderRadius: theme.shape.radius.default,\n      border: 'none',\n      width: width ? (width !== 'auto' ? `${8 * width}px` : width) : '100%',\n      color: theme.colors.text.primary,\n    }),\n    icon: css({\n      color: theme.colors.text.secondary,\n      marginLeft: '10px',\n\n      ':hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { getChildId } from '../../utils/reactUtils';\nimport { PopoverContent } from '../Tooltip';\n\nimport { FieldProps } from './Field';\nimport { FieldValidationMessage } from './FieldValidationMessage';\nimport { InlineLabel } from './InlineLabel';\n\nexport interface Props extends Omit<FieldProps, 'css' | 'horizontal' | 'description' | 'error'> {\n  /** Content for the label's tooltip */\n  tooltip?: PopoverContent;\n  /** Custom width for the label as a multiple of 8px */\n  labelWidth?: number | 'auto';\n  /** Make the field's child to fill the width of the row. Equivalent to setting `flex-grow:1` on the field */\n  grow?: boolean;\n  /** Make the field's child shrink with width of the row. Equivalent to setting `flex-shrink:1` on the field */\n  shrink?: boolean;\n  /** Make field's background transparent */\n  transparent?: boolean;\n  /** Error message to display */\n  error?: string | null;\n  htmlFor?: string;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n}\n\nexport const InlineField = ({\n  children,\n  label,\n  tooltip,\n  labelWidth = 'auto',\n  invalid,\n  loading,\n  disabled,\n  required,\n  className,\n  htmlFor,\n  grow,\n  shrink,\n  error,\n  transparent,\n  interactive,\n  ...htmlProps\n}: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, grow, shrink);\n  const inputId = htmlFor ?? getChildId(children);\n\n  const labelElement =\n    typeof label === 'string' ? (\n      <InlineLabel\n        interactive={interactive}\n        width={labelWidth}\n        tooltip={tooltip}\n        htmlFor={inputId}\n        transparent={transparent}\n      >\n        {`${label}${required ? ' *' : ''}`}\n      </InlineLabel>\n    ) : (\n      label\n    );\n\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {labelElement}\n      <div className={styles.childContainer}>\n        {React.cloneElement(children, { invalid, disabled, loading })}\n        {invalid && error && (\n          <div className={cx(styles.fieldValidationWrapper)}>\n            <FieldValidationMessage>{error}</FieldValidationMessage>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nInlineField.displayName = 'InlineField';\n\nconst getStyles = (theme: GrafanaTheme2, grow?: boolean, shrink?: boolean) => {\n  return {\n    container: css({\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      textAlign: 'left',\n      position: 'relative',\n      flex: `${grow ? 1 : 0} ${shrink ? 1 : 0} auto`,\n      margin: `0 ${theme.spacing(0.5)} ${theme.spacing(0.5)} 0`,\n    }),\n    childContainer: css({\n      flex: `${grow ? 1 : 0} ${shrink ? 1 : 0} auto`,\n    }),\n    fieldValidationWrapper: css({\n      marginTop: theme.spacing(0.5),\n    }),\n  };\n};\n","import { availableIconsIndex, Field, FieldType, IconName } from '@grafana/data';\n\nimport { ComponentSize } from './size';\n\n// Exported from here for backwards compatibility\nexport type { IconName } from '@grafana/data';\nexport { toIconName } from '@grafana/data';\n\nexport type IconType = 'mono' | 'default' | 'solid';\nexport type IconSize = ComponentSize | 'xl' | 'xxl' | 'xxxl';\nexport const isIconSize = (value: string): value is IconSize => {\n  return ['xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'xxxl'].includes(value);\n};\n\n// function remains for backwards compatibility\nexport const getAvailableIcons = () => Object.keys(availableIconsIndex);\n\n/**\n * Get the icon for a given field\n */\nexport function getFieldTypeIcon(field?: Field): IconName {\n  return getFieldTypeIconName(field?.type);\n}\n\n/** Get an icon for a given field type  */\nexport function getFieldTypeIconName(type?: FieldType): IconName {\n  if (type) {\n    switch (type) {\n      case FieldType.time:\n        return 'clock-nine';\n      case FieldType.string:\n        return 'font';\n      case FieldType.number:\n        return 'calculator-alt';\n      case FieldType.boolean:\n        return 'toggle-on';\n      case FieldType.trace:\n        return 'info-circle';\n      case FieldType.enum:\n        return 'list-ol';\n      case FieldType.geo:\n        return 'map-marker';\n      case FieldType.other:\n        return 'brackets-curly';\n    }\n  }\n  return 'question-circle';\n}\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { IconSize, isIconSize } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { getIconRoot, getIconSubDir } from '../Icon/utils';\n\nexport interface Props {\n  className?: string;\n  style?: React.CSSProperties;\n  iconClassName?: string;\n  inline?: boolean;\n  size?: IconSize;\n}\n\n/**\n * @deprecated\n * use a predefined size, e.g. 'md' or 'lg' instead\n */\ninterface PropsWithDeprecatedSize extends Omit<Props, 'size'> {\n  size?: number | string;\n}\n\n/**\n * @public\n */\nexport const Spinner = ({\n  className,\n  inline = false,\n  iconClassName,\n  style,\n  size = 'md',\n}: Props | PropsWithDeprecatedSize) => {\n  const styles = useStyles2(getStyles);\n\n  const deprecatedStyles = useStyles2(getDeprecatedStyles, size);\n\n  // this entire if statement is handling the deprecated size prop\n  // TODO remove once we fully remove the deprecated type\n  if (typeof size !== 'string' || !isIconSize(size)) {\n    const iconRoot = getIconRoot();\n    const iconName = 'spinner';\n    const subDir = getIconSubDir(iconName, 'default');\n    const svgPath = `${iconRoot}${subDir}/${iconName}.svg`;\n    return (\n      <div\n        data-testid=\"Spinner\"\n        style={style}\n        className={cx(\n          {\n            [styles.inline]: inline,\n          },\n          deprecatedStyles.wrapper,\n          className\n        )}\n      >\n        <SVG\n          src={svgPath}\n          width={size}\n          height={size}\n          className={cx('fa-spin', deprecatedStyles.icon, className)}\n          style={style}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      data-testid=\"Spinner\"\n      style={style}\n      className={cx(\n        {\n          [styles.inline]: inline,\n        },\n        className\n      )}\n    >\n      <Icon className={cx('fa-spin', iconClassName)} name=\"spinner\" size={size} aria-label=\"loading spinner\" />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  inline: css({\n    display: 'inline-block',\n  }),\n});\n\n// TODO remove once we fully remove the deprecated type\nconst getDeprecatedStyles = (theme: GrafanaTheme2, size: number | string) => ({\n  wrapper: css({\n    fontSize: typeof size === 'string' ? size : `${size}px`,\n  }),\n  icon: css({\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    label: 'Icon',\n    // line-height: 0; is needed for correct icon alignment in Safari\n    lineHeight: 0,\n    verticalAlign: 'middle',\n  }),\n});\n","import React from 'react';\nimport { DropdownIndicatorProps } from 'react-select';\n\nimport { Icon } from '../Icon/Icon';\n\nexport function DropdownIndicator({ selectProps }: DropdownIndicatorProps) {\n  const isOpen = selectProps.menuIsOpen;\n  const icon = isOpen ? 'search' : 'angle-down';\n  const size = isOpen ? 'sm' : 'md';\n  return <Icon name={icon} size={size} />;\n}\n","import memoize from 'micro-memoize';\n\n/**\n * @public\n * @deprecated use useStyles hook\n *  Creates memoized version of styles creator\n * @param stylesCreator function accepting dependencies based on which styles are created\n */\nexport function stylesFactory<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  stylesCreator: ResultFn\n) {\n  return memoize(stylesCreator);\n}\n","import { CSSObject } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\n\nexport function cardChrome(theme: GrafanaTheme2): string {\n  return `\n    background: ${theme.colors.background.secondary};\n    &:hover {\n      background: ${hoverColor(theme.colors.background.secondary, theme)};\n    }\n    box-shadow: ${theme.components.panel.boxShadow};\n    border-radius: ${theme.shape.radius.default};\n`;\n}\n\nexport function hoverColor(color: string, theme: GrafanaTheme2): string {\n  return theme.isDark ? tinycolor(color).brighten(2).toString() : tinycolor(color).darken(2).toString();\n}\n\nexport function listItem(theme: GrafanaTheme2): string {\n  return `\n  background: ${theme.colors.background.secondary};\n  &:hover {\n    background: ${hoverColor(theme.colors.background.secondary, theme)};\n  }\n  box-shadow: ${theme.components.panel.boxShadow};\n  border-radius: ${theme.shape.radius.default};\n`;\n}\n\nexport function listItemSelected(theme: GrafanaTheme2): string {\n  return `\n    background: ${hoverColor(theme.colors.background.secondary, theme)};\n    color: ${theme.colors.text.maxContrast};\n`;\n}\n\nexport function mediaUp(breakpoint: string) {\n  return `only screen and (min-width: ${breakpoint})`;\n}\n\nconst isGrafanaTheme2 = (theme: GrafanaTheme | GrafanaTheme2): theme is GrafanaTheme2 => theme.hasOwnProperty('v1');\nexport const focusCss = (theme: GrafanaTheme | GrafanaTheme2) => {\n  const isTheme2 = isGrafanaTheme2(theme);\n  const firstColor = isTheme2 ? theme.colors.background.canvas : theme.colors.bodyBg;\n  const secondColor = isTheme2 ? theme.colors.primary.main : theme.colors.formFocusOutline;\n\n  return `\n  outline: 2px dotted transparent;\n  outline-offset: 2px;\n  box-shadow: 0 0 0 2px ${firstColor}, 0 0 0px 4px ${secondColor};\n  transition-property: outline, outline-offset, box-shadow;\n  transition-duration: 0.2s;\n  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);`;\n};\n\nexport function getMouseFocusStyles(theme: GrafanaTheme | GrafanaTheme2): CSSObject {\n  return {\n    outline: 'none',\n    boxShadow: `none`,\n  };\n}\n\nexport function getFocusStyles(theme: GrafanaTheme2): CSSObject {\n  return {\n    outline: '2px dotted transparent',\n    outlineOffset: '2px',\n    boxShadow: `0 0 0 2px ${theme.colors.background.canvas}, 0 0 0px 4px ${theme.colors.primary.main}`,\n    transitionTimingFunction: `cubic-bezier(0.19, 1, 0.22, 1)`,\n    transitionDuration: '0.2s',\n    transitionProperty: 'outline, outline-offset, box-shadow',\n  };\n}\n\n// max-width is set up based on .grafana-tooltip class that's used in dashboard\nexport const getTooltipContainerStyles = (theme: GrafanaTheme2): CSSObject => ({\n  overflow: 'hidden',\n  background: theme.colors.background.secondary,\n  boxShadow: theme.shadows.z2,\n  maxWidth: '800px',\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.radius.default,\n  zIndex: theme.zIndex.tooltip,\n});\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { getFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types/size';\n\nexport const getFocusStyle = (theme: GrafanaTheme2) =>\n  css({\n    '&:focus': getFocusStyles(theme),\n  });\n\nexport const sharedInputStyle = (theme: GrafanaTheme2, invalid = false) => {\n  const borderColor = invalid ? theme.colors.error.border : theme.components.input.borderColor;\n  const borderColorHover = invalid ? theme.colors.error.shade : theme.components.input.borderHover;\n  const background = theme.components.input.background;\n  const textColor = theme.components.input.text;\n\n  // Cannot use our normal borders for this color for some reason due the alpha values in them.\n  // Need to colors without alpha channel\n  const autoFillBorder = theme.isDark ? '#2e2f35' : '#bab4ca';\n\n  return cx(\n    inputPadding(theme),\n    css({\n      background,\n      lineHeight: theme.typography.body.lineHeight,\n      fontSize: theme.typography.size.md,\n      color: textColor,\n      border: `1px solid ${borderColor}`,\n\n      '&:-webkit-autofill, &:-webkit-autofill:hover': {\n        /* Welcome to 2005. This is a HACK to get rid od Chromes default autofill styling */\n        boxShadow: `inset 0 0 0 1px rgba(255, 255, 255, 0), inset 0 0 0 100px ${background}!important`,\n        WebkitTextFillColor: `${textColor} !important`,\n        borderColor: autoFillBorder,\n      },\n\n      '&:-webkit-autofill:focus': {\n        /* Welcome to 2005. This is a HACK to get rid od Chromes default autofill styling */\n        boxShadow: `0 0 0 2px ${theme.colors.background.primary}, 0 0 0px 4px ${theme.colors.primary.main}, inset 0 0 0 1px rgba(255, 255, 255, 0), inset 0 0 0 100px ${background}!important`,\n        WebkitTextFillColor: `${textColor} !important`,\n      },\n\n      '&:hover': {\n        borderColor: borderColorHover,\n      },\n\n      '&:focus': {\n        outline: 'none',\n      },\n\n      '&:disabled': {\n        backgroundColor: theme.colors.action.disabledBackground,\n        color: theme.colors.action.disabledText,\n        border: `1px solid ${theme.colors.action.disabledBackground}`,\n\n        '&:hover': {\n          borderColor,\n        },\n      },\n\n      '&::placeholder': {\n        color: theme.colors.text.disabled,\n        opacity: 1,\n      },\n    })\n  );\n};\n\nexport const inputPadding = (theme: GrafanaTheme2) => {\n  return css({\n    padding: theme.spacing(0, 1, 0, 1),\n  });\n};\n\nexport const inputSizes = () => {\n  return {\n    sm: css({\n      width: inputSizesPixels('sm'),\n    }),\n    md: css({\n      width: inputSizesPixels('md'),\n    }),\n    lg: css({\n      width: inputSizesPixels('lg'),\n    }),\n    auto: css({\n      width: inputSizesPixels('auto'),\n    }),\n  };\n};\n\nexport const inputSizesPixels = (size: string) => {\n  switch (size) {\n    case 'sm':\n      return '200px';\n    case 'md':\n      return '320px';\n    case 'lg':\n      return '580px';\n    case 'auto':\n    default:\n      return 'auto';\n  }\n};\n\nexport function getPropertiesForButtonSize(size: ComponentSize, theme: GrafanaTheme2) {\n  switch (size) {\n    case 'sm':\n      return {\n        padding: 1,\n        fontSize: theme.typography.size.sm,\n        height: theme.components.height.sm,\n      };\n\n    case 'lg':\n      return {\n        padding: 3,\n        fontSize: theme.typography.size.lg,\n        height: theme.components.height.lg,\n      };\n    case 'md':\n    default:\n      return {\n        padding: 2,\n        fontSize: theme.typography.size.md,\n        height: theme.components.height.md,\n      };\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\nimport useMeasure from 'react-use/lib/useMeasure';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\nimport { Spinner } from '../Spinner/Spinner';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'prefix' | 'size'> {\n  /** Sets the width to a multiple of 8px. Should only be used with inline forms. Setting width of the container is preferred in other cases.*/\n  width?: number;\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n  /** Show an icon as a prefix in the input */\n  prefix?: ReactNode;\n  /** Show an icon as a suffix in the input */\n  suffix?: ReactNode;\n  /** Show a loading indicator as a suffix in the input */\n  loading?: boolean;\n  /** Add a component as an addon before the input  */\n  addonBefore?: ReactNode;\n  /** Add a component as an addon after the input */\n  addonAfter?: ReactNode;\n}\n\ninterface StyleDeps {\n  theme: GrafanaTheme2;\n  invalid?: boolean;\n  width?: number;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const { className, addonAfter, addonBefore, prefix, suffix, invalid, loading, width = 0, ...restProps } = props;\n  /**\n   * Prefix & suffix are positioned absolutely within inputWrapper. We use client rects below to apply correct padding to the input\n   * when prefix/suffix is larger than default (28px = 16px(icon) + 12px(left/right paddings)).\n   * Thanks to that prefix/suffix do not overflow the input element itself.\n   */\n  const [prefixRef, prefixRect] = useMeasure<HTMLDivElement>();\n  const [suffixRef, suffixRect] = useMeasure<HTMLDivElement>();\n\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: !!invalid, width });\n\n  return (\n    <div className={cx(styles.wrapper, className)} data-testid={'input-wrapper'}>\n      {!!addonBefore && <div className={styles.addon}>{addonBefore}</div>}\n\n      <div className={styles.inputWrapper}>\n        {prefix && (\n          <div className={styles.prefix} ref={prefixRef}>\n            {prefix}\n          </div>\n        )}\n\n        <input\n          ref={ref}\n          className={styles.input}\n          {...restProps}\n          style={{\n            paddingLeft: prefix ? prefixRect.width + 12 : undefined,\n            paddingRight: suffix || loading ? suffixRect.width + 12 : undefined,\n          }}\n        />\n\n        {(suffix || loading) && (\n          <div className={styles.suffix} ref={suffixRef}>\n            {loading && <Spinner className={styles.loadingIndicator} inline={true} />}\n            {suffix}\n          </div>\n        )}\n      </div>\n\n      {!!addonAfter && <div className={styles.addon}>{addonAfter}</div>}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport const getInputStyles = stylesFactory(({ theme, invalid = false, width }: StyleDeps) => {\n  const prefixSuffixStaticWidth = '28px';\n  const prefixSuffix = css({\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontSize: theme.typography.size.md,\n    height: '100%',\n    /* Min width specified for prefix/suffix classes used outside React component*/\n    minWidth: prefixSuffixStaticWidth,\n    color: theme.colors.text.secondary,\n  });\n\n  return {\n    // Wraps inputWrapper and addons\n    wrapper: cx(\n      css({\n        label: 'input-wrapper',\n        display: 'flex',\n        width: width ? theme.spacing(width) : '100%',\n        height: theme.spacing(theme.components.height.md),\n        borderRadius: theme.shape.radius.default,\n        '&:hover': {\n          '> .prefix, .suffix, .input': {\n            borderColor: invalid ? theme.colors.error.border : theme.colors.primary.border,\n          },\n\n          // only show number buttons on hover\n          \"input[type='number']\": {\n            appearance: 'textfield',\n          },\n\n          \"input[type='number']::-webkit-inner-spin-button, input[type='number']::-webkit-outer-spin-button\": {\n            // Need type assertion here due to the use of !important\n            // see https://github.com/frenic/csstype/issues/114#issuecomment-697201978\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            WebkitAppearance: 'inner-spin-button !important' as 'inner-spin-button',\n            opacity: 1,\n          },\n        },\n      })\n    ),\n    // Wraps input and prefix/suffix\n    inputWrapper: css({\n      label: 'input-inputWrapper',\n      position: 'relative',\n      flexGrow: 1,\n      /* we want input to be above addons, especially for focused state */\n      zIndex: 1,\n\n      /* when input rendered with addon before only*/\n      '&:not(:first-child):last-child': {\n        '> input': {\n          borderLeft: 'none',\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      },\n\n      /* when input rendered with addon after only*/\n      '&:first-child:not(:last-child)': {\n        '> input': {\n          borderRight: 'none',\n          borderTopRightRadius: 0,\n          borderBottomRightRadius: 0,\n        },\n      },\n\n      /* when rendered with addon before and after */\n      '&:not(:first-child):not(:last-child)': {\n        '> input': {\n          borderRight: 'none',\n          borderTopRightRadius: 0,\n          borderBottomRightRadius: 0,\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      },\n\n      input: {\n        /* paddings specified for classes used outside React component */\n        '&:not(:first-child)': {\n          paddingLeft: prefixSuffixStaticWidth,\n        },\n        '&:not(:last-child)': {\n          paddingRight: prefixSuffixStaticWidth,\n        },\n        '&[readonly]': {\n          cursor: 'default',\n        },\n      },\n    }),\n\n    input: cx(\n      getFocusStyle(theme),\n      sharedInputStyle(theme, invalid),\n      css({\n        label: 'input-input',\n        position: 'relative',\n        zIndex: 0,\n        flexGrow: 1,\n        borderRadius: theme.shape.radius.default,\n        height: '100%',\n        width: '100%',\n      })\n    ),\n    inputDisabled: css({\n      backgroundColor: theme.colors.action.disabledBackground,\n      color: theme.colors.action.disabledText,\n      border: `1px solid ${theme.colors.action.disabledBackground}`,\n      '&:focus': {\n        boxShadow: 'none',\n      },\n    }),\n    addon: css({\n      label: 'input-addon',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexGrow: 0,\n      flexShrink: 0,\n      position: 'relative',\n\n      '&:first-child': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n        '> :last-child': {\n          borderTopRightRadius: 0,\n          borderBottomRightRadius: 0,\n        },\n      },\n\n      '&:last-child': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        '> :first-child': {\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      },\n      '> *:focus': {\n        /* we want anything that has focus and is an addon to be above input */\n        zIndex: 2,\n      },\n    }),\n    prefix: cx(\n      prefixSuffix,\n      css({\n        label: 'input-prefix',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(0.5),\n        borderRight: 'none',\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n      })\n    ),\n    suffix: cx(\n      prefixSuffix,\n      css({\n        label: 'input-suffix',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginBottom: '-2px',\n        borderLeft: 'none',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        right: 0,\n      })\n    ),\n    loadingIndicator: css({\n      '& + *': {\n        marginLeft: theme.spacing(0.5),\n      },\n    }),\n  };\n});\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { getInputStyles } from '../Input/Input';\n\nexport const IndicatorsContainer = React.forwardRef<HTMLDivElement, React.PropsWithChildren>((props, ref) => {\n  const { children } = props;\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: false });\n\n  return (\n    <div\n      className={cx(\n        styles.suffix,\n        css({\n          position: 'relative',\n        })\n      )}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n});\n\nIndicatorsContainer.displayName = 'IndicatorsContainer';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { inputPadding } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\ninterface InputControlProps {\n  /** Show an icon as a prefix in the input */\n  prefix?: JSX.Element | string | null;\n  focused: boolean;\n  invalid: boolean;\n  disabled: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const InputControl = React.forwardRef<HTMLDivElement, React.PropsWithChildren<InputControlProps>>(\n  function InputControl({ focused, invalid, disabled, children, innerProps, prefix, ...otherProps }, ref) {\n    const styles = useStyles2(getInputControlStyles, invalid, !!prefix);\n\n    return (\n      <div className={styles.input} {...innerProps} ref={ref}>\n        {prefix && <div className={cx(styles.prefix)}>{prefix}</div>}\n        {children}\n      </div>\n    );\n  }\n);\n\nconst getInputControlStyles = (theme: GrafanaTheme2, invalid: boolean, withPrefix: boolean) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    input: cx(\n      inputPadding(theme),\n      css({\n        width: '100%',\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        paddingRight: 0,\n        position: 'relative',\n        boxSizing: 'border-box',\n      }),\n      withPrefix &&\n        css({\n          paddingLeft: 0,\n        })\n    ),\n    prefix: cx(\n      styles.prefix,\n      css({\n        position: 'relative',\n      })\n    ),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, colorManipulator, deprecationWarning } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types';\nimport { IconName, IconSize, IconType } from '../../types/icon';\nimport { Icon } from '../Icon/Icon';\nimport { getSvgSize } from '../Icon/utils';\nimport { TooltipPlacement, PopoverContent, Tooltip } from '../Tooltip';\n\nexport type IconButtonVariant = 'primary' | 'secondary' | 'destructive';\n\ntype LimitedIconSize = ComponentSize | 'xl';\n\ninterface BaseProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'aria-label'> {\n  /** Name of the icon **/\n  name: IconName;\n  /** Icon size - sizes xxl and xxxl are deprecated and when used being decreased to xl*/\n  size?: IconSize;\n  /** Type of the icon - mono or default */\n  iconType?: IconType;\n  /** Variant to change the color of the Icon */\n  variant?: IconButtonVariant;\n}\n\nexport interface BasePropsWithTooltip extends BaseProps {\n  /** Tooltip content to display on hover and as the aria-label */\n  tooltip: PopoverContent;\n  /** Position of the tooltip */\n  tooltipPlacement?: TooltipPlacement;\n}\n\ninterface BasePropsWithAriaLabel extends BaseProps {\n  /** @deprecated use aria-label instead*/\n  ariaLabel?: string;\n  /** Text available only for screen readers. No tooltip will be set in this case. */\n  ['aria-label']: string;\n}\n\nexport type Props = BasePropsWithTooltip | BasePropsWithAriaLabel;\n\nexport const IconButton = React.forwardRef<HTMLButtonElement, Props>((props, ref) => {\n  const { size = 'md', variant = 'secondary' } = props;\n  let limitedIconSize: LimitedIconSize;\n\n  // very large icons (xl to xxxl) are unified to size xl\n  if (size === 'xxl' || size === 'xxxl') {\n    deprecationWarning('IconButton', 'size=\"xxl\" and size=\"xxxl\"', 'size=\"xl\"');\n    limitedIconSize = 'xl';\n  } else {\n    limitedIconSize = size;\n  }\n\n  const styles = useStyles2(getStyles, limitedIconSize, variant);\n\n  let ariaLabel: string | undefined;\n  let buttonRef: typeof ref | undefined;\n\n  if ('tooltip' in props) {\n    const { tooltip } = props;\n    ariaLabel = typeof tooltip === 'string' ? tooltip : undefined;\n  } else if ('ariaLabel' in props || 'aria-label' in props) {\n    const { ariaLabel: deprecatedAriaLabel, ['aria-label']: ariaLabelProp } = props;\n    ariaLabel = ariaLabelProp || deprecatedAriaLabel;\n    buttonRef = ref;\n  }\n\n  // When using tooltip, ref is forwarded to Tooltip component instead for https://github.com/grafana/grafana/issues/65632\n  if ('tooltip' in props) {\n    const { name, iconType, className, tooltip, tooltipPlacement, ...restProps } = props;\n    return (\n      <Tooltip ref={ref} content={tooltip} placement={tooltipPlacement}>\n        <button\n          {...restProps}\n          ref={buttonRef}\n          aria-label={ariaLabel}\n          className={cx(styles.button, className)}\n          type=\"button\"\n        >\n          <Icon name={name} size={limitedIconSize} className={styles.icon} type={iconType} />\n        </button>\n      </Tooltip>\n    );\n  } else {\n    const { name, iconType, className, ...restProps } = props;\n    return (\n      <button\n        {...restProps}\n        ref={buttonRef}\n        aria-label={ariaLabel}\n        className={cx(styles.button, className)}\n        type=\"button\"\n      >\n        <Icon name={name} size={limitedIconSize} className={styles.icon} type={iconType} />\n      </button>\n    );\n  }\n});\n\nIconButton.displayName = 'IconButton';\n\nconst getStyles = (theme: GrafanaTheme2, size: IconSize, variant: IconButtonVariant) => {\n  // overall size of the IconButton on hover\n  // theme.spacing.gridSize originates from 2*4px for padding and letting the IconSize generally decide on the hoverSize\n  const hoverSize = getSvgSize(size) + theme.spacing.gridSize;\n\n  let iconColor = theme.colors.text.primary;\n\n  if (variant === 'primary') {\n    iconColor = theme.colors.primary.text;\n  } else if (variant === 'destructive') {\n    iconColor = theme.colors.error.text;\n  }\n\n  return {\n    button: css({\n      zIndex: 0,\n      position: 'relative',\n      margin: `0 ${theme.spacing.x0_5} 0 0`,\n      boxShadow: 'none',\n      border: 'none',\n      display: 'inline-flex',\n      background: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 0,\n      color: iconColor,\n\n      '&[disabled], &:disabled': {\n        cursor: 'not-allowed',\n        color: theme.colors.action.disabledText,\n        opacity: 0.65,\n      },\n\n      '&:before': {\n        zIndex: -1,\n        position: 'absolute',\n        opacity: 0,\n        width: `${hoverSize}px`,\n        height: `${hoverSize}px`,\n        borderRadius: theme.shape.radius.default,\n        content: '\"\"',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\n        transitionProperty: 'opacity',\n      },\n\n      '&:focus, &:focus-visible': getFocusStyles(theme),\n\n      '&:focus:not(:focus-visible)': getMouseFocusStyles(theme),\n\n      '&:hover': {\n        '&:before': {\n          backgroundColor:\n            variant === 'secondary' ? theme.colors.action.hover : colorManipulator.alpha(iconColor, 0.12),\n          opacity: 1,\n        },\n      },\n    }),\n    icon: css({\n      verticalAlign: 'baseline',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes/stylesFactory';\n\nexport const getSelectStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    menu: css({\n      label: 'grafana-select-menu',\n      background: theme.components.dropdown.background,\n      boxShadow: theme.shadows.z3,\n      position: 'relative',\n      minWidth: '100%',\n      zIndex: 1,\n    }),\n    option: css({\n      label: 'grafana-select-option',\n      padding: '8px',\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      cursor: 'pointer',\n      borderLeft: '2px solid transparent',\n\n      '&:hover': {\n        background: theme.colors.action.hover,\n        '@media (forced-colors: active), (prefers-contrast: more)': {\n          border: `1px solid ${theme.colors.primary.border}`,\n        },\n      },\n    }),\n    optionIcon: css({\n      marginRight: theme.spacing(1),\n    }),\n    optionImage: css({\n      label: 'grafana-select-option-image',\n      width: '16px',\n      marginRight: '10px',\n    }),\n    optionDescription: css({\n      label: 'grafana-select-option-description',\n      fontWeight: 'normal',\n      fontSize: theme.typography.size.sm,\n      color: theme.colors.text.secondary,\n      whiteSpace: 'normal',\n      lineHeight: theme.typography.body.lineHeight,\n    }),\n    optionBody: css({\n      label: 'grafana-select-option-body',\n      display: 'flex',\n      fontWeight: theme.typography.fontWeightMedium,\n      flexDirection: 'column',\n      flexGrow: 1,\n    }),\n    optionFocused: css({\n      label: 'grafana-select-option-focused',\n      background: theme.colors.action.focus,\n      '@media (forced-colors: active), (prefers-contrast: more)': {\n        border: `1px solid ${theme.colors.primary.border}`,\n      },\n    }),\n    optionSelected: css({\n      background: theme.colors.action.selected,\n    }),\n    optionDisabled: css({\n      label: 'grafana-select-option-disabled',\n      backgroundColor: theme.colors.action.disabledBackground,\n      color: theme.colors.action.disabledText,\n      cursor: 'not-allowed',\n    }),\n    singleValue: css({\n      label: 'grafana-select-single-value',\n      color: theme.components.input.text,\n      gridArea: '1 / 1 / 2 / 3',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n    }),\n    valueContainer: css({\n      label: 'grafana-select-value-container',\n      alignItems: 'center',\n      display: 'grid',\n      position: 'relative',\n      boxSizing: 'border-box',\n      flex: '1 1 0%',\n      outline: 'none',\n      overflow: 'hidden',\n    }),\n    valueContainerMulti: css({\n      label: 'grafana-select-value-container-multi',\n      flexWrap: 'wrap',\n      display: 'flex',\n    }),\n    valueContainerMultiNoWrap: css({\n      flexWrap: 'nowrap',\n    }),\n    loadingMessage: css({\n      label: 'grafana-select-loading-message',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      width: '100%',\n    }),\n    multiValueContainer: css({\n      label: 'grafana-select-multi-value-container',\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 1,\n      background: theme.colors.background.secondary,\n      borderRadius: theme.shape.radius.default,\n      margin: theme.spacing(0.25, 1, 0.25, 0),\n      padding: theme.spacing(0.25, 0, 0.25, 1),\n      color: theme.colors.text.primary,\n      fontSize: theme.typography.size.sm,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n\n      '&:hover': {\n        background: theme.colors.emphasize(theme.colors.background.secondary),\n      },\n    }),\n    multiValueRemove: css({\n      label: 'grafana-select-multi-value-remove',\n      margin: theme.spacing(0, 0.5),\n      cursor: 'pointer',\n      svg: {\n        marginBottom: 0,\n      },\n    }),\n    singleValueRemove: css({\n      cursor: 'pointer',\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n});\n","import React from 'react';\n\nimport { useTheme2 } from '../../themes';\nimport { IconButton, Props as IconButtonProps } from '../IconButton/IconButton';\n\nimport { getSelectStyles } from './getSelectStyles';\n\ninterface MultiValueContainerProps {\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const MultiValueContainer = ({ innerProps, children }: React.PropsWithChildren<MultiValueContainerProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  return (\n    <div {...innerProps} className={styles.multiValueContainer}>\n      {children}\n    </div>\n  );\n};\n\nexport type MultiValueRemoveProps = {\n  innerProps: IconButtonProps;\n};\n\nexport const MultiValueRemove = ({ children, innerProps }: React.PropsWithChildren<MultiValueRemoveProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  return <IconButton {...innerProps} name=\"times\" size=\"sm\" className={styles.multiValueRemove} tooltip=\"Remove\" />;\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, ContainerProps as BaseContainerProps, GroupBase } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { sharedInputStyle } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\nimport { CustomComponentProps } from './types';\n\n// prettier-ignore\nexport type SelectContainerProps<Option, isMulti extends boolean, Group extends GroupBase<Option>> =\n  BaseContainerProps<Option, isMulti, Group> & CustomComponentProps<Option, isMulti, Group>;\n\nexport const SelectContainer = <Option, isMulti extends boolean, Group extends GroupBase<Option>>(\n  props: SelectContainerProps<Option, isMulti, Group>\n) => {\n  const {\n    isDisabled,\n    isFocused,\n    children,\n    selectProps: { invalid = false },\n  } = props;\n\n  const styles = useStyles2(getSelectContainerStyles, isFocused, isDisabled, invalid);\n\n  return (\n    <components.SelectContainer {...props} className={cx(styles.wrapper, props.className)}>\n      {children}\n    </components.SelectContainer>\n  );\n};\n\nconst getSelectContainerStyles = (theme: GrafanaTheme2, focused: boolean, disabled: boolean, invalid: boolean) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    wrapper: cx(\n      styles.wrapper,\n      sharedInputStyle(theme, invalid),\n      focused && css(getFocusStyles(theme)),\n      disabled && styles.inputDisabled,\n      css({\n        position: 'relative',\n        boxSizing: 'border-box',\n        /* The display property is set by the styles prop in SelectBase because it's dependant on the width prop  */\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'stretch',\n        justifyContent: 'space-between',\n        minHeight: '32px',\n        height: 'auto',\n        maxWidth: '100%',\n\n        /* Input padding is applied to the InputControl so the menu is aligned correctly */\n        padding: 0,\n        cursor: disabled ? 'not-allowed' : 'pointer',\n      })\n    ),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport const ScrollIndicators = ({ children }: React.PropsWithChildren<{}>) => {\n  const [showScrollTopIndicator, setShowTopScrollIndicator] = useState(false);\n  const [showScrollBottomIndicator, setShowBottomScrollIndicator] = useState(false);\n  const scrollTopMarker = useRef<HTMLDivElement>(null);\n  const scrollBottomMarker = useRef<HTMLDivElement>(null);\n  const styles = useStyles2(getStyles);\n\n  // Here we observe the top and bottom markers to determine if we should show the scroll indicators\n  useEffect(() => {\n    const intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.target === scrollTopMarker.current) {\n          setShowTopScrollIndicator(!entry.isIntersecting);\n        } else if (entry.target === scrollBottomMarker.current) {\n          setShowBottomScrollIndicator(!entry.isIntersecting);\n        }\n      });\n    });\n    [scrollTopMarker, scrollBottomMarker].forEach((ref) => {\n      if (ref.current) {\n        intersectionObserver.observe(ref.current);\n      }\n    });\n    return () => intersectionObserver.disconnect();\n  }, []);\n\n  return (\n    <>\n      <div\n        className={cx(styles.scrollIndicator, styles.scrollTopIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollTopIndicator,\n        })}\n      />\n      <div className={styles.scrollContent}>\n        <div ref={scrollTopMarker} />\n        {children}\n        <div ref={scrollBottomMarker} />\n      </div>\n      <div\n        className={cx(styles.scrollIndicator, styles.scrollBottomIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollBottomIndicator,\n        })}\n      />\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    scrollContent: css({\n      flex: 1,\n      position: 'relative',\n    }),\n    scrollIndicator: css({\n      height: theme.spacing(6),\n      left: 0,\n      opacity: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      right: 0,\n      transition: theme.transitions.create('opacity'),\n      zIndex: 1,\n    }),\n    scrollTopIndicator: css({\n      background: `linear-gradient(0deg, transparent, ${theme.colors.background.canvas})`,\n      top: 0,\n    }),\n    scrollBottomIndicator: css({\n      background: `linear-gradient(180deg, transparent, ${theme.colors.background.canvas})`,\n      bottom: 0,\n    }),\n    scrollIndicatorVisible: css({\n      opacity: 1,\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { RefCallback, useCallback, useEffect, useRef } from 'react';\nimport Scrollbars, { positionValues } from 'react-custom-scrollbars-2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { ScrollIndicators } from './ScrollIndicators';\n\nexport type ScrollbarPosition = positionValues;\n\ninterface Props {\n  className?: string;\n  testId?: string;\n  autoHide?: boolean;\n  autoHideTimeout?: number;\n  autoHeightMax?: string;\n  hideTracksWhenNotNeeded?: boolean;\n  hideHorizontalTrack?: boolean;\n  hideVerticalTrack?: boolean;\n  scrollRefCallback?: RefCallback<HTMLDivElement>;\n  scrollTop?: number;\n  setScrollTop?: (position: ScrollbarPosition) => void;\n  showScrollIndicators?: boolean;\n  autoHeightMin?: number | string;\n  updateAfterMountMs?: number;\n  onScroll?: React.UIEventHandler;\n}\n\n/**\n * Wraps component into <Scrollbars> component from `react-custom-scrollbars`\n */\nexport const CustomScrollbar = ({\n  autoHide = false,\n  autoHideTimeout = 200,\n  setScrollTop,\n  className,\n  testId,\n  autoHeightMin = '0',\n  autoHeightMax = '100%',\n  hideTracksWhenNotNeeded = false,\n  hideHorizontalTrack,\n  hideVerticalTrack,\n  scrollRefCallback,\n  showScrollIndicators = false,\n  updateAfterMountMs,\n  scrollTop,\n  onScroll,\n  children,\n}: React.PropsWithChildren<Props>) => {\n  const ref = useRef<Scrollbars & { view: HTMLDivElement; update: () => void }>(null);\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (ref.current && scrollRefCallback) {\n      scrollRefCallback(ref.current.view);\n    }\n  }, [ref, scrollRefCallback]);\n\n  useEffect(() => {\n    if (ref.current && scrollTop != null) {\n      ref.current.scrollTop(scrollTop);\n    }\n  }, [scrollTop]);\n\n  /**\n   * Special logic for doing a update a few milliseconds after mount to check for\n   * updated height due to dynamic content\n   */\n  useEffect(() => {\n    if (!updateAfterMountMs) {\n      return;\n    }\n    setTimeout(() => {\n      const scrollbar = ref.current;\n      if (scrollbar?.update) {\n        scrollbar.update();\n      }\n    }, updateAfterMountMs);\n  }, [updateAfterMountMs]);\n\n  function renderTrack(className: string, hideTrack: boolean | undefined, passedProps: JSX.IntrinsicElements['div']) {\n    if (passedProps.style && hideTrack) {\n      passedProps.style.display = 'none';\n    }\n\n    return <div {...passedProps} className={className} />;\n  }\n\n  const renderTrackHorizontal = useCallback(\n    (passedProps: JSX.IntrinsicElements['div']) => {\n      return renderTrack('track-horizontal', hideHorizontalTrack, passedProps);\n    },\n    [hideHorizontalTrack]\n  );\n\n  const renderTrackVertical = useCallback(\n    (passedProps: JSX.IntrinsicElements['div']) => {\n      return renderTrack('track-vertical', hideVerticalTrack, passedProps);\n    },\n    [hideVerticalTrack]\n  );\n\n  const renderThumbHorizontal = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    return <div {...passedProps} className=\"thumb-horizontal\" />;\n  }, []);\n\n  const renderThumbVertical = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    return <div {...passedProps} className=\"thumb-vertical\" />;\n  }, []);\n\n  const renderView = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    // fixes issues of visibility on safari and ios devices\n    if (passedProps.style && passedProps.style['WebkitOverflowScrolling'] === 'touch') {\n      passedProps.style['WebkitOverflowScrolling'] = 'auto';\n    }\n\n    return <div {...passedProps} className=\"scrollbar-view\" />;\n  }, []);\n\n  const onScrollStop = useCallback(() => {\n    ref.current && setScrollTop && setScrollTop(ref.current.getValues());\n  }, [setScrollTop]);\n\n  return (\n    <Scrollbars\n      data-testid={testId}\n      ref={ref}\n      className={cx(styles.customScrollbar, className, {\n        [styles.scrollbarWithScrollIndicators]: showScrollIndicators,\n      })}\n      onScrollStop={onScrollStop}\n      autoHeight={true}\n      autoHide={autoHide}\n      autoHideTimeout={autoHideTimeout}\n      hideTracksWhenNotNeeded={hideTracksWhenNotNeeded}\n      // These autoHeightMin & autoHeightMax options affect firefox and chrome differently.\n      // Before these where set to inherit but that caused problems with cut of legends in firefox\n      autoHeightMax={autoHeightMax}\n      autoHeightMin={autoHeightMin}\n      renderTrackHorizontal={renderTrackHorizontal}\n      renderTrackVertical={renderTrackVertical}\n      renderThumbHorizontal={renderThumbHorizontal}\n      renderThumbVertical={renderThumbVertical}\n      renderView={renderView}\n      onScroll={onScroll}\n    >\n      {showScrollIndicators ? <ScrollIndicators>{children}</ScrollIndicators> : children}\n    </Scrollbars>\n  );\n};\n\nexport default CustomScrollbar;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    customScrollbar: css({\n      // Fix for Firefox. For some reason sometimes .view container gets a height of its content, but in order to\n      // make scroll working it should fit outer container size (scroll appears only when inner container size is\n      // greater than outer one).\n      display: 'flex',\n      flexGrow: 1,\n      '.scrollbar-view': {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n      },\n      '.track-vertical': {\n        borderRadius: theme.shape.borderRadius(2),\n        width: `${theme.spacing(1)} !important`,\n        right: 0,\n        bottom: theme.spacing(0.25),\n        top: theme.spacing(0.25),\n      },\n      '.track-horizontal': {\n        borderRadius: theme.shape.borderRadius(2),\n        height: `${theme.spacing(1)} !important`,\n        right: theme.spacing(0.25),\n        bottom: theme.spacing(0.25),\n        left: theme.spacing(0.25),\n      },\n      '.thumb-vertical': {\n        background: theme.colors.action.focus,\n        borderRadius: theme.shape.borderRadius(2),\n        opacity: 0,\n      },\n      '.thumb-horizontal': {\n        background: theme.colors.action.focus,\n        borderRadius: theme.shape.borderRadius(2),\n        opacity: 0,\n      },\n      '&:hover': {\n        '.thumb-vertical, .thumb-horizontal': {\n          opacity: 1,\n          transition: 'opacity 0.3s ease-in-out',\n        },\n      },\n    }),\n    // override the scroll container position so that the scroll indicators\n    // are positioned at the top and bottom correctly.\n    // react-custom-scrollbars doesn't provide any way for us to hook in nicely,\n    // so we have to override with !important. feelsbad.\n    scrollbarWithScrollIndicators: css({\n      '.scrollbar-view': {\n        // Need type assertion here due to the use of !important\n        // see https://github.com/frenic/csstype/issues/114#issuecomment-697201978\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        position: 'static !important' as 'static',\n      },\n    }),\n  };\n};\n","import { cx } from '@emotion/css';\nimport { max } from 'lodash';\nimport React, { RefCallback } from 'react';\nimport { MenuListProps } from 'react-select';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { SelectableValue, toIconName } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { Icon } from '../Icon/Icon';\n\nimport { getSelectStyles } from './getSelectStyles';\n\ninterface SelectMenuProps {\n  maxHeight: number;\n  innerRef: RefCallback<HTMLDivElement>;\n  innerProps: {};\n}\n\nexport const SelectMenu = ({ children, maxHeight, innerRef, innerProps }: React.PropsWithChildren<SelectMenuProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  return (\n    <div {...innerProps} className={styles.menu} style={{ maxHeight }} aria-label=\"Select options menu\">\n      <CustomScrollbar scrollRefCallback={innerRef} autoHide={false} autoHeightMax=\"inherit\" hideHorizontalTrack>\n        {children}\n      </CustomScrollbar>\n    </div>\n  );\n};\n\nSelectMenu.displayName = 'SelectMenu';\n\nconst VIRTUAL_LIST_ITEM_HEIGHT = 37;\nconst VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER = 7;\n\n// A virtualized version of the SelectMenu, descriptions for SelectableValue options not supported since those are of a variable height.\n//\n// To support the virtualized list we have to \"guess\" the width of the menu container based on the longest available option.\n// the reason for this is because all of the options will be positioned absolute, this takes them out of the document and no space\n// is created for them, thus the container can't grow to accomodate.\n//\n// VIRTUAL_LIST_ITEM_HEIGHT and WIDTH_ESTIMATE_MULTIPLIER are both magic numbers.\n// Some characters (such as emojis and other unicode characters) may consist of multiple code points in which case the width would be inaccurate (but larger than needed).\nexport const VirtualizedSelectMenu = ({ children, maxHeight, options, getValue }: MenuListProps<SelectableValue>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const [value] = getValue();\n\n  const valueIndex = value ? options.findIndex((option: SelectableValue<unknown>) => option.value === value.value) : 0;\n  const initialOffset = valueIndex * VIRTUAL_LIST_ITEM_HEIGHT;\n\n  if (!Array.isArray(children)) {\n    return null;\n  }\n\n  const longestOption = max(options.map((option) => option.label?.length)) ?? 0;\n  const widthEstimate = longestOption * VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER;\n  const heightEstimate = Math.min(options.length * VIRTUAL_LIST_ITEM_HEIGHT, maxHeight);\n\n  return (\n    <List\n      className={styles.menu}\n      height={heightEstimate}\n      width={widthEstimate}\n      aria-label=\"Select options menu\"\n      itemCount={children.length}\n      itemSize={VIRTUAL_LIST_ITEM_HEIGHT}\n      initialScrollOffset={initialOffset}\n    >\n      {({ index, style }) => <div style={{ ...style, overflow: 'hidden' }}>{children[index]}</div>}\n    </List>\n  );\n};\n\nVirtualizedSelectMenu.displayName = 'VirtualizedSelectMenu';\n\ninterface SelectMenuOptionProps<T> {\n  isDisabled: boolean;\n  isFocused: boolean;\n  isSelected: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n  innerRef: RefCallback<HTMLDivElement>;\n  renderOptionLabel?: (value: SelectableValue<T>) => JSX.Element;\n  data: SelectableValue<T>;\n}\n\nexport const SelectMenuOptions = ({\n  children,\n  data,\n  innerProps,\n  innerRef,\n  isFocused,\n  isSelected,\n  renderOptionLabel,\n}: React.PropsWithChildren<SelectMenuOptionProps<unknown>>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n  // We are removing onMouseMove and onMouseOver from innerProps because they cause the whole\n  // list to re-render everytime the user hovers over an option. This is a performance issue.\n  // See https://github.com/JedWatson/react-select/issues/3128#issuecomment-451936743\n  const { onMouseMove, onMouseOver, ...rest } = innerProps;\n\n  return (\n    <div\n      ref={innerRef}\n      className={cx(\n        styles.option,\n        isFocused && styles.optionFocused,\n        isSelected && styles.optionSelected,\n        data.isDisabled && styles.optionDisabled\n      )}\n      {...rest}\n      aria-label=\"Select option\"\n      title={data.title}\n    >\n      {icon && <Icon name={icon} className={styles.optionIcon} />}\n      {data.imgUrl && <img className={styles.optionImage} src={data.imgUrl} alt={data.label || String(data.value)} />}\n      <div className={styles.optionBody}>\n        <span>{renderOptionLabel ? renderOptionLabel(data) : children}</span>\n        {data.description && <div className={styles.optionDescription}>{data.description}</div>}\n        {data.component && <data.component />}\n      </div>\n    </div>\n  );\n};\n\nSelectMenuOptions.displayName = 'SelectMenuOptions';\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { GroupProps } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\ninterface ExtendedGroupProps extends Omit<GroupProps<any, any>, 'theme'>, Themeable2 {\n  data: {\n    label: string;\n    expanded: boolean;\n    options: any[];\n  };\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nconst getSelectOptionGroupStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    header: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      justifyItems: 'center',\n      cursor: 'pointer',\n      padding: '7px 10px',\n      width: '100%',\n      borderBottom: `1px solid ${theme.colors.background.secondary}`,\n\n      '&:hover': {\n        color: theme.colors.text.maxContrast,\n      },\n    }),\n    label: css({\n      flexGrow: 1,\n    }),\n    icon: css({\n      paddingRight: '2px',\n    }),\n  };\n});\n\nclass UnthemedSelectOptionGroup extends PureComponent<ExtendedGroupProps, State> {\n  state = {\n    expanded: false,\n  };\n\n  componentDidMount() {\n    if (this.props.data.expanded) {\n      this.setState({ expanded: true });\n    } else if (this.props.selectProps && this.props.selectProps.value) {\n      const { value } = this.props.selectProps.value;\n\n      if (value && this.props.options.some((option) => option.value === value)) {\n        this.setState({ expanded: true });\n      }\n    }\n  }\n\n  componentDidUpdate(nextProps: ExtendedGroupProps) {\n    if (nextProps.selectProps.inputValue !== '') {\n      this.setState({ expanded: true });\n    }\n  }\n\n  onToggleChildren = () => {\n    this.setState((prevState) => ({\n      expanded: !prevState.expanded,\n    }));\n  };\n\n  render() {\n    const { children, label, theme } = this.props;\n    const { expanded } = this.state;\n    const styles = getSelectOptionGroupStyles(theme);\n\n    return (\n      <div>\n        {/*React Select doesn't support focusable option group headers, this will be skipped when using\n      the keyboard */}\n        <div className={styles.header} onClick={this.onToggleChildren} role=\"presentation\">\n          <span className={styles.label}>{label}</span>\n          <Icon className={styles.icon} name={expanded ? 'angle-up' : 'angle-down'} />\n        </div>\n        {expanded && children}\n      </div>\n    );\n  }\n}\n\nexport const SelectOptionGroup = withTheme2(UnthemedSelectOptionGroup);\n","import { useEffect, useRef, useState } from 'react';\n\ntype DelayOptions = {\n  // Minimal amount of time the switch will be on.\n  duration?: number;\n  // Delay after which switch will turn on.\n  delay?: number;\n};\n\n/**\n * Hook that delays changing of boolean switch to prevent too much time spent in \"on\" state. It is kind of a throttle\n * but you can specify different time for on and off throttling so this only allows a boolean values and also prefers\n * to stay \"off\" so turning \"on\" is always delayed while turning \"off\" is throttled.\n *\n * This is useful for showing loading elements to prevent it flashing too much in case of quick loading time or\n * prevent it flash if loaded state comes right after switch to loading.\n */\nexport function useDelayedSwitch(value: boolean, options: DelayOptions = {}): boolean {\n  const { duration = 250, delay = 250 } = options;\n\n  const [delayedValue, setDelayedValue] = useState(value);\n  const onStartTime = useRef<Date | undefined>();\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    if (value) {\n      // If toggling to \"on\" state we always setTimeout no matter how long we have been \"off\".\n      timeout = setTimeout(() => {\n        onStartTime.current = new Date();\n        setDelayedValue(value);\n      }, delay);\n    } else {\n      // If toggling to \"off\" state we check how much time we were already \"on\".\n      const timeSpent = onStartTime.current ? Date.now() - onStartTime.current.valueOf() : 0;\n      const turnOff = () => {\n        onStartTime.current = undefined;\n        setDelayedValue(value);\n      };\n      if (timeSpent >= duration) {\n        // We already spent enough time \"on\" so change right away.\n        turnOff();\n      } else {\n        timeout = setTimeout(turnOff, duration - timeSpent);\n      }\n    }\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n    };\n  }, [value, duration, delay]);\n\n  return delayedValue;\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n  duration?: number;\n};\n\nexport function FadeTransition(props: Props) {\n  const { visible, children, duration = 250 } = props;\n  const styles = useStyles2(getStyles, duration);\n\n  return (\n    <CSSTransition in={visible} mountOnEnter={true} unmountOnExit={true} timeout={duration} classNames={styles}>\n      {children}\n    </CSSTransition>\n  );\n}\n\nconst getStyles = (_theme: GrafanaTheme2, duration: number) => ({\n  enter: css({\n    label: 'enter',\n    opacity: 0,\n  }),\n  enterActive: css({\n    label: 'enterActive',\n    opacity: 1,\n    transition: `opacity ${duration}ms ease-out`,\n  }),\n  exit: css({\n    label: 'exit',\n    opacity: 1,\n  }),\n  exitActive: css({\n    label: 'exitActive',\n    opacity: 0,\n    transition: `opacity ${duration}ms ease-out`,\n  }),\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n  size: number;\n\n  duration?: number;\n  horizontal?: boolean;\n};\n\nexport function SlideOutTransition(props: Props) {\n  const { visible, children, duration = 250, horizontal, size } = props;\n  const styles = useStyles2(getStyles, duration, horizontal ? 'width' : 'height', size);\n\n  return (\n    <CSSTransition in={visible} mountOnEnter={true} unmountOnExit={true} timeout={duration} classNames={styles}>\n      {children}\n    </CSSTransition>\n  );\n}\n\nconst getStyles = (_theme: GrafanaTheme2, duration: number, measurement: 'width' | 'height', size: number) => ({\n  enter: css({\n    label: 'enter',\n    [`${measurement}`]: 0,\n    opacity: 0,\n  }),\n  enterActive: css({\n    label: 'enterActive',\n    [`${measurement}`]: `${size}px`,\n    opacity: 1,\n    transition: `opacity ${duration}ms ease-out, ${measurement} ${duration}ms ease-out`,\n  }),\n  exit: css({\n    label: 'exit',\n    [`${measurement}`]: `${size}px`,\n    opacity: 1,\n  }),\n  exitActive: css({\n    label: 'exitActive',\n    opacity: 0,\n    [`${measurement}`]: 0,\n    transition: `opacity ${duration}ms ease-out, ${measurement} ${duration}ms ease-out`,\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, GroupBase, SingleValueProps } from 'react-select';\n\nimport { GrafanaTheme2, SelectableValue, toIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { useDelayedSwitch } from '../../utils/useDelayedSwitch';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\nimport { FadeTransition } from '../transitions/FadeTransition';\nimport { SlideOutTransition } from '../transitions/SlideOutTransition';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    singleValue: css({\n      label: 'singleValue',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n      gridArea: '1 / 1 / 2 / 3',\n    }),\n    spinnerWrapper: css({\n      width: '16px',\n      height: '16px',\n      display: 'inline-block',\n      marginRight: '10px',\n      position: 'relative',\n      verticalAlign: 'middle',\n      overflow: 'hidden',\n    }),\n    spinnerIcon: css({\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n    }),\n    optionIcon: css({\n      marginRight: theme.spacing(1),\n      color: theme.colors.text.secondary,\n    }),\n    disabled: css({\n      color: theme.colors.text.disabled,\n    }),\n    isOpen: css({\n      color: theme.colors.text.disabled,\n    }),\n  };\n};\n\ntype StylesType = ReturnType<typeof getStyles>;\n\nexport type Props<T> = SingleValueProps<SelectableValue<T>, boolean, GroupBase<SelectableValue<T>>>;\n\nexport const SingleValue = <T extends unknown>(props: Props<T>) => {\n  const { children, data, isDisabled } = props;\n  const styles = useStyles2(getStyles);\n  const loading = useDelayedSwitch(data.loading || false, { delay: 250, duration: 750 });\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n\n  return (\n    <components.SingleValue\n      {...props}\n      className={cx(styles.singleValue, isDisabled && styles.disabled, props.selectProps.menuIsOpen && styles.isOpen)}\n    >\n      {data.imgUrl ? (\n        <FadeWithImage loading={loading} imgUrl={data.imgUrl} styles={styles} alt={String(data.label ?? data.value)} />\n      ) : (\n        <>\n          <SlideOutTransition horizontal size={16} visible={loading} duration={150}>\n            <div className={styles.spinnerWrapper}>\n              <Spinner className={styles.spinnerIcon} inline />\n            </div>\n          </SlideOutTransition>\n          {icon && <Icon name={icon} role=\"img\" className={styles.optionIcon} />}\n        </>\n      )}\n\n      {!data.hideText && children}\n    </components.SingleValue>\n  );\n};\n\nconst FadeWithImage = (props: { loading: boolean; imgUrl: string; styles: StylesType; alt?: string }) => {\n  return (\n    <div className={props.styles.spinnerWrapper}>\n      <FadeTransition duration={150} visible={props.loading}>\n        <Spinner className={props.styles.spinnerIcon} inline />\n      </FadeTransition>\n      <FadeTransition duration={150} visible={!props.loading}>\n        <img className={props.styles.spinnerIcon} src={props.imgUrl} alt={props.alt} />\n      </FadeTransition>\n    </div>\n  );\n};\n","import { cx } from '@emotion/css';\nimport React, { Component, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/ThemeContext';\n\nimport { getSelectStyles } from './getSelectStyles';\n\nclass UnthemedValueContainer extends Component<any & { theme: GrafanaTheme2 }> {\n  render() {\n    const { children } = this.props;\n    const { selectProps } = this.props;\n\n    if (\n      selectProps &&\n      Array.isArray(children) &&\n      Array.isArray(children[0]) &&\n      selectProps.maxVisibleValues !== undefined &&\n      !(selectProps.showAllSelectedWhenOpen && selectProps.menuIsOpen)\n    ) {\n      const [valueChildren, ...otherChildren] = children;\n      const truncatedValues = valueChildren.slice(0, selectProps.maxVisibleValues);\n\n      return this.renderContainer([truncatedValues, ...otherChildren]);\n    }\n\n    return this.renderContainer(children);\n  }\n\n  renderContainer(children?: ReactNode) {\n    const { isMulti, theme } = this.props;\n    const noWrap = this.props.selectProps?.noMultiValueWrap && !this.props.selectProps?.menuIsOpen;\n    const styles = getSelectStyles(theme);\n\n    const className = cx(\n      styles.valueContainer,\n      isMulti && styles.valueContainerMulti,\n      noWrap && styles.valueContainerMultiNoWrap\n    );\n\n    return <div className={className}>{children}</div>;\n  }\n}\n\nexport const ValueContainer = withTheme2(UnthemedValueContainer);\n","import { useMemo } from 'react';\nimport { CSSObjectWithLabel } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport default function resetSelectStyles(theme: GrafanaTheme2) {\n  return {\n    clearIndicator: () => ({}),\n    container: () => ({}),\n    control: () => ({}),\n    dropdownIndicator: () => ({}),\n    group: () => ({}),\n    groupHeading: () => ({}),\n    indicatorsContainer: () => ({}),\n    indicatorSeparator: () => ({}),\n    input: function (originalStyles: CSSObjectWithLabel): CSSObjectWithLabel {\n      return {\n        ...originalStyles,\n        color: 'inherit',\n        margin: 0,\n        padding: 0,\n        // Set an explicit z-index here to ensure this element always overlays the singleValue\n        zIndex: 1,\n      };\n    },\n    loadingIndicator: () => ({}),\n    loadingMessage: () => ({}),\n    menu: () => ({}),\n    menuList: ({ maxHeight }: { maxHeight: number }) => ({\n      maxHeight,\n    }),\n    multiValue: () => ({}),\n    multiValueLabel: () => ({\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    }),\n    multiValueRemove: () => ({}),\n    noOptionsMessage: () => ({}),\n    option: () => ({}),\n    placeholder: (originalStyles: CSSObjectWithLabel): CSSObjectWithLabel => ({\n      ...originalStyles,\n      color: theme.colors.text.secondary,\n    }),\n    singleValue: () => ({}),\n    valueContainer: () => ({}),\n  };\n}\n\nexport function useCustomSelectStyles(theme: GrafanaTheme2, width: number | string | undefined) {\n  return useMemo(() => {\n    return {\n      ...resetSelectStyles(theme),\n      menuPortal: (base: any) => {\n        // Would like to correct top position when menu is placed bottom, but have props are not sent to this style function.\n        // Only state is. https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/components/Menu.tsx#L605\n        return {\n          ...base,\n          zIndex: theme.zIndex.portal,\n        };\n      },\n      //These are required for the menu positioning to function\n      menu: ({ top, bottom, position }: any) => {\n        return {\n          top,\n          bottom,\n          position,\n          minWidth: '100%',\n          zIndex: theme.zIndex.dropdown,\n        };\n      },\n      container: () => ({\n        width: width ? theme.spacing(width) : '100%',\n        display: width === 'auto' ? 'inline-flex' : 'flex',\n      }),\n      option: (provided: any, state: any) => ({\n        ...provided,\n        opacity: state.isDisabled ? 0.5 : 1,\n      }),\n    };\n  }, [theme, width]);\n}\n","import { SelectableValue } from '@grafana/data';\n\nimport { SelectableOptGroup } from './types';\n\n/**\n * Normalize the value format to SelectableValue[] | []. Only used for single select\n */\nexport const cleanValue = (\n  value: unknown,\n  options: Array<SelectableValue | SelectableOptGroup | SelectableOptGroup[]>\n) => {\n  if (Array.isArray(value)) {\n    const filtered = value.filter(Boolean);\n    return filtered?.length ? filtered : undefined;\n  }\n  if (typeof value === 'object') {\n    // we want to allow null through into here, so the Select value can be unset\n    return [value];\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    const selectedValue = findSelectedValue(value, options);\n    if (selectedValue) {\n      return [selectedValue];\n    }\n  }\n  return undefined;\n};\n\n/**\n * Find the label for a string|number value inside array of options or optgroups\n */\nexport const findSelectedValue = (\n  value: string | number,\n  options: Array<SelectableValue | SelectableOptGroup | SelectableOptGroup[]>\n): SelectableValue | null => {\n  for (const option of options) {\n    if ('options' in option) {\n      let found = findSelectedValue(value, option.options);\n      if (found) {\n        return found;\n      }\n    } else if ('value' in option && option.value === value) {\n      return option;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Omit descriptions from an array of options\n */\nexport const omitDescriptions = (options: SelectableValue[]): SelectableValue[] => {\n  return options.map(({ description, ...rest }) => rest);\n};\n","import { t } from 'i18next';\nimport React, { ComponentProps, useCallback, useEffect, useRef, useState } from 'react';\nimport { default as ReactSelect, IndicatorsContainerProps, Props as ReactSelectProps } from 'react-select';\nimport { default as ReactAsyncSelect } from 'react-select/async';\nimport { default as AsyncCreatable } from 'react-select/async-creatable';\nimport Creatable from 'react-select/creatable';\n\nimport { SelectableValue, toOption } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\n\nimport { DropdownIndicator } from './DropdownIndicator';\nimport { IndicatorsContainer } from './IndicatorsContainer';\nimport { InputControl } from './InputControl';\nimport { MultiValueContainer, MultiValueRemove } from './MultiValue';\nimport { SelectContainer } from './SelectContainer';\nimport { SelectMenu, SelectMenuOptions, VirtualizedSelectMenu } from './SelectMenu';\nimport { SelectOptionGroup } from './SelectOptionGroup';\nimport { SingleValue } from './SingleValue';\nimport { ValueContainer } from './ValueContainer';\nimport { getSelectStyles } from './getSelectStyles';\nimport { useCustomSelectStyles } from './resetSelectStyles';\nimport { ActionMeta, InputActionMeta, SelectBaseProps } from './types';\nimport { cleanValue, findSelectedValue, omitDescriptions } from './utils';\n\nconst CustomControl = (props: any) => {\n  const {\n    children,\n    innerProps,\n    selectProps: { menuIsOpen, onMenuClose, onMenuOpen },\n    isFocused,\n    isMulti,\n    getValue,\n    innerRef,\n  } = props;\n  const selectProps = props.selectProps as SelectBaseProps<any>;\n\n  if (selectProps.renderControl) {\n    return React.createElement(selectProps.renderControl, {\n      isOpen: menuIsOpen,\n      value: isMulti ? getValue() : getValue()[0],\n      ref: innerRef,\n      onClick: menuIsOpen ? onMenuClose : onMenuOpen,\n      onBlur: onMenuClose,\n      disabled: !!selectProps.disabled,\n      invalid: !!selectProps.invalid,\n    });\n  }\n\n  return (\n    <InputControl\n      ref={innerRef}\n      innerProps={innerProps}\n      prefix={selectProps.prefix}\n      focused={isFocused}\n      invalid={!!selectProps.invalid}\n      disabled={!!selectProps.disabled}\n    >\n      {children}\n    </InputControl>\n  );\n};\n\ninterface SelectPropsWithExtras extends ReactSelectProps {\n  maxVisibleValues?: number | undefined;\n  showAllSelectedWhenOpen: boolean;\n  noMultiValueWrap?: boolean;\n}\n\nexport function SelectBase<T, Rest = {}>({\n  allowCustomValue = false,\n  allowCreateWhileLoading = false,\n  'aria-label': ariaLabel,\n  autoFocus = false,\n  backspaceRemovesValue = true,\n  blurInputOnSelect,\n  cacheOptions,\n  className,\n  closeMenuOnSelect = true,\n  components,\n  createOptionPosition = 'last',\n  defaultOptions,\n  defaultValue,\n  disabled = false,\n  filterOption,\n  formatCreateLabel,\n  getOptionLabel,\n  getOptionValue,\n  inputValue,\n  invalid,\n  isClearable = false,\n  id,\n  isLoading = false,\n  isMulti = false,\n  inputId,\n  isOpen,\n  isOptionDisabled,\n  isSearchable = true,\n  loadOptions,\n  loadingMessage = 'Loading options...',\n  maxMenuHeight = 300,\n  minMenuHeight,\n  maxVisibleValues,\n  menuPlacement = 'auto',\n  menuPosition,\n  menuShouldPortal = true,\n  noOptionsMessage = t('grafana-ui.select.no-options-label', 'No options found'),\n  onBlur,\n  onChange,\n  onCloseMenu,\n  onCreateOption,\n  onInputChange,\n  onKeyDown,\n  onMenuScrollToBottom,\n  onMenuScrollToTop,\n  onOpenMenu,\n  onFocus,\n  openMenuOnFocus = false,\n  options = [],\n  placeholder = t('grafana-ui.select.placeholder', 'Choose'),\n  prefix,\n  renderControl,\n  showAllSelectedWhenOpen = true,\n  tabSelectsValue = true,\n  value,\n  virtualized = false,\n  noMultiValueWrap,\n  width,\n  isValidNewOption,\n  formatOptionLabel,\n  hideSelectedOptions,\n  ...rest\n}: SelectBaseProps<T> & Rest) {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  const reactSelectRef = useRef<{ controlRef: HTMLElement }>(null);\n  const [closeToBottom, setCloseToBottom] = useState<boolean>(false);\n  const selectStyles = useCustomSelectStyles(theme, width);\n  const [hasInputValue, setHasInputValue] = useState<boolean>(!!inputValue);\n\n  // Infer the menu position for asynchronously loaded options. menuPlacement=\"auto\" doesn't work when the menu is\n  // automatically opened when the component is created (it happens in SegmentSelect by setting menuIsOpen={true}).\n  // We can remove this workaround when the bug in react-select is fixed: https://github.com/JedWatson/react-select/issues/4936\n  // Note: we use useEffect instead of hooking into onMenuOpen due to another bug: https://github.com/JedWatson/react-select/issues/3375\n  useEffect(() => {\n    if (\n      loadOptions &&\n      isOpen &&\n      reactSelectRef.current &&\n      reactSelectRef.current.controlRef &&\n      menuPlacement === 'auto'\n    ) {\n      const distance = window.innerHeight - reactSelectRef.current.controlRef.getBoundingClientRect().bottom;\n      setCloseToBottom(distance < maxMenuHeight);\n    }\n  }, [maxMenuHeight, menuPlacement, loadOptions, isOpen]);\n\n  const onChangeWithEmpty = useCallback(\n    (value: SelectableValue<T>, action: ActionMeta) => {\n      if (isMulti && (value === undefined || value === null)) {\n        return onChange([], action);\n      }\n      onChange(value, action);\n    },\n    [isMulti, onChange]\n  );\n\n  let ReactSelectComponent = ReactSelect;\n\n  const creatableProps: ComponentProps<typeof Creatable<SelectableValue<T>>> = {};\n  let asyncSelectProps: any = {};\n  let selectedValue;\n  if (isMulti && loadOptions) {\n    selectedValue = value as any;\n  } else {\n    // If option is passed as a plain value (value property from SelectableValue property)\n    // we are selecting the corresponding value from the options\n    if (isMulti && value && Array.isArray(value) && !loadOptions) {\n      selectedValue = value.map((v) => {\n        // @ts-ignore\n        const selectableValue = findSelectedValue(v.value ?? v, options);\n        // If the select allows custom values there likely won't be a selectableValue in options\n        // so we must return a new selectableValue\n        if (!allowCustomValue || selectableValue) {\n          return selectableValue;\n        }\n        return typeof v === 'string' ? toOption(v) : v;\n      });\n    } else if (loadOptions) {\n      const hasValue = defaultValue || value;\n      selectedValue = hasValue ? [hasValue] : [];\n    } else {\n      selectedValue = cleanValue(value, options);\n    }\n  }\n\n  const commonSelectProps = {\n    'aria-label': ariaLabel,\n    autoFocus,\n    backspaceRemovesValue,\n    blurInputOnSelect,\n    captureMenuScroll: onMenuScrollToBottom || onMenuScrollToTop,\n    closeMenuOnSelect,\n    // We don't want to close if we're actually scrolling the menu\n    // So only close if none of the parents are the select menu itself\n    defaultValue,\n    // Also passing disabled, as this is the new Select API, and I want to use this prop instead of react-select's one\n    disabled,\n    // react-select always tries to filter the options even at first menu open, which is a problem for performance\n    // in large lists. So we set it to not try to filter the options if there is no input value.\n    filterOption: hasInputValue ? filterOption : null,\n    getOptionLabel,\n    getOptionValue,\n    hideSelectedOptions,\n    inputValue,\n    invalid,\n    isClearable,\n    id,\n    // Passing isDisabled as react-select accepts this prop\n    isDisabled: disabled,\n    isLoading,\n    isMulti,\n    inputId,\n    isOptionDisabled,\n    isSearchable,\n    maxMenuHeight,\n    minMenuHeight,\n    maxVisibleValues,\n    menuIsOpen: isOpen,\n    menuPlacement: menuPlacement === 'auto' && closeToBottom ? 'top' : menuPlacement,\n    menuPosition,\n    menuShouldBlockScroll: true,\n    menuPortalTarget: menuShouldPortal && typeof document !== 'undefined' ? document.body : undefined,\n    menuShouldScrollIntoView: false,\n    onBlur,\n    onChange: onChangeWithEmpty,\n    onInputChange: (val: string, actionMeta: InputActionMeta) => {\n      setHasInputValue(!!val);\n      onInputChange?.(val, actionMeta);\n    },\n    onKeyDown,\n    onMenuClose: onCloseMenu,\n    onMenuOpen: onOpenMenu,\n    onMenuScrollToBottom: onMenuScrollToBottom,\n    onMenuScrollToTop: onMenuScrollToTop,\n    onFocus,\n    formatOptionLabel,\n    openMenuOnFocus,\n    options: virtualized ? omitDescriptions(options) : options,\n    placeholder,\n    prefix,\n    renderControl,\n    showAllSelectedWhenOpen,\n    tabSelectsValue,\n    value: isMulti ? selectedValue : selectedValue?.[0],\n    noMultiValueWrap,\n  };\n\n  if (allowCustomValue) {\n    ReactSelectComponent = Creatable as any;\n    creatableProps.allowCreateWhileLoading = allowCreateWhileLoading;\n    creatableProps.formatCreateLabel = formatCreateLabel ?? defaultFormatCreateLabel;\n    creatableProps.onCreateOption = onCreateOption;\n    creatableProps.createOptionPosition = createOptionPosition;\n    creatableProps.isValidNewOption = isValidNewOption;\n  }\n\n  // Instead of having AsyncSelect, as a separate component we render ReactAsyncSelect\n  if (loadOptions) {\n    ReactSelectComponent = (allowCustomValue ? AsyncCreatable : ReactAsyncSelect) as any;\n    asyncSelectProps = {\n      loadOptions,\n      cacheOptions,\n      defaultOptions,\n    };\n  }\n\n  const SelectMenuComponent = virtualized ? VirtualizedSelectMenu : SelectMenu;\n\n  return (\n    <>\n      <ReactSelectComponent\n        ref={reactSelectRef}\n        components={{\n          MenuList: SelectMenuComponent,\n          Group: SelectOptionGroup,\n          ValueContainer,\n          IndicatorsContainer: CustomIndicatorsContainer,\n          IndicatorSeparator: IndicatorSeparator,\n          Control: CustomControl,\n          Option: SelectMenuOptions,\n          ClearIndicator(props: any) {\n            const { clearValue } = props;\n            return (\n              <Icon\n                name=\"times\"\n                role=\"button\"\n                aria-label=\"select-clear-value\"\n                className={styles.singleValueRemove}\n                onMouseDown={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  clearValue();\n                }}\n              />\n            );\n          },\n          LoadingIndicator() {\n            return <Spinner inline />;\n          },\n          LoadingMessage() {\n            return <div className={styles.loadingMessage}>{loadingMessage}</div>;\n          },\n          NoOptionsMessage() {\n            return (\n              <div className={styles.loadingMessage} aria-label=\"No options provided\">\n                {noOptionsMessage}\n              </div>\n            );\n          },\n          DropdownIndicator: DropdownIndicator,\n          SingleValue(props: any) {\n            return <SingleValue {...props} isDisabled={disabled} />;\n          },\n          SelectContainer,\n          MultiValueContainer: MultiValueContainer,\n          MultiValueRemove: !disabled ? MultiValueRemove : () => null,\n          ...components,\n        }}\n        styles={selectStyles}\n        className={className}\n        {...commonSelectProps}\n        {...creatableProps}\n        {...asyncSelectProps}\n        {...rest}\n      />\n    </>\n  );\n}\n\nfunction defaultFormatCreateLabel(input: string) {\n  return (\n    <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n      <div>{input}</div>\n      <div style={{ flexGrow: 1 }} />\n      <div className=\"muted small\" style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n        Hit enter to add\n      </div>\n    </div>\n  );\n}\n\ntype CustomIndicatorsContainerProps = IndicatorsContainerProps & {\n  selectProps: SelectPropsWithExtras;\n  children: React.ReactNode;\n};\n\nfunction CustomIndicatorsContainer(props: CustomIndicatorsContainerProps) {\n  const { showAllSelectedWhenOpen, maxVisibleValues, menuIsOpen } = props.selectProps;\n\n  const value = props.getValue();\n\n  if (maxVisibleValues !== undefined && Array.isArray(props.children)) {\n    const selectedValuesCount = value.length;\n\n    if (selectedValuesCount > maxVisibleValues && !(showAllSelectedWhenOpen && menuIsOpen)) {\n      const indicatorChildren = [...props.children];\n      indicatorChildren.splice(\n        -1,\n        0,\n        <span key=\"excess-values\" id=\"excess-values\">\n          (+{selectedValuesCount - maxVisibleValues})\n        </span>\n      );\n\n      return <IndicatorsContainer {...props}>{indicatorChildren}</IndicatorsContainer>;\n    }\n  }\n\n  return <IndicatorsContainer {...props} />;\n}\n\nfunction IndicatorSeparator() {\n  return <></>;\n}\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { SelectBase } from './SelectBase';\nimport { SelectContainer, SelectContainerProps } from './SelectContainer';\nimport {\n  SelectCommonProps,\n  MultiSelectCommonProps,\n  SelectAsyncProps,\n  VirtualizedSelectProps,\n  VirtualizedSelectAsyncProps,\n} from './types';\n\nexport function Select<T, Rest = {}>(props: SelectCommonProps<T> & Rest) {\n  return <SelectBase {...props} />;\n}\n\nexport function MultiSelect<T, Rest = {}>(props: MultiSelectCommonProps<T> & Rest) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport interface AsyncSelectProps<T> extends Omit<SelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: T | SelectableValue<T> | null;\n}\n\nexport function AsyncSelect<T, Rest = {}>(props: AsyncSelectProps<T> & Rest) {\n  return <SelectBase {...props} />;\n}\n\nexport function VirtualizedSelect<T, Rest = {}>(props: VirtualizedSelectProps<T> & Rest) {\n  return <SelectBase virtualized {...props} />;\n}\n\nexport function AsyncVirtualizedSelect<T, Rest = {}>(props: VirtualizedSelectAsyncProps<T> & Rest) {\n  return <SelectBase virtualized {...props} />;\n}\n\ninterface AsyncMultiSelectProps<T> extends Omit<MultiSelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: Array<SelectableValue<T>>;\n}\n\nexport function AsyncMultiSelect<T, Rest = {}>(props: AsyncMultiSelectProps<T> & Rest) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport { SelectContainer, type SelectContainerProps };\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { HTMLProps, useRef } from 'react';\n\nimport { GrafanaTheme2, deprecationWarning } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'value'> {\n  value?: boolean;\n  /** Make inline switch's background and border transparent */\n  transparent?: boolean;\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, Props>(\n  ({ value, checked, onChange, id, label, disabled, invalid = false, ...inputProps }, ref) => {\n    if (checked) {\n      deprecationWarning('Switch', 'checked prop', 'value');\n    }\n\n    const styles = useStyles2(getSwitchStyles);\n    const switchIdRef = useRef(id ? id : uniqueId('switch-'));\n\n    return (\n      <div className={cx(styles.switch, invalid && styles.invalid)}>\n        <input\n          type=\"checkbox\"\n          disabled={disabled}\n          checked={value}\n          onChange={(event) => {\n            !disabled && onChange?.(event);\n          }}\n          id={switchIdRef.current}\n          {...inputProps}\n          ref={ref}\n        />\n        <label htmlFor={switchIdRef.current} aria-label={label ?? 'Toggle switch'} />\n      </div>\n    );\n  }\n);\n\nSwitch.displayName = 'Switch';\n\nexport interface InlineSwitchProps extends Props {\n  showLabel?: boolean;\n}\n\nexport const InlineSwitch = React.forwardRef<HTMLInputElement, InlineSwitchProps>(\n  ({ transparent, className, showLabel, label, value, id, invalid, ...props }, ref) => {\n    const styles = useStyles2(getSwitchStyles, transparent);\n\n    return (\n      <div\n        className={cx(styles.inlineContainer, className, props.disabled && styles.disabled, invalid && styles.invalid)}\n      >\n        {showLabel && (\n          <label\n            htmlFor={id}\n            className={cx(styles.inlineLabel, value && styles.inlineLabelEnabled, 'inline-switch-label')}\n          >\n            {label}\n          </label>\n        )}\n        <Switch {...props} id={id} label={label} ref={ref} value={value} />\n      </div>\n    );\n  }\n);\n\nInlineSwitch.displayName = 'Switch';\n\nconst getSwitchStyles = (theme: GrafanaTheme2, transparent?: boolean) => ({\n  switch: css({\n    width: '32px',\n    height: '16px',\n    position: 'relative',\n\n    input: {\n      opacity: 0,\n      left: '-100vw',\n      zIndex: -1000,\n      position: 'absolute',\n\n      '&:disabled + label': {\n        background: theme.colors.action.disabledBackground,\n        cursor: 'not-allowed',\n      },\n\n      '&:checked + label': {\n        background: theme.colors.primary.main,\n        borderColor: theme.colors.primary.main,\n\n        '&:hover': {\n          background: theme.colors.primary.shade,\n        },\n\n        '&::after': {\n          transform: 'translate3d(18px, -50%, 0)',\n          background: theme.colors.primary.contrastText,\n        },\n      },\n\n      '&:focus + label, &:focus-visible + label': getFocusStyles(theme),\n\n      '&:focus:not(:focus-visible) + label': getMouseFocusStyles(theme),\n    },\n\n    label: {\n      width: '100%',\n      height: '100%',\n      cursor: 'pointer',\n      borderRadius: theme.shape.radius.pill,\n      background: theme.components.input.background,\n      border: `1px solid ${theme.components.input.borderColor}`,\n      transition: 'all 0.3s ease',\n\n      '&:hover': {\n        borderColor: theme.components.input.borderHover,\n      },\n\n      '&::after': {\n        position: 'absolute',\n        display: 'block',\n        content: '\"\"',\n        width: '12px',\n        height: '12px',\n        borderRadius: theme.shape.radius.circle,\n        background: theme.colors.text.secondary,\n        boxShadow: theme.shadows.z1,\n        top: '50%',\n        transform: 'translate3d(2px, -50%, 0)',\n        transition: 'transform 0.2s cubic-bezier(0.19, 1, 0.22, 1)',\n\n        '@media (forced-colors: active)': {\n          border: '1px solid transparent',\n        },\n      },\n    },\n  }),\n  inlineContainer: css({\n    padding: theme.spacing(0, 1),\n    height: theme.spacing(theme.components.height.md),\n    display: 'inline-flex',\n    alignItems: 'center',\n    background: transparent ? 'transparent' : theme.components.input.background,\n    border: `1px solid ${transparent ? 'transparent' : theme.components.input.borderColor}`,\n    borderRadius: theme.shape.radius.default,\n\n    '&:hover': {\n      border: `1px solid ${transparent ? 'transparent' : theme.components.input.borderHover}`,\n\n      '.inline-switch-label': {\n        color: theme.colors.text.primary,\n      },\n    },\n  }),\n  disabled: css({\n    backgroundColor: 'rgba(204, 204, 220, 0.04)',\n    color: 'rgba(204, 204, 220, 0.6)',\n    border: '1px solid rgba(204, 204, 220, 0.04)',\n  }),\n  inlineLabel: css({\n    cursor: 'pointer',\n    paddingRight: theme.spacing(1),\n    color: theme.colors.text.secondary,\n    whiteSpace: 'nowrap',\n  }),\n  inlineLabelEnabled: css({\n    color: theme.colors.text.primary,\n  }),\n  invalid: css({\n    'input + label, input:checked + label, input:hover + label': {\n      border: `1px solid ${theme.colors.error.border}`,\n    },\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\n\nexport interface Props extends Omit<HTMLProps<HTMLTextAreaElement>, 'size'> {\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n}\n\nexport const TextArea = React.forwardRef<HTMLTextAreaElement, Props>(({ invalid, className, ...props }, ref) => {\n  const styles = useStyles2(getTextAreaStyle, invalid);\n\n  return <textarea {...props} className={cx(styles.textarea, className)} ref={ref} />;\n});\n\nconst getTextAreaStyle = (theme: GrafanaTheme2, invalid = false) => ({\n  textarea: cx(\n    sharedInputStyle(theme),\n    getFocusStyle(theme),\n    css({\n      display: 'block',\n      borderRadius: theme.shape.radius.default,\n      padding: `${theme.spacing.gridSize / 4}px ${theme.spacing.gridSize}px`,\n      width: '100%',\n      borderColor: invalid ? theme.colors.error.border : theme.components.input.borderColor,\n    })\n  ),\n});\n\nTextArea.displayName = 'TextArea';\n","import React, { ChangeEvent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst streamingClientFields = [\n  { label: 'Speed (ms)', id: 'speed', placeholder: 'value', min: 10, step: 10 },\n  { label: 'Spread', id: 'spread', placeholder: 'value', min: 0.5, step: 0.1 },\n  { label: 'Noise', id: 'noise', placeholder: 'value', min: 0, step: 0.1 },\n  { label: 'Bands', id: 'bands', placeholder: 'bands', min: 0, step: 1 },\n] as const;\n\nconst types = [\n  { value: 'signal', label: 'Signal' },\n  { value: 'logs', label: 'Logs' },\n  { value: 'fetch', label: 'Fetch' },\n];\n\nexport const StreamingClientEditor = ({ onChange, query }: EditorProps) => {\n  const onSelectChange = ({ value }: SelectableValue) => {\n    onChange({ target: { name: 'type', value } });\n  };\n\n  // Convert values to numbers before saving\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    onChange({ target: { name, value: Number(value) } });\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Type\" labelWidth={14}>\n        <Select width={32} onChange={onSelectChange} defaultValue={types[0]} options={types} />\n      </InlineField>\n      {query?.stream?.type === 'signal' &&\n        streamingClientFields.map(({ label, id, min, step, placeholder }) => {\n          return (\n            <InlineField label={label} labelWidth={14} key={id}>\n              <Input\n                width={32}\n                type=\"number\"\n                id={`stream.${id}-${query.refId}`}\n                name={id}\n                min={min}\n                step={step}\n                value={query.stream?.[id]}\n                placeholder={placeholder}\n                onChange={onInputChange}\n              />\n            </InlineField>\n          );\n        })}\n\n      {query?.stream?.type === 'fetch' && (\n        <InlineField label=\"URL\" labelWidth={14} grow>\n          <Input\n            type=\"text\"\n            name=\"url\"\n            id={`stream.url-${query.refId}`}\n            value={query?.stream?.url}\n            placeholder=\"Fetch URL\"\n            onChange={onChange}\n          />\n        </InlineField>\n      )}\n    </InlineFieldRow>\n  );\n};\n","import React from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { TestData } from '../dataquery.gen';\n\nconst randomWalkFields: Array<{\n  label: string;\n  id: Selector;\n  placeholder: string;\n  min?: number;\n  step?: number;\n  max?: number;\n  tooltip?: string;\n}> = [\n  { label: 'Series count', id: 'seriesCount', placeholder: '1', min: 1, step: 1 },\n  { label: 'Start value', id: 'startValue', placeholder: 'auto', step: 1 },\n  { label: 'Min', id: 'min', placeholder: 'none', step: 0.1 },\n  { label: 'Max', id: 'max', placeholder: 'none', step: 0.1 },\n  { label: 'Spread', id: 'spread', placeholder: '1', min: 0.5, step: 0.1 },\n  { label: 'Noise', id: 'noise', placeholder: '0', min: 0, step: 0.1 },\n  {\n    label: 'Drop (%)',\n    id: 'drop',\n    placeholder: '0',\n    min: 0,\n    max: 100,\n    step: 1,\n    tooltip: 'Exclude some percent (chance) points',\n  },\n];\n\nconst testSelectors = selectors.components.DataSource.TestData.QueryTab;\ntype Selector = 'max' | 'min' | 'noise' | 'seriesCount' | 'spread' | 'startValue' | 'drop';\n\nexport const RandomWalkEditor = ({ onChange, query }: EditorProps) => {\n  return (\n    <InlineFieldRow>\n      {randomWalkFields.map(({ label, id, min, step, placeholder, tooltip }) => {\n        const selector = testSelectors[id];\n        return (\n          <InlineField label={label} labelWidth={14} key={id} aria-label={selector} tooltip={tooltip}>\n            <Input\n              width={32}\n              name={id}\n              type=\"number\"\n              id={`randomWalk-${id}-${query.refId}`}\n              min={min}\n              step={step}\n              value={(query as any)[id as keyof TestData] || placeholder}\n              placeholder={placeholder}\n              onChange={onChange}\n            />\n          </InlineField>\n        );\n      })}\n    </InlineFieldRow>\n  );\n};\n","import { useAsync } from 'react-use';\n\n// Allows simple dynamic imports in the components\nexport const useAsyncDependency = (importStatement: Promise<any>) => {\n  const state = useAsync(async () => {\n    return await importStatement;\n  });\n\n  return {\n    ...state,\n    dependency: state.value,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { useStyles2 } from '../../themes';\n\nimport { ErrorBoundaryApi } from './ErrorBoundary';\n\nexport interface Props extends ErrorBoundaryApi {\n  title: string;\n}\n\nexport const ErrorWithStack = ({ error, errorInfo, title }: Props) => {\n  const style = useStyles2(getStyles);\n\n  return (\n    <div className={style}>\n      <h2>{title}</h2>\n      <details style={{ whiteSpace: 'pre-wrap' }}>\n        {error && error.toString()}\n        <br />\n        {errorInfo && errorInfo.componentStack}\n      </details>\n    </div>\n  );\n};\n\nErrorWithStack.displayName = 'ErrorWithStack';\n\nconst getStyles = () => {\n  return css({\n    width: '500px',\n    margin: '64px auto',\n  });\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Spinner } from '../Spinner/Spinner';\n\n/**\n * @public\n */\nexport interface LoadingPlaceholderProps extends HTMLAttributes<HTMLDivElement> {\n  text: React.ReactNode;\n}\n\n/**\n * @public\n */\nexport const LoadingPlaceholder = ({ text, className, ...rest }: LoadingPlaceholderProps) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...rest}>\n      {text} <Spinner inline={true} />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      marginBottom: theme.spacing(4),\n    }),\n  };\n};\n","import React from 'react';\n\nimport { useAsyncDependency } from '../../utils/useAsyncDependency';\nimport { ErrorWithStack } from '../ErrorBoundary/ErrorWithStack';\nimport { LoadingPlaceholder } from '../LoadingPlaceholder/LoadingPlaceholder';\n\n// we only use import type so it will not be included in the bundle\nimport type { ReactMonacoEditorProps } from './types';\n\n/**\n * @internal\n * Experimental export\n **/\nexport const ReactMonacoEditorLazy = (props: ReactMonacoEditorProps) => {\n  const { loading, error, dependency } = useAsyncDependency(\n    import(/* webpackChunkName: \"react-monaco-editor\" */ './ReactMonacoEditor')\n  );\n\n  if (loading) {\n    return <LoadingPlaceholder text={''} />;\n  }\n\n  if (error) {\n    return (\n      <ErrorWithStack\n        title=\"React Monaco Editor failed to load\"\n        error={error}\n        errorInfo={{ componentStack: error?.stack || '' }}\n      />\n    );\n  }\n\n  const ReactMonacoEditor = dependency.ReactMonacoEditor;\n  return <ReactMonacoEditor {...props} />;\n};\n","// We use `import type` to guarantee it'll be erased from the JS and it doesnt accidently bundle monaco\nimport type { EditorProps } from '@monaco-editor/react';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\n// we do not allow customizing the theme.\n// (theme is complicated in Monaco, right now there is\n// a limitation where all monaco editors must have\n// the same theme, see\n// https://github.com/microsoft/monaco-editor/issues/338#issuecomment-274837186\n// )\nexport type ReactMonacoEditorProps = Omit<EditorProps, 'theme'>;\n\nexport type CodeEditorChangeHandler = (value: string) => void;\nexport type CodeEditorSuggestionProvider = () => CodeEditorSuggestionItem[];\n\nexport type { monacoType as monacoTypes };\nexport type Monaco = typeof monacoType;\nexport type MonacoEditor = monacoType.editor.IStandaloneCodeEditor;\nexport type MonacoOptions = MonacoOptionsWithGrafanaDefaults;\n\nexport interface CodeEditorProps {\n  value: string;\n  language: string;\n  width?: number | string;\n  height?: number | string;\n\n  readOnly?: boolean;\n  showMiniMap?: boolean;\n  showLineNumbers?: boolean;\n  monacoOptions?: MonacoOptions;\n\n  /**\n   * Callback before the editor has mounted that gives you raw access to monaco\n   */\n  onBeforeEditorMount?: (monaco: Monaco) => void;\n\n  /**\n   * Callback after the editor has mounted that gives you raw access to monaco\n   */\n  onEditorDidMount?: (editor: MonacoEditor, monaco: Monaco) => void;\n\n  /** Callback before the edior has unmounted */\n  onEditorWillUnmount?: () => void;\n\n  /** Handler to be performed when editor is blurred */\n  onBlur?: CodeEditorChangeHandler;\n\n  /** Handler to be performed when editor is focused */\n  onFocus?: CodeEditorChangeHandler;\n\n  /** Handler to be performed whenever the text inside the editor changes */\n  onChange?: CodeEditorChangeHandler;\n\n  /** Handler to be performed when Cmd/Ctrl+S is pressed */\n  onSave?: CodeEditorChangeHandler;\n\n  /**\n   * Language agnostic suggestion completions -- typically for template variables\n   */\n  getSuggestions?: CodeEditorSuggestionProvider;\n\n  containerStyles?: string;\n}\n\n/**\n * @alpha\n */\nexport enum CodeEditorSuggestionItemKind {\n  Method = 'method',\n  Field = 'field',\n  Property = 'property',\n  Constant = 'constant',\n  Text = 'text',\n}\n\n/**\n * @alpha\n */\nexport interface CodeEditorSuggestionItem {\n  /**\n   * The label of this completion item. By default\n   * this is also the text that is inserted when selecting\n   * this completion.\n   */\n  label: string;\n\n  /**\n   * The kind of this completion item. An icon is chosen\n   * by the editor based on the kind.\n   */\n  kind?: CodeEditorSuggestionItemKind;\n\n  /**\n   * A human-readable string with additional information\n   * about this item, like type or symbol information.\n   */\n  detail?: string;\n\n  /**\n   * A human-readable string that represents a doc-comment.\n   */\n  documentation?: string; // | IMarkdownString;\n\n  /**\n   * A string or snippet that should be inserted in a document when selecting\n   * this completion. When `falsy` the `label` is used.\n   */\n  insertText?: string;\n}\n\n/**\n * This interface will extend the original Monaco editor options interface\n * but changing the code comments to contain the proper default values to\n * prevent the consumer of the CodeEditor to get incorrect documentation in editor.\n */\nexport interface MonacoOptionsWithGrafanaDefaults extends monacoType.editor.IStandaloneEditorConstructionOptions {\n  /**\n   * Enable custom contextmenu.\n   * Defaults to false.\n   */\n  contextmenu?: boolean;\n  /**\n   * The number of spaces a tab is equal to.\n   * This setting is overridden based on the file contents when `detectIndentation` is on.\n   * Defaults to 4.\n   */\n  tabSize?: number;\n  /**\n   * Show code lens\n   * Defaults to false.\n   */\n  codeLens?: boolean;\n  /**\n   * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n   * Defaults to 4.\n   */\n  lineNumbersMinChars?: number;\n  /**\n   * The width reserved for line decorations (in px).\n   * Line decorations are placed between line numbers and the editor content.\n   * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n   * Defaults to 1 * theme.spacing.gridSize.\n   */\n  lineDecorationsWidth?: number | string;\n  /**\n   * Controls if a border should be drawn around the overview ruler.\n   * Defaults to `false`.\n   */\n  overviewRulerBorder?: boolean;\n  /**\n   * Enable that the editor will install an interval to check if its container dom node size has changed.\n   * Enabling this might have a severe performance impact.\n   * Defaults to true.\n   */\n  automaticLayout?: boolean;\n\n  /**\n   * Always consume mouse wheel events (always call preventDefault() and stopPropagation() on the browser events).\n   * Always consuming mouse wheel events will prevent the page from scrolling if the cursor is over the editor.\n   * Defaults to `false`.\n   */\n  alwaysConsumeMouseWheel?: boolean;\n}\n","import type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\nimport { CodeEditorSuggestionItem, CodeEditorSuggestionItemKind, CodeEditorSuggestionProvider, Monaco } from './types';\n\n/**\n * @internal -- only exported for tests\n */\nexport function findInsertIndex(line: string): { index: number; prefix: string } {\n  for (let i = line.length - 1; i > 0; i--) {\n    const ch = line.charAt(i);\n    if (ch === '$') {\n      return {\n        index: i,\n        prefix: line.substring(i),\n      };\n    }\n\n    // Keep these seperators\n    if (ch === ' ' || ch === '\\t' || ch === '\"' || ch === \"'\") {\n      return {\n        index: i + 1,\n        prefix: line.substring(i + 1),\n      };\n    }\n  }\n  return {\n    index: 0,\n    prefix: line,\n  };\n}\n\nfunction getCompletionItems(\n  monaco: Monaco,\n  prefix: string,\n  suggestions: CodeEditorSuggestionItem[],\n  range: monacoType.IRange\n): monacoType.languages.CompletionItem[] {\n  const items: monacoType.languages.CompletionItem[] = [];\n  for (const suggestion of suggestions) {\n    if (prefix && !suggestion.label.startsWith(prefix)) {\n      continue; // skip non-matching suggestions\n    }\n\n    items.push({\n      ...suggestion,\n      kind: mapKinds(monaco, suggestion.kind),\n      range,\n      insertText: suggestion.insertText ?? suggestion.label,\n    });\n  }\n  return items;\n}\n\nfunction mapKinds(monaco: Monaco, sug?: CodeEditorSuggestionItemKind): monacoType.languages.CompletionItemKind {\n  switch (sug) {\n    case CodeEditorSuggestionItemKind.Method:\n      return monaco.languages.CompletionItemKind.Method;\n    case CodeEditorSuggestionItemKind.Field:\n      return monaco.languages.CompletionItemKind.Field;\n    case CodeEditorSuggestionItemKind.Property:\n      return monaco.languages.CompletionItemKind.Property;\n    case CodeEditorSuggestionItemKind.Constant:\n      return monaco.languages.CompletionItemKind.Constant;\n    case CodeEditorSuggestionItemKind.Text:\n      return monaco.languages.CompletionItemKind.Text;\n  }\n  return monaco.languages.CompletionItemKind.Text;\n}\n\n/**\n * @alpha\n */\nexport function registerSuggestions(\n  monaco: Monaco,\n  language: string,\n  getSuggestions: CodeEditorSuggestionProvider,\n  modelId: string\n): monacoType.IDisposable | undefined {\n  if (!language || !getSuggestions) {\n    return undefined;\n  }\n  return monaco.languages.registerCompletionItemProvider(language, {\n    triggerCharacters: ['$'],\n\n    provideCompletionItems: (model, position, context) => {\n      // only return these suggestions for the specified modelId\n      // prevents duplicate suggestions when multiple editors are open\n      if (model.id !== modelId) {\n        return undefined;\n      }\n      const range = {\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: position.column,\n        endColumn: position.column,\n      };\n\n      // Simple check if this was triggered by pressing `$`\n      if (context.triggerCharacter === '$') {\n        range.startColumn = position.column - 1;\n        return {\n          suggestions: getCompletionItems(monaco, '$', getSuggestions(), range),\n        };\n      }\n\n      // Find the replacement region\n      const currentLine = model.getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn: 1,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column,\n      });\n\n      const { index, prefix } = findInsertIndex(currentLine);\n      range.startColumn = index + 1;\n\n      const suggestions = getCompletionItems(monaco, prefix, getSuggestions(), range);\n      if (suggestions.length) {\n        // NOTE, this will replace any language provided suggestions\n        return { suggestions };\n      }\n\n      // Default language suggestions\n      return undefined;\n    },\n  });\n}\n","import { css } from '@emotion/css';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { PureComponent } from 'react';\n\nimport { GrafanaTheme2, monacoLanguageRegistry } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\n\nimport { ReactMonacoEditorLazy } from './ReactMonacoEditorLazy';\nimport { registerSuggestions } from './suggestions';\nimport { CodeEditorProps, Monaco, MonacoEditor as MonacoEditorType, MonacoOptions } from './types';\n\ntype Props = CodeEditorProps & Themeable2;\n\nclass UnthemedCodeEditor extends PureComponent<Props> {\n  completionCancel?: monacoType.IDisposable;\n  monaco?: Monaco;\n  modelId?: string;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillUnmount() {\n    if (this.completionCancel) {\n      this.completionCancel.dispose();\n    }\n\n    this.props.onEditorWillUnmount?.();\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    const { getSuggestions, language } = this.props;\n\n    const newLanguage = oldProps.language !== language;\n    const newGetSuggestions = oldProps.getSuggestions !== getSuggestions;\n\n    if (newGetSuggestions || newLanguage) {\n      if (this.completionCancel) {\n        this.completionCancel.dispose();\n      }\n\n      if (!this.monaco) {\n        console.warn('Monaco instance not loaded yet');\n        return;\n      }\n\n      if (getSuggestions && this.modelId) {\n        this.completionCancel = registerSuggestions(this.monaco, language, getSuggestions, this.modelId);\n      }\n    }\n\n    if (newLanguage) {\n      this.loadCustomLanguage();\n    }\n  }\n\n  loadCustomLanguage = () => {\n    const { language } = this.props;\n\n    const customLanguage = monacoLanguageRegistry.getIfExists(language);\n\n    if (customLanguage) {\n      return customLanguage.init();\n    }\n\n    return Promise.resolve();\n  };\n\n  // This is replaced with a real function when the actual editor mounts\n  getEditorValue = () => '';\n\n  onBlur = () => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(this.getEditorValue());\n    }\n  };\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(this.getEditorValue());\n    }\n  };\n\n  onSave = () => {\n    const { onSave } = this.props;\n    if (onSave) {\n      onSave(this.getEditorValue());\n    }\n  };\n\n  handleBeforeMount = (monaco: Monaco) => {\n    this.monaco = monaco;\n\n    const { onBeforeEditorMount } = this.props;\n\n    onBeforeEditorMount?.(monaco);\n  };\n\n  handleOnMount = (editor: MonacoEditorType, monaco: Monaco) => {\n    const { getSuggestions, language, onChange, onEditorDidMount } = this.props;\n\n    this.modelId = editor.getModel()?.id;\n    this.getEditorValue = () => editor.getValue();\n\n    if (getSuggestions && this.modelId) {\n      this.completionCancel = registerSuggestions(monaco, language, getSuggestions, this.modelId);\n    }\n\n    // Save when pressing Ctrl+S or Cmd+S\n    editor.onKeyDown((e: monacoType.IKeyboardEvent) => {\n      if (e.keyCode === monaco.KeyCode.KeyS && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.onSave();\n      }\n    });\n\n    const languagePromise = this.loadCustomLanguage();\n\n    if (onChange) {\n      editor.getModel()?.onDidChangeContent(() => onChange(editor.getValue()));\n    }\n\n    if (onEditorDidMount) {\n      languagePromise.then(() => onEditorDidMount(editor, monaco));\n    }\n  };\n\n  render() {\n    const { theme, language, width, height, showMiniMap, showLineNumbers, readOnly, monacoOptions } = this.props;\n    const { alwaysConsumeMouseWheel, ...restMonacoOptions } = monacoOptions ?? {};\n\n    const value = this.props.value ?? '';\n    const longText = value.length > 100;\n\n    const containerStyles = this.props.containerStyles ?? getStyles(theme).container;\n\n    const options: MonacoOptions = {\n      wordWrap: 'off',\n      tabSize: 2,\n      codeLens: false,\n      contextmenu: false,\n      minimap: {\n        enabled: longText && showMiniMap,\n        renderCharacters: false,\n      },\n\n      readOnly,\n      lineNumbersMinChars: 4,\n      lineDecorationsWidth: 1 * theme.spacing.gridSize,\n      overviewRulerBorder: false,\n      automaticLayout: true,\n      padding: {\n        top: 0.5 * theme.spacing.gridSize,\n        bottom: 0.5 * theme.spacing.gridSize,\n      },\n      fixedOverflowWidgets: true, // Ensures suggestions menu is drawn on top\n\n      scrollbar: {\n        alwaysConsumeMouseWheel: alwaysConsumeMouseWheel ?? false,\n      },\n    };\n\n    if (!showLineNumbers) {\n      options.glyphMargin = false;\n      options.folding = false;\n      options.lineNumbers = 'off';\n      options.lineNumbersMinChars = 0;\n    }\n\n    return (\n      <div\n        className={containerStyles}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        data-testid={selectors.components.CodeEditor.container}\n      >\n        <ReactMonacoEditorLazy\n          width={width}\n          height={height}\n          language={language}\n          value={value}\n          options={{\n            ...options,\n            ...(restMonacoOptions ?? {}),\n          }}\n          beforeMount={this.handleBeforeMount}\n          onMount={this.handleOnMount}\n          keepCurrentModel={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport const CodeEditor = withTheme2(UnthemedCodeEditor);\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      borderRadius: theme.shape.radius.default,\n      border: `1px solid ${theme.components.input.borderColor}`,\n    }),\n  };\n};\n","import React from 'react';\n\nimport { CodeEditor } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nexport const CSVContentEditor = ({ onChange, query }: EditorProps) => {\n  const onSaveCSV = (csvContent: string) => {\n    onChange({ ...query, csvContent });\n  };\n\n  return (\n    <CodeEditor\n      height={300}\n      language=\"csv\"\n      value={query.csvContent ?? ''}\n      onBlur={onSaveCSV}\n      onSave={onSaveCSV}\n      showMiniMap={false}\n      showLineNumbers={true}\n    />\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nexport const CSVFileEditor = ({ onChange, query }: EditorProps) => {\n  const onChangeFileName = ({ value }: SelectableValue<string>) => {\n    onChange({ ...query, csvFileName: value });\n  };\n\n  const files = [\n    'flight_info_by_state.csv',\n    'population_by_state.csv',\n    'gdp_per_capita.csv',\n    'js_libraries.csv',\n    'ohlc_dogecoin.csv',\n    'weight_height.csv',\n    'browser_marketshare.csv',\n    'automobiles.csv',\n  ].map((name) => ({ label: name, value: name }));\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"File\" labelWidth={14}>\n        <Select\n          width={32}\n          onChange={onChangeFileName}\n          placeholder=\"Select csv file\"\n          options={files}\n          value={files.find((f) => f.value === query.csvFileName)}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n","import { css, CSSObject, cx } from '@emotion/css';\nimport React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\n\nimport { GrafanaTheme2, ThemeRichColor } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types';\nimport { IconName } from '../../types/icon';\nimport { getPropertiesForButtonSize } from '../Forms/commonStyles';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip, TooltipPlacement } from '../Tooltip';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'destructive' | 'success';\nexport const allButtonVariants: ButtonVariant[] = ['primary', 'secondary', 'destructive'];\nexport type ButtonFill = 'solid' | 'outline' | 'text';\nexport const allButtonFills: ButtonFill[] = ['solid', 'outline', 'text'];\n\ntype CommonProps = {\n  size?: ComponentSize;\n  variant?: ButtonVariant;\n  fill?: ButtonFill;\n  icon?: IconName;\n  className?: string;\n  children?: React.ReactNode;\n  fullWidth?: boolean;\n  type?: string;\n  /** Tooltip content to display on hover */\n  tooltip?: PopoverContent;\n  /** Position of the tooltip */\n  tooltipPlacement?: TooltipPlacement;\n};\n\nexport type ButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      variant = 'primary',\n      size = 'md',\n      fill = 'solid',\n      icon,\n      fullWidth,\n      children,\n      className,\n      type = 'button',\n      tooltip,\n      tooltipPlacement,\n      ...otherProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getButtonStyles({\n      theme,\n      size,\n      variant,\n      fill,\n      fullWidth,\n      iconOnly: !children,\n    });\n\n    // In order to standardise Button please always consider using IconButton when you need a button with an icon only\n    // When using tooltip, ref is forwarded to Tooltip component instead for https://github.com/grafana/grafana/issues/65632\n    const button = (\n      <button className={cx(styles.button, className)} type={type} {...otherProps} ref={tooltip ? undefined : ref}>\n        {icon && <Icon name={icon} size={size} className={styles.icon} />}\n        {children && <span className={styles.content}>{children}</span>}\n      </button>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip ref={ref} content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nButton.displayName = 'Button';\n\nexport type ButtonLinkProps = CommonProps &\n  ButtonHTMLAttributes<HTMLButtonElement> &\n  AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport const LinkButton = React.forwardRef<HTMLAnchorElement, ButtonLinkProps>(\n  (\n    {\n      variant = 'primary',\n      size = 'md',\n      fill = 'solid',\n      icon,\n      fullWidth,\n      children,\n      className,\n      onBlur,\n      onFocus,\n      disabled,\n      tooltip,\n      tooltipPlacement,\n      ...otherProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getButtonStyles({\n      theme,\n      fullWidth,\n      size,\n      variant,\n      fill,\n      iconOnly: !children,\n    });\n\n    const linkButtonStyles = cx(\n      styles.button,\n      {\n        [css(styles.disabled, {\n          pointerEvents: 'none',\n        })]: disabled,\n      },\n      className\n    );\n\n    // When using tooltip, ref is forwarded to Tooltip component instead for https://github.com/grafana/grafana/issues/65632\n    const button = (\n      <a\n        className={linkButtonStyles}\n        {...otherProps}\n        tabIndex={disabled ? -1 : 0}\n        aria-disabled={disabled}\n        ref={tooltip ? undefined : ref}\n      >\n        {icon && <Icon name={icon} size={size} className={styles.icon} />}\n        {children && <span className={styles.content}>{children}</span>}\n      </a>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip ref={ref} content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nLinkButton.displayName = 'LinkButton';\n\nexport interface StyleProps {\n  size: ComponentSize;\n  variant: ButtonVariant;\n  fill?: ButtonFill;\n  iconOnly?: boolean;\n  theme: GrafanaTheme2;\n  fullWidth?: boolean;\n  narrow?: boolean;\n}\n\nexport const getButtonStyles = (props: StyleProps) => {\n  const { theme, variant, fill = 'solid', size, iconOnly, fullWidth } = props;\n  const { height, padding, fontSize } = getPropertiesForButtonSize(size, theme);\n  const variantStyles = getPropertiesForVariant(theme, variant, fill);\n  const disabledStyles = getPropertiesForDisabled(theme, variant, fill);\n  const focusStyle = getFocusStyles(theme);\n  const paddingMinusBorder = theme.spacing.gridSize * padding - 1;\n\n  return {\n    button: css({\n      label: 'button',\n      display: 'inline-flex',\n      alignItems: 'center',\n      fontSize: fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontFamily: theme.typography.fontFamily,\n      padding: `0 ${paddingMinusBorder}px`,\n      height: theme.spacing(height),\n      // Deduct border from line-height for perfect vertical centering on windows and linux\n      lineHeight: `${theme.spacing.gridSize * height - 2}px`,\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      borderRadius: theme.shape.radius.default,\n      '&:focus': focusStyle,\n      '&:focus-visible': focusStyle,\n      '&:focus:not(:focus-visible)': getMouseFocusStyles(theme),\n      ...(fullWidth && {\n        flexGrow: 1,\n        justifyContent: 'center',\n      }),\n      ...variantStyles,\n      ':disabled': disabledStyles,\n      '&[disabled]': disabledStyles,\n    }),\n    disabled: css(disabledStyles),\n    img: css({\n      width: '16px',\n      height: '16px',\n      margin: theme.spacing(0, 1, 0, 0.5),\n    }),\n    icon: iconOnly\n      ? css({\n          // Important not to set margin bottom here as it would override internal icon bottom margin\n          marginRight: theme.spacing(-padding / 2),\n          marginLeft: theme.spacing(-padding / 2),\n        })\n      : css({\n          marginRight: theme.spacing(padding / 2),\n        }),\n    content: css({\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      height: '100%',\n    }),\n  };\n};\n\nfunction getButtonVariantStyles(theme: GrafanaTheme2, color: ThemeRichColor, fill: ButtonFill): CSSObject {\n  let outlineBorderColor = color.border;\n  let borderColor = 'transparent';\n  let hoverBorderColor = 'transparent';\n\n  // Secondary button has some special rules as we lack theem color token to\n  // specify border color for normal button vs border color for outline button\n  if (color.name === 'secondary') {\n    borderColor = color.border;\n    hoverBorderColor = theme.colors.emphasize(color.border, 0.25);\n    outlineBorderColor = theme.colors.border.strong;\n  }\n\n  if (fill === 'outline') {\n    return {\n      background: 'transparent',\n      color: color.text,\n      border: `1px solid ${outlineBorderColor}`,\n      transition: theme.transitions.create(['background-color', 'border-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      }),\n\n      '&:hover': {\n        background: color.transparent,\n        borderColor: theme.colors.emphasize(outlineBorderColor, 0.25),\n        color: color.text,\n      },\n    };\n  }\n\n  if (fill === 'text') {\n    return {\n      background: 'transparent',\n      color: color.text,\n      border: '1px solid transparent',\n      transition: theme.transitions.create(['background-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      }),\n\n      '&:focus': {\n        outline: 'none',\n        textDecoration: 'none',\n      },\n\n      '&:hover': {\n        background: color.transparent,\n        textDecoration: 'none',\n      },\n    };\n  }\n\n  return {\n    background: color.main,\n    color: color.contrastText,\n    border: `1px solid ${borderColor}`,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short,\n    }),\n\n    '&:hover': {\n      background: color.shade,\n      color: color.contrastText,\n      boxShadow: theme.shadows.z1,\n      borderColor: hoverBorderColor,\n    },\n  };\n}\n\nfunction getPropertiesForDisabled(theme: GrafanaTheme2, variant: ButtonVariant, fill: ButtonFill) {\n  const disabledStyles: CSSObject = {\n    cursor: 'not-allowed',\n    boxShadow: 'none',\n    color: theme.colors.text.disabled,\n    transition: 'none',\n  };\n\n  if (fill === 'text') {\n    return {\n      ...disabledStyles,\n      background: 'transparent',\n      border: `1px solid transparent`,\n    };\n  }\n\n  if (fill === 'outline') {\n    return {\n      ...disabledStyles,\n      background: 'transparent',\n      border: `1px solid ${theme.colors.border.weak}`,\n    };\n  }\n\n  return {\n    ...disabledStyles,\n    background: theme.colors.action.disabledBackground,\n    border: `1px solid transparent`,\n  };\n}\n\nexport function getPropertiesForVariant(theme: GrafanaTheme2, variant: ButtonVariant, fill: ButtonFill) {\n  switch (variant) {\n    case 'secondary':\n      // The seconday button has some special handling as it's outline border is it's default color border\n      return getButtonVariantStyles(theme, theme.colors.secondary, fill);\n\n    case 'destructive':\n      return getButtonVariantStyles(theme, theme.colors.error, fill);\n\n    case 'success':\n      return getButtonVariantStyles(theme, theme.colors.success, fill);\n\n    case 'primary':\n    default:\n      return getButtonVariantStyles(theme, theme.colors.primary, fill);\n  }\n}\n\nexport const clearButtonStyles = (theme: GrafanaTheme2) => {\n  return css({\n    background: 'transparent',\n    color: theme.colors.text.primary,\n    border: 'none',\n    padding: 0,\n  });\n};\n\nexport const clearLinkButtonStyles = (theme: GrafanaTheme2) => {\n  return css({\n    background: 'transparent',\n    border: 'none',\n    padding: 0,\n    fontFamily: 'inherit',\n    color: 'inherit',\n    height: '100%',\n    '&:hover': {\n      background: 'transparent',\n      color: 'inherit',\n    },\n  });\n};\n","import { CSVWave, PulseWaveQuery, TestData, TestDataQueryType } from './dataquery.gen';\n\nexport const defaultPulseQuery: PulseWaveQuery = {\n  timeStep: 60,\n  onCount: 3,\n  onValue: 2,\n  offCount: 3,\n  offValue: 1,\n};\n\nexport const defaultCSVWaveQuery: CSVWave[] = [\n  {\n    timeStep: 60,\n    valuesCSV: '0,0,2,2,1,1',\n  },\n];\n\nexport const defaultQuery: TestData = {\n  scenarioId: TestDataQueryType.RandomWalk,\n  refId: '',\n};\n","import React, { PureComponent, useState } from 'react';\n\nimport { Button, InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport { defaultCSVWaveQuery } from '../constants';\nimport type { CSVWave } from '../dataquery.gen';\n\ninterface WavesProps {\n  waves?: CSVWave[];\n  onChange: (waves: CSVWave[]) => void;\n}\n\ninterface WaveProps {\n  wave: CSVWave;\n  index: number;\n  last: boolean;\n  onChange: (index: number, wave?: CSVWave) => void;\n  onAdd: () => void;\n}\n\nconst CSVWaveEditor = (props: WaveProps) => {\n  const { wave, last, index, onAdd, onChange } = props;\n  const [valuesCSV, setValuesCSV] = useState(wave.valuesCSV || '');\n  const [labels, setLabels] = useState(wave.labels || '');\n  const [name, setName] = useState(wave.name || '');\n  const onAction = () => {\n    if (last) {\n      onAdd();\n    } else {\n      onChange(index, undefined);\n    }\n  };\n  const onValueChange = <K extends keyof CSVWave, V extends CSVWave[K]>(key: K, value: V) => {\n    onChange(index, { ...wave, [key]: value });\n  };\n  const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n    if (evt.key === 'Enter') {\n      onValueChange('valuesCSV', valuesCSV);\n    }\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField\n        label={'Values'}\n        grow\n        tooltip=\"Comma separated values. Each value may be an int, float, or null and must not be empty. Whitespace and trailing commas are removed\"\n      >\n        <Input\n          value={valuesCSV}\n          placeholder={'CSV values'}\n          onChange={(e) => setValuesCSV(e.currentTarget.value)}\n          autoFocus={true}\n          onBlur={() => onValueChange('valuesCSV', valuesCSV)}\n          onKeyDown={onKeyDown}\n        />\n      </InlineField>\n      <InlineField label={'Step'} tooltip=\"The number of seconds between datapoints.\">\n        <Input\n          value={wave.timeStep}\n          type=\"number\"\n          placeholder={'60'}\n          width={10}\n          onChange={(e) => onValueChange('timeStep', e.currentTarget.valueAsNumber)}\n        />\n      </InlineField>\n      <InlineField label={'Name'}>\n        <Input\n          value={name}\n          placeholder={'name'}\n          width={10}\n          onChange={(e) => setName(e.currentTarget.value)}\n          onBlur={() => onValueChange('name', name)}\n        />\n      </InlineField>\n      <InlineField label={'Labels'}>\n        <Input\n          value={labels}\n          placeholder={'labels'}\n          width={12}\n          onChange={(e) => setLabels(e.currentTarget.value)}\n          onBlur={() => onValueChange('labels', labels)}\n        />\n      </InlineField>\n      <Button icon={last ? 'plus' : 'minus'} variant=\"secondary\" onClick={onAction} />\n    </InlineFieldRow>\n  );\n};\n\nexport class CSVWavesEditor extends PureComponent<WavesProps> {\n  onChange = (index: number, wave?: CSVWave) => {\n    let waves = [...(this.props.waves ?? defaultCSVWaveQuery)];\n    if (wave) {\n      waves[index] = { ...wave };\n    } else {\n      // remove the element\n      waves.splice(index, 1);\n    }\n    this.props.onChange(waves);\n  };\n\n  onAdd = () => {\n    const waves = [...(this.props.waves ?? defaultCSVWaveQuery)];\n    waves.push({ ...defaultCSVWaveQuery[0] });\n    this.props.onChange(waves);\n  };\n\n  render() {\n    let waves = this.props.waves ?? defaultCSVWaveQuery;\n    if (!waves.length) {\n      waves = defaultCSVWaveQuery;\n    }\n\n    return (\n      <>\n        {waves.map((wave, index) => (\n          <CSVWaveEditor\n            key={`${index}/${wave.valuesCSV}`}\n            wave={wave}\n            index={index}\n            onAdd={this.onAdd}\n            onChange={this.onChange}\n            last={index === waves.length - 1}\n          />\n        ))}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst ERROR_OPTIONS = [\n  {\n    label: 'Server panic',\n    value: 'server_panic',\n  },\n  {\n    label: 'Frontend exception',\n    value: 'frontend_exception',\n  },\n  {\n    label: 'Frontend observable',\n    value: 'frontend_observable',\n  },\n];\n\nconst FrontendErrorQueryEditor = ({ query, onChange }: EditorProps) => {\n  return (\n    <InlineFieldRow>\n      <InlineField labelWidth={14} label=\"Error type\">\n        <Select\n          options={ERROR_OPTIONS}\n          value={query.errorType}\n          onChange={(v) => {\n            onChange({ ...query, errorType: v.value });\n          }}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n\nexport default FrontendErrorQueryEditor;\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nconst liveTestDataChannels = [\n  {\n    label: 'random-2s-stream',\n    value: 'random-2s-stream',\n    description: 'Random stream with points every 2s',\n  },\n  {\n    label: 'random-flakey-stream',\n    value: 'random-flakey-stream',\n    description: 'Stream that returns data in random intervals',\n  },\n  {\n    label: 'random-labeled-stream',\n    value: 'random-labeled-stream',\n    description: 'Value with moving labels',\n  },\n  {\n    label: 'random-20Hz-stream',\n    value: 'random-20Hz-stream',\n    description: 'Random stream with points in 20Hz',\n  },\n];\n\nexport const GrafanaLiveEditor = ({ onChange, query }: EditorProps) => {\n  const onChannelChange = ({ value }: SelectableValue<string>) => {\n    onChange({ ...query, channel: value });\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Channel\" labelWidth={14}>\n        <Select\n          width={32}\n          onChange={onChannelChange}\n          placeholder=\"Select channel\"\n          options={liveTestDataChannels}\n          value={liveTestDataChannels.find((f) => f.value === query.channel)}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n","import React from 'react';\n\nimport { Input, InlineFieldRow, InlineField, Select } from '@grafana/ui';\n\nimport { NodesQuery, TestData } from '../dataquery.gen';\n\nexport interface Props {\n  onChange: (value: NodesQuery) => void;\n  query: TestData;\n}\nexport function NodeGraphEditor({ query, onChange }: Props) {\n  const type = query.nodes?.type || 'random';\n  return (\n    <InlineFieldRow>\n      <InlineField label=\"Data type\" labelWidth={14}>\n        <Select<NodesQuery['type']>\n          options={options.map((o) => ({\n            label: o,\n            value: o,\n          }))}\n          value={options.find((item) => item === type)}\n          onChange={(value) => onChange({ ...query.nodes, type: value.value! })}\n          width={32}\n        />\n      </InlineField>\n      {(type === 'random' || type === 'random edges') && (\n        <InlineField label=\"Count\" labelWidth={14}>\n          <Input\n            type=\"number\"\n            name=\"count\"\n            value={query.nodes?.count}\n            width={32}\n            onChange={(e) =>\n              onChange({ ...query.nodes, count: e.currentTarget.value ? parseInt(e.currentTarget.value, 10) : 0 })\n            }\n            placeholder=\"10\"\n          />\n        </InlineField>\n      )}\n    </InlineFieldRow>\n  );\n}\n\nconst options: Array<NodesQuery['type']> = ['random', 'response', 'random edges'];\n","import React, { ChangeEvent } from 'react';\n\nimport { InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { PulseWaveQuery } from '../dataquery.gen';\n\nconst fields: Array<{\n  label: string;\n  id: keyof PulseWaveQuery;\n  placeholder: string;\n  tooltip: string;\n}> = [\n  { label: 'Step', id: 'timeStep', placeholder: '60', tooltip: 'The number of seconds between datapoints.' },\n  {\n    label: 'On Count',\n    id: 'onCount',\n    placeholder: '3',\n    tooltip: 'The number of values within a cycle, at the start of the cycle, that should have the onValue.',\n  },\n  { label: 'Off Count', id: 'offCount', placeholder: '6', tooltip: 'The number of offValues within the cycle.' },\n  {\n    label: 'On Value',\n    id: 'onValue',\n    placeholder: '1',\n    tooltip: 'The value for \"on values\", may be an int, float, or null.',\n  },\n  {\n    label: 'Off Value',\n    id: 'offValue',\n    placeholder: '1',\n    tooltip: 'The value for \"off values\", may be a int, float, or null.',\n  },\n];\n\nexport const PredictablePulseEditor = ({ onChange, query }: EditorProps) => {\n  // Convert values to numbers before saving\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    onChange({ target: { name, value: Number(value) } });\n  };\n\n  return (\n    <InlineFieldRow>\n      {fields.map(({ label, id, placeholder, tooltip }) => {\n        return (\n          <InlineField label={label} labelWidth={14} key={id} tooltip={tooltip}>\n            <Input\n              width={32}\n              type=\"number\"\n              name={id}\n              id={`pulseWave.${id}-${query.refId}`}\n              value={query.pulseWave?.[id]}\n              placeholder={placeholder}\n              onChange={onInputChange}\n            />\n          </InlineField>\n        );\n      })}\n    </InlineFieldRow>\n  );\n};\n","import moment, { Moment, MomentInput, DurationInputArg1, DurationInputArg2 } from 'moment';\n\nimport { TimeZone } from '../types/time';\n/* eslint-disable id-blacklist, no-restricted-imports, @typescript-eslint/ban-types */\nexport interface DateTimeBuiltinFormat {\n  __momentBuiltinFormatBrand: any;\n}\nexport const ISO_8601: DateTimeBuiltinFormat = moment.ISO_8601;\nexport type DateTimeInput = Date | string | number | Array<string | number> | DateTime | null; // | undefined;\nexport type FormatInput = string | DateTimeBuiltinFormat | undefined;\nexport type DurationInput = string | number | DateTimeDuration;\nexport type DurationUnit =\n  | 'year'\n  | 'years'\n  | 'y'\n  | 'month'\n  | 'months'\n  | 'M'\n  | 'week'\n  | 'weeks'\n  | 'isoWeek'\n  | 'w'\n  | 'day'\n  | 'days'\n  | 'd'\n  | 'hour'\n  | 'hours'\n  | 'h'\n  | 'minute'\n  | 'minutes'\n  | 'm'\n  | 'second'\n  | 'seconds'\n  | 's'\n  | 'millisecond'\n  | 'milliseconds'\n  | 'ms'\n  | 'quarter'\n  | 'quarters'\n  | 'Q';\n\nexport interface DateTimeLocale {\n  firstDayOfWeek: () => number;\n}\n\nexport interface DateTimeDuration {\n  asHours: () => number;\n  hours: () => number;\n  minutes: () => number;\n  seconds: () => number;\n  asSeconds: () => number;\n}\n\nexport interface DateTime extends Object {\n  add: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  set: (unit: DurationUnit, amount: DateTimeInput) => void;\n  diff: (amount: DateTimeInput, unit?: DurationUnit, truncate?: boolean) => number;\n  endOf: (unitOfTime: DurationUnit) => DateTime;\n  format: (formatInput?: FormatInput) => string;\n  fromNow: (withoutSuffix?: boolean) => string;\n  from: (formaInput: DateTimeInput) => string;\n  isSame: (input?: DateTimeInput, granularity?: DurationUnit) => boolean;\n  isBefore: (input?: DateTimeInput) => boolean;\n  isValid: () => boolean;\n  local: () => DateTime;\n  locale: (locale: string) => DateTime;\n  startOf: (unitOfTime: DurationUnit) => DateTime;\n  subtract: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  toDate: () => Date;\n  toISOString: (keepOffset?: boolean) => string;\n  isoWeekday: (day?: number | string) => number | string;\n  valueOf: () => number;\n  unix: () => number;\n  utc: () => DateTime;\n  utcOffset: () => number;\n  hour?: () => number;\n  minute?: () => number;\n}\n\nexport const setLocale = (language: string) => {\n  moment.locale(language);\n};\n\nexport const getLocale = () => {\n  return moment.locale();\n};\n\nexport const getLocaleData = (): DateTimeLocale => {\n  return moment.localeData();\n};\n\nexport const isDateTimeInput = (value: unknown): value is DateTimeInput => {\n  return (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    value instanceof Date ||\n    (Array.isArray(value) && value.every((v) => typeof v === 'string' || typeof v === 'number')) ||\n    isDateTime(value)\n  );\n};\n\nexport const isDateTime = (value: unknown): value is DateTime => {\n  return moment.isMoment(value);\n};\n\nexport const toUtc = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment.utc(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const toDuration = (input?: DurationInput, unit?: DurationUnit): DateTimeDuration => {\n  // moment built-in types are a bit flaky, for example `isoWeek` is not in the type definition but it's present in the js source.\n  return moment.duration(input as DurationInputArg1, unit as DurationInputArg2) as DateTimeDuration;\n};\n\nexport const dateTime = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const dateTimeAsMoment = (input?: DateTimeInput) => {\n  return dateTime(input) as Moment;\n};\n\nexport const dateTimeForTimeZone = (\n  timezone?: TimeZone,\n  input?: DateTimeInput,\n  formatInput?: FormatInput\n): DateTime => {\n  if (timezone === 'utc') {\n    return toUtc(input, formatInput);\n  }\n\n  if (timezone && timezone !== 'browser') {\n    let result: moment.Moment;\n\n    if (typeof input === 'string' && formatInput) {\n      result = moment.tz(input, formatInput, timezone);\n    } else {\n      result = moment.tz(input, timezone);\n    }\n\n    if (isDateTime(result)) {\n      return result;\n    }\n  }\n\n  return dateTime(input, formatInput);\n};\n\nexport const getWeekdayIndex = (day: string) => {\n  return moment.weekdays().findIndex((wd) => wd.toLowerCase() === day.toLowerCase());\n};\n\nexport const getWeekdayIndexByEnglishName = (day: string) =>\n  ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].findIndex(\n    (wd) => wd.toLowerCase() === day.toLowerCase()\n  );\n\nexport const setWeekStart = (weekStart?: string) => {\n  const suffix = '-weekStart';\n  const language = getLocale().replace(suffix, '');\n  const dow = weekStart ? getWeekdayIndexByEnglishName(weekStart) : -1;\n  if (dow !== -1) {\n    moment.locale(language + suffix, {\n      parentLocale: language,\n      week: {\n        dow,\n      },\n    });\n  } else {\n    setLocale(language);\n  }\n};\n","import { ScopedVars } from './ScopedVars';\nimport { QueryResultBase, Labels, NullValueMode } from './data';\nimport { DataLink, LinkModel } from './dataLink';\nimport { DecimalCount, DisplayProcessor, DisplayValue, DisplayValueAlignmentFactors } from './displayValue';\nimport { FieldColor } from './fieldColor';\nimport { ThresholdsConfig } from './thresholds';\nimport { ValueMapping } from './valueMapping';\nimport { Vector } from './vector';\n\n/** @public */\nexport enum FieldType {\n  time = 'time', // or date\n  number = 'number',\n  string = 'string',\n  boolean = 'boolean',\n  // Used to detect that the value is some kind of trace data to help with the visualisation and processing.\n  trace = 'trace',\n  geo = 'geo',\n  enum = 'enum',\n  other = 'other', // Object, Array, etc\n  frame = 'frame', // DataFrame\n  nestedFrames = 'nestedFrames', // @alpha Nested DataFrames\n}\n\n/**\n * @public\n * Every property is optional\n *\n * Plugins may extend this with additional properties. Something like series overrides\n */\nexport interface FieldConfig<TOptions = any> {\n  /**\n   * The display value for this field.  This supports template variables blank is auto.\n   * If you are a datasource plugin, do not set this. Use `field.value` and if that\n   * is not enough, use `field.config.displayNameFromDS`.\n   */\n  displayName?: string;\n\n  /**\n   * This can be used by data sources that need to customize how values are named.\n   * When this property is configured, this value is used rather than the default naming strategy.\n   */\n  displayNameFromDS?: string;\n\n  /**\n   * Human readable field metadata\n   */\n  description?: string;\n\n  /**\n   * An explict path to the field in the datasource.  When the frame meta includes a path,\n   * This will default to `${frame.meta.path}/${field.name}\n   *\n   * When defined, this value can be used as an identifier within the datasource scope, and\n   * may be used to update the results\n   */\n  path?: string;\n\n  /**\n   * True if data source can write a value to the path.  Auth/authz are supported separately\n   */\n  writeable?: boolean;\n\n  /**\n   * True if data source field supports ad-hoc filters\n   */\n  filterable?: boolean;\n\n  // Numeric Options\n  unit?: string;\n  decimals?: DecimalCount; // Significant digits (for display)\n  min?: number | null;\n  max?: number | null;\n\n  // Interval indicates the expected regular step between values in the series.\n  // When an interval exists, consumers can identify \"missing\" values when the expected value is not present.\n  // The grafana timeseries visualization will render disconnected values when missing values are found it the time field.\n  // The interval uses the same units as the values.  For time.Time, this is defined in milliseconds.\n  interval?: number | null;\n\n  // Convert input values into a display string\n  mappings?: ValueMapping[];\n\n  // Map numeric values to states\n  thresholds?: ThresholdsConfig;\n\n  // Map values to a display color\n  color?: FieldColor;\n\n  // Used when reducing field values\n  nullValueMode?: NullValueMode;\n\n  // The behavior when clicking on a result\n  links?: DataLink[];\n\n  // Alternative to empty string\n  noValue?: string;\n\n  // The field type may map to specific config\n  type?: FieldTypeConfig;\n\n  // Panel Specific Values\n  custom?: TOptions;\n\n  // Calculate min max per field\n  fieldMinMax?: boolean;\n}\n\nexport interface FieldTypeConfig {\n  enum?: EnumFieldConfig;\n}\n\nexport interface EnumFieldConfig {\n  text?: string[];\n  color?: string[];\n  icon?: string[];\n  description?: string[];\n}\n\n/** @public */\nexport interface ValueLinkConfig {\n  /**\n   * Result of field reduction\n   */\n  calculatedValue?: DisplayValue;\n  /**\n   * Index of the value row within Field. Should be provided only when value is not a result of a reduction\n   */\n  valueRowIndex?: number;\n}\n\nexport interface Field<T = any, V = Vector<T>> {\n  /**\n   * Name of the field (column)\n   */\n  name: string;\n  /**\n   *  Field value type (string, number, etc)\n   */\n  type: FieldType;\n  /**\n   *  Meta info about how field and how to display it\n   */\n  config: FieldConfig;\n\n  /**\n   * The raw field values\n   * In Grafana 10, this accepts both simple arrays and the Vector interface\n   * In Grafana 11, the Vector interface will be removed\n   */\n  values: V | T[];\n\n  /**\n   * When type === FieldType.Time, this can optionally store\n   * the nanosecond-precison fractions as integers between\n   * 0 and 999999.\n   */\n  nanos?: number[];\n\n  labels?: Labels;\n\n  /**\n   * Cached values with appropriate display and id values\n   */\n  state?: FieldState | null;\n\n  /**\n   * Convert a value for display\n   */\n  display?: DisplayProcessor;\n\n  /**\n   * Get value data links with variables interpolated\n   */\n  getLinks?: (config: ValueLinkConfig) => Array<LinkModel<Field>>;\n}\n\n/** @alpha */\nexport interface FieldState {\n  /**\n   * An appropriate name for the field (does not include frame info)\n   */\n  displayName?: string | null;\n\n  /**\n   * Cache of reduced values\n   */\n  calcs?: FieldCalcs;\n\n  /**\n   * The numeric range for values in this field.  This value will respect the min/max\n   * set in field config, or when set to `auto` this will have the min/max for all data\n   * in the response\n   */\n  range?: NumericRange;\n\n  /**\n   * Appropriate values for templating\n   */\n  scopedVars?: ScopedVars;\n\n  /**\n   * Series index is index for this field in a larger data set that can span multiple DataFrames\n   * Useful for assigning color to series by looking up a color in a palette using this index\n   */\n  seriesIndex?: number;\n\n  /**\n   * Location of this field within the context frames results\n   *\n   * @internal -- we will try to make this unnecessary\n   */\n  origin?: DataFrameFieldIndex;\n\n  /**\n   * Boolean value is true if field is in a larger data set with multiple frames.\n   * This is only related to the cached displayName property above.\n   */\n  multipleFrames?: boolean;\n\n  /**\n   * Boolean value is true if a null filling threshold has been applied\n   * against the frame of the field. This is used to avoid cases in which\n   * this would applied more than one time.\n   */\n  nullThresholdApplied?: boolean;\n\n  /**\n   * Can be used by visualizations to cache max display value lengths to aid alignment.\n   * It's up to each visualization to calculate and set this.\n   */\n  alignmentFactors?: DisplayValueAlignmentFactors;\n}\n\n/** @public */\nexport interface NumericRange {\n  min?: number | null;\n  max?: number | null;\n  delta: number;\n}\n\nexport interface DataFrame extends QueryResultBase {\n  name?: string;\n  fields: Field[]; // All fields of equal length\n\n  // The number of rows\n  length: number;\n}\n\n// Data frame that include aggregate value, for use by timeSeriesTableTransformer / chart cell type\nexport interface DataFrameWithValue extends DataFrame {\n  value: number | null;\n}\n\n/**\n * @public\n * Like a field, but properties are optional and values may be a simple array\n */\nexport interface FieldDTO<T = any> {\n  name: string; // The column name\n  type?: FieldType;\n  config?: FieldConfig;\n  values?: Vector<T> | T[]; // toJSON will always be T[], input could be either\n  labels?: Labels;\n}\n\n/**\n * @public\n * Like a DataFrame, but fields may be a FieldDTO\n */\nexport interface DataFrameDTO extends QueryResultBase {\n  name?: string;\n  fields: Array<FieldDTO | Field>;\n}\n\nexport interface FieldCalcs extends Record<string, any> {}\n\n/** @deprecated check data plane docs: https://grafana.com/developers/dataplane/heatmap **/\nexport const TIME_SERIES_VALUE_FIELD_NAME = 'Value';\nexport const TIME_SERIES_TIME_FIELD_NAME = 'Time';\nexport const TIME_SERIES_METRIC_FIELD_NAME = 'Metric';\n\n/**\n * Describes where a specific data frame field is located within a\n * dataset of type DataFrame[]\n *\n * @internal -- we will try to make this unnecessary\n */\nexport interface DataFrameFieldIndex {\n  frameIndex: number;\n  fieldIndex: number;\n}\n","import { isNumber } from 'lodash';\n\nimport { dateTime, isDateTimeInput } from '../datetime';\nimport { Field, FieldType } from '../types/dataFrame';\n\ntype IndexComparer = (a: number, b: number) => number;\n\n/** @public */\nexport const fieldIndexComparer = (field: Field, reverse = false): IndexComparer => {\n  const values = field.values;\n\n  switch (field.type) {\n    case FieldType.number:\n      return numericIndexComparer(values, reverse);\n    case FieldType.string:\n      return stringIndexComparer(values, reverse);\n    case FieldType.boolean:\n      return booleanIndexComparer(values, reverse);\n    case FieldType.time:\n      if (typeof field.values[0] === 'number') {\n        return timestampIndexComparer(values, reverse);\n      }\n      return timeIndexComparer(values, reverse);\n    default:\n      return naturalIndexComparer(reverse);\n  }\n};\n\n/** @public */\nexport const timeComparer = (a: unknown, b: unknown): number => {\n  if (!a || !b) {\n    return falsyComparer(a, b);\n  }\n\n  if (isNumber(a) && isNumber(b)) {\n    return numericComparer(a, b);\n  }\n\n  if (isDateTimeInput(a) && isDateTimeInput(b)) {\n    if (dateTime(a).isBefore(b)) {\n      return -1;\n    }\n\n    if (dateTime(b).isBefore(a)) {\n      return 1;\n    }\n  }\n\n  return 0;\n};\n\n/** @public */\nexport const numericComparer = (a: number, b: number): number => {\n  return a - b;\n};\n\n/** @public */\nexport const stringComparer = (a: string, b: string): number => {\n  if (!a || !b) {\n    return falsyComparer(a, b);\n  }\n  return a.localeCompare(b);\n};\n\nexport const booleanComparer = (a: boolean, b: boolean): number => {\n  return falsyComparer(a, b);\n};\n\nconst falsyComparer = (a: unknown, b: unknown): number => {\n  if (!a && b) {\n    return 1;\n  }\n\n  if (a && !b) {\n    return -1;\n  }\n\n  return 0;\n};\n\nconst timestampIndexComparer = (values: number[], reverse: boolean): IndexComparer => {\n  let mult = reverse ? -1 : 1;\n  return (a: number, b: number): number => mult * (values[a] - values[b]);\n};\n\nconst timeIndexComparer = (values: unknown[], reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values[a];\n    const vB = values[b];\n    return reverse ? timeComparer(vB, vA) : timeComparer(vA, vB);\n  };\n};\n\nconst booleanIndexComparer = (values: boolean[], reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values[a];\n    const vB = values[b];\n    return reverse ? booleanComparer(vB, vA) : booleanComparer(vA, vB);\n  };\n};\n\nconst numericIndexComparer = (values: number[], reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values[a];\n    const vB = values[b];\n    return reverse ? numericComparer(vB, vA) : numericComparer(vA, vB);\n  };\n};\n\nconst stringIndexComparer = (values: string[], reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values[a];\n    const vB = values[b];\n    return reverse ? stringComparer(vB, vA) : stringComparer(vA, vB);\n  };\n};\n\nconst naturalIndexComparer = (reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    return reverse ? numericComparer(b, a) : numericComparer(a, b);\n  };\n};\n","import { QueryResultMeta } from '../types';\nimport { Field, FieldType, DataFrame, TIME_SERIES_VALUE_FIELD_NAME } from '../types/dataFrame';\n\nimport { guessFieldTypeForField } from './processDataFrame';\n\n/**\n * The ArrayDataFrame takes an array of objects and presents it as a DataFrame\n *\n * @deprecated use arrayToDataFrame\n */\nexport class ArrayDataFrame<T = any> implements DataFrame {\n  fields: Field[] = [];\n  length = 0;\n  name?: string;\n  refId?: string;\n  meta?: QueryResultMeta;\n\n  constructor(source: T[], names?: string[]) {\n    return arrayToDataFrame(source, names); // returns a standard DataFrame\n  }\n}\n\n/**\n * arrayToDataFrame will convert any array into a DataFrame\n *\n * @public\n */\nexport function arrayToDataFrame(source: any[], names?: string[]): DataFrame {\n  const df: DataFrame = {\n    fields: [],\n    length: source.length,\n  };\n  if (!source?.length) {\n    return df;\n  }\n\n  if (names) {\n    for (const name of names) {\n      df.fields.push(\n        makeFieldFromValues(\n          name,\n          source.map((v) => v[name])\n        )\n      );\n    }\n    return df;\n  }\n\n  const first = source.find((v) => v != null); // first not null|undefined\n  if (first != null) {\n    if (typeof first === 'object') {\n      df.fields = Object.keys(first).map((name) => {\n        return makeFieldFromValues(\n          name,\n          source.map((v) => v[name])\n        );\n      });\n    } else {\n      df.fields.push(makeFieldFromValues(TIME_SERIES_VALUE_FIELD_NAME, source));\n    }\n  }\n  return df;\n}\n\nfunction makeFieldFromValues(name: string, values: unknown[]): Field {\n  const f = { name, config: {}, values, type: FieldType.other };\n  f.type = guessFieldTypeForField(f) ?? FieldType.other;\n  return f;\n}\n","import { DataFrame, FieldType, FieldConfig, Labels, QueryResultMeta, Field } from '../types';\n\nimport { guessFieldTypeFromNameAndValue } from './processDataFrame';\n\n/**\n * The JSON transfer object for DataFrames.  Values are stored in simple JSON\n *\n * @alpha\n */\nexport interface DataFrameJSON {\n  /**\n   * The schema defines the field type and configuration.\n   */\n  schema?: DataFrameSchema;\n\n  /**\n   * The field data\n   */\n  data?: DataFrameData;\n}\n\ntype FieldValues = unknown[];\n\n/**\n * @alpha\n */\nexport interface DataFrameData {\n  /**\n   * A columnar store that matches fields defined by schema.\n   */\n  values: FieldValues[];\n\n  /**\n   * Since JSON cannot encode NaN, Inf, -Inf, and undefined, these entities\n   * are decoded after JSON.parse() using this struct\n   */\n  entities?: Array<FieldValueEntityLookup | null>;\n\n  /**\n   * Holds value bases per field so we can encode numbers from fixed points\n   * e.g. [1612900958, 1612900959, 1612900960] -> 1612900958 + [0, 1, 2]\n   */\n  bases?: number[];\n\n  /**\n   * Holds value multipliers per field so we can encode large numbers concisely\n   * e.g. [4900000000, 35000000000] -> 1e9 + [4.9, 35]\n   */\n  factors?: number[];\n\n  /**\n   * Holds enums per field so we can encode recurring string values as ints\n   * e.g. [\"foo\", \"foo\", \"baz\", \"foo\"] -> [\"foo\", \"baz\"] + [0,0,1,0]\n   *\n   * NOTE: currently only decoding is implemented\n   */\n  enums?: Array<string[] | null>;\n\n  /**\n   * Holds integers between 0 and 999999, used by time-fields\n   * to store the nanosecond-precision that cannot be represented\n   * by the millisecond-based base value.\n   */\n  nanos?: Array<number[] | null>;\n}\n\n/**\n * The JSON transfer object for DataFrames.  Values are stored in simple JSON\n *\n * @alpha\n */\nexport interface DataFrameSchema {\n  /**\n   * Matches the query target refId\n   */\n  refId?: string;\n\n  /**\n   * Initial response global metadata\n   */\n  meta?: QueryResultMeta;\n\n  /**\n   * Frame name\n   */\n  name?: string;\n\n  /**\n   * Field definition without any metadata\n   */\n  fields: FieldSchema[];\n}\n\n/**\n * Field object passed over JSON\n *\n * @alpha\n */\nexport interface FieldSchema {\n  name: string; // The column name\n  type?: FieldType;\n  config?: FieldConfig;\n  labels?: Labels;\n}\n\n/**\n * Since JSON cannot encode NaN, Inf, -Inf, and undefined, the locations\n * of these entities in field value arrays are stored here for restoration\n * after JSON.parse()\n *\n * @alpha\n */\nexport interface FieldValueEntityLookup {\n  NaN?: number[];\n  Undef?: number[]; // Missing because of absence or join\n  Inf?: number[];\n  NegInf?: number[];\n}\n\nconst ENTITY_MAP: Record<keyof FieldValueEntityLookup, number | undefined> = {\n  Inf: Infinity,\n  NegInf: -Infinity,\n  Undef: undefined,\n  NaN: NaN,\n};\n\n/**\n * @internal use locally\n */\nexport function decodeFieldValueEntities(lookup: FieldValueEntityLookup, values: FieldValues) {\n  for (const key in lookup) {\n    const repl = ENTITY_MAP[key as keyof FieldValueEntityLookup];\n    for (const idx of lookup[key as keyof FieldValueEntityLookup]!) {\n      if (idx < values.length) {\n        values[idx] = repl;\n      }\n    }\n  }\n}\n\n/**\n * @internal use locally\n */\nexport function decodeFieldValueEnums(lookup: string[], values: FieldValues) {\n  for (let i = 0; i < values.length; i++) {\n    values[i] = lookup[Number(values[i])];\n  }\n}\n\nfunction guessFieldType(name: string, values: FieldValues): FieldType {\n  for (const v of values) {\n    if (v != null) {\n      return guessFieldTypeFromNameAndValue(name, v);\n    }\n  }\n  return FieldType.other;\n}\n\n/**\n * NOTE: dto.data.values will be mutated and decoded/inflated using entities,bases,factors,enums\n *\n * @alpha\n */\nexport function dataFrameFromJSON(dto: DataFrameJSON): DataFrame {\n  const { schema, data } = dto;\n\n  if (!schema || !schema.fields) {\n    throw new Error('JSON needs a fields definition');\n  }\n\n  // Find the longest field length\n  const length = data ? data.values.reduce((max, vals) => Math.max(max, vals.length), 0) : 0;\n  const fields = schema.fields.map((f, index) => {\n    let buffer = data ? data.values[index] : [];\n    let origLen = buffer.length;\n    let type = f.type;\n\n    if (origLen !== length) {\n      buffer.length = length;\n      // avoid sparse arrays\n      buffer.fill(undefined, origLen);\n    }\n\n    let entities = data?.entities?.[index];\n\n    if (entities) {\n      decodeFieldValueEntities(entities, buffer);\n    }\n\n    let enums = data?.enums?.[index];\n\n    if (enums) {\n      decodeFieldValueEnums(enums, buffer);\n      type = FieldType.string;\n    }\n\n    const nanos = data?.nanos?.[index];\n\n    // TODO: expand arrays further using bases,factors\n\n    const dataFrameField: Field & { entities: FieldValueEntityLookup } = {\n      ...f,\n      type: type ?? guessFieldType(f.name, buffer),\n      config: f.config ?? {},\n      values: buffer,\n      // the presence of this prop is an optimization signal & lookup for consumers\n      entities: entities ?? {},\n    };\n\n    if (nanos != null) {\n      dataFrameField.nanos = nanos;\n    }\n\n    return dataFrameField;\n  });\n\n  return {\n    ...schema,\n    fields,\n    length,\n  };\n}\n\n/**\n * This converts DataFrame to a json representation with distinct schema+data\n *\n * @alpha\n */\nexport function dataFrameToJSON(frame: DataFrame): DataFrameJSON {\n  const data: DataFrameData = {\n    values: [],\n  };\n\n  const allNanos: Array<number[] | null> = [];\n  let hasNanos = false;\n\n  const schema: DataFrameSchema = {\n    refId: frame.refId,\n    meta: frame.meta,\n    name: frame.name,\n    fields: frame.fields.map((f) => {\n      const { values, nanos, state, display, ...sfield } = f;\n      if ('entities' in sfield) {\n        delete sfield.entities;\n      }\n      data.values.push(values);\n\n      if (nanos != null) {\n        allNanos.push(nanos);\n        hasNanos = true;\n      } else {\n        allNanos.push(null);\n      }\n\n      return sfield;\n    }),\n  };\n\n  if (hasNanos) {\n    data.nanos = allNanos;\n  }\n\n  return {\n    schema,\n    data,\n  };\n}\n","// Libraries\nimport { isArray, isBoolean, isNumber, isString } from 'lodash';\n\n// Types\nimport { isDateTime } from '../datetime/moment_wrapper';\nimport { fieldIndexComparer } from '../field/fieldComparers';\nimport { getFieldDisplayName } from '../field/fieldState';\nimport {\n  DataFrame,\n  Field,\n  FieldConfig,\n  TimeSeries,\n  FieldType,\n  TableData,\n  Column,\n  GraphSeriesXY,\n  TimeSeriesValue,\n  FieldDTO,\n  DataFrameDTO,\n  TIME_SERIES_VALUE_FIELD_NAME,\n  TIME_SERIES_TIME_FIELD_NAME,\n  DataQueryResponseData,\n  PanelData,\n  LoadingState,\n  GraphSeriesValue,\n  DataFrameWithValue,\n} from '../types/index';\n\nimport { arrayToDataFrame } from './ArrayDataFrame';\nimport { dataFrameFromJSON } from './DataFrameJSON';\n\nfunction convertTableToDataFrame(table: TableData): DataFrame {\n  const fields = table.columns.map((c) => {\n    // TODO: should be Column but type does not exists there so not sure whats up here.\n    const { text, type, ...disp } = c as any;\n    const values: unknown[] = [];\n    return {\n      name: text?.length ? text : c, // rename 'text' to the 'name' field\n      config: (disp || {}) as FieldConfig,\n      values,\n      type: type && Object.values(FieldType).includes(type as FieldType) ? (type as FieldType) : FieldType.other,\n    };\n  });\n\n  if (!isArray(table.rows)) {\n    throw new Error(`Expected table rows to be array, got ${typeof table.rows}.`);\n  }\n\n  for (const row of table.rows) {\n    for (let i = 0; i < fields.length; i++) {\n      fields[i].values.push(row[i]);\n    }\n  }\n\n  for (const f of fields) {\n    if (f.type === FieldType.other) {\n      const t = guessFieldTypeForField(f);\n      if (t) {\n        f.type = t;\n      }\n    }\n  }\n\n  return {\n    fields,\n    refId: table.refId,\n    meta: table.meta,\n    name: table.name,\n    length: table.rows.length,\n  };\n}\n\nfunction convertTimeSeriesToDataFrame(timeSeries: TimeSeries): DataFrame {\n  const times: number[] = [];\n  const values: TimeSeriesValue[] = [];\n\n  // Sometimes the points are sent as datapoints\n  const points = timeSeries.datapoints || (timeSeries as any).points;\n  for (const point of points) {\n    values.push(point[0]);\n    times.push(point[1] as number);\n  }\n\n  const fields = [\n    {\n      name: TIME_SERIES_TIME_FIELD_NAME,\n      type: FieldType.time,\n      config: {},\n      values: times,\n    },\n    {\n      name: TIME_SERIES_VALUE_FIELD_NAME,\n      type: FieldType.number,\n      config: {\n        unit: timeSeries.unit,\n      },\n      values: values,\n      labels: timeSeries.tags,\n    },\n  ];\n\n  if (timeSeries.title) {\n    (fields[1].config as FieldConfig).displayNameFromDS = timeSeries.title;\n  }\n\n  return {\n    name: timeSeries.target || (timeSeries as any).name,\n    refId: timeSeries.refId,\n    meta: timeSeries.meta,\n    fields,\n    length: values.length,\n  };\n}\n\n/**\n * This is added temporarily while we convert the LogsModel\n * to DataFrame.  See: https://github.com/grafana/grafana/issues/18528\n */\nfunction convertGraphSeriesToDataFrame(graphSeries: GraphSeriesXY): DataFrame {\n  const x: GraphSeriesValue[] = [];\n  const y: GraphSeriesValue[] = [];\n\n  for (let i = 0; i < graphSeries.data.length; i++) {\n    const row = graphSeries.data[i];\n    x.push(row[1]);\n    y.push(row[0]);\n  }\n\n  return {\n    name: graphSeries.label,\n    fields: [\n      {\n        name: graphSeries.label || TIME_SERIES_VALUE_FIELD_NAME,\n        type: FieldType.number,\n        config: {},\n        values: x,\n      },\n      {\n        name: TIME_SERIES_TIME_FIELD_NAME,\n        type: FieldType.time,\n        config: {\n          unit: 'dateTimeAsIso',\n        },\n        values: y,\n      },\n    ],\n    length: x.length,\n  };\n}\n\nfunction convertJSONDocumentDataToDataFrame(timeSeries: TimeSeries): DataFrame {\n  const fields = [\n    {\n      name: timeSeries.target,\n      type: FieldType.other,\n      labels: timeSeries.tags,\n      config: {\n        unit: timeSeries.unit,\n        filterable: (timeSeries as any).filterable,\n      },\n      values: [] as TimeSeriesValue[][],\n    },\n  ];\n\n  for (const point of timeSeries.datapoints) {\n    fields[0].values.push(point);\n  }\n\n  return {\n    name: timeSeries.target,\n    refId: timeSeries.target,\n    meta: { json: true },\n    fields,\n    length: timeSeries.datapoints.length,\n  };\n}\n\n// PapaParse Dynamic Typing regex:\n// https://github.com/mholt/PapaParse/blob/master/papaparse.js#L998\nconst NUMBER = /^\\s*(-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?|NAN)\\s*$/i;\n\n/**\n * Given a name and value, this will pick a reasonable field type\n */\nexport function guessFieldTypeFromNameAndValue(name: string, v: unknown): FieldType {\n  if (name) {\n    name = name.toLowerCase();\n    if (name === 'date' || name === 'time') {\n      return FieldType.time;\n    }\n  }\n  return guessFieldTypeFromValue(v);\n}\n\n/**\n * Check the field type to see what the contents are\n */\nexport function getFieldTypeFromValue(v: unknown): FieldType {\n  if (v instanceof Date || isDateTime(v)) {\n    return FieldType.time;\n  }\n\n  if (isNumber(v)) {\n    return FieldType.number;\n  }\n\n  if (isString(v)) {\n    return FieldType.string;\n  }\n\n  if (isBoolean(v)) {\n    return FieldType.boolean;\n  }\n\n  return FieldType.other;\n}\n\n/**\n * Given a value this will guess the best column type\n *\n * NOTE: this is will try to see if string values can be mapped to other types (like number)\n */\nexport function guessFieldTypeFromValue(v: unknown): FieldType {\n  if (v instanceof Date || isDateTime(v)) {\n    return FieldType.time;\n  }\n\n  if (isNumber(v)) {\n    return FieldType.number;\n  }\n\n  if (isString(v)) {\n    if (NUMBER.test(v)) {\n      return FieldType.number;\n    }\n\n    if (v === 'true' || v === 'TRUE' || v === 'True' || v === 'false' || v === 'FALSE' || v === 'False') {\n      return FieldType.boolean;\n    }\n\n    return FieldType.string;\n  }\n\n  if (isBoolean(v)) {\n    return FieldType.boolean;\n  }\n\n  return FieldType.other;\n}\n\n/**\n * Looks at the data to guess the column type.  This ignores any existing setting\n */\nexport function guessFieldTypeForField(field: Field): FieldType | undefined {\n  // 1. Use the column name to guess\n  if (field.name) {\n    const name = field.name.toLowerCase();\n    if (name === 'date' || name === 'time') {\n      return FieldType.time;\n    }\n  }\n\n  // 2. Check the first non-null value\n  for (let i = 0; i < field.values.length; i++) {\n    const v = field.values[i];\n    if (v != null) {\n      return guessFieldTypeFromValue(v);\n    }\n  }\n\n  // Could not find anything\n  return undefined;\n}\n\n/**\n * @returns A copy of the series with the best guess for each field type.\n * If the series already has field types defined, they will be used, unless `guessDefined` is true.\n * @param series The DataFrame whose field's types should be guessed\n * @param guessDefined Whether to guess types of fields with already defined types\n */\nexport const guessFieldTypes = (series: DataFrame, guessDefined = false): DataFrame => {\n  for (const field of series.fields) {\n    if (!field.type || field.type === FieldType.other || guessDefined) {\n      // Something is missing a type, return a modified copy\n      return {\n        ...series,\n        fields: series.fields.map((field) => {\n          if (field.type && field.type !== FieldType.other && !guessDefined) {\n            return field;\n          }\n          // Calculate a reasonable schema value\n          return {\n            ...field,\n            type: guessFieldTypeForField(field) || FieldType.other,\n          };\n        }),\n      };\n    }\n  }\n  // No changes necessary\n  return series;\n};\n\nexport const isTableData = (data: unknown): data is DataFrame => Boolean(data && data.hasOwnProperty('columns'));\n\nexport const isDataFrame = (data: unknown): data is DataFrame => Boolean(data && data.hasOwnProperty('fields'));\n\nexport const isDataFrameWithValue = (data: unknown): data is DataFrameWithValue =>\n  Boolean(isDataFrame(data) && data.hasOwnProperty('value'));\n\n/**\n * Inspect any object and return the results as a DataFrame\n */\nexport function toDataFrame(data: any): DataFrame {\n  if ('fields' in data) {\n    // DataFrameDTO does not have length\n    if ('length' in data && data.fields[0]?.values?.get) {\n      return data as DataFrame;\n    }\n\n    // This will convert the array values into Vectors\n    return createDataFrame(data as DataFrameDTO);\n  }\n\n  // Handle legacy docs/json type\n  if (data.hasOwnProperty('type') && data.type === 'docs') {\n    return convertJSONDocumentDataToDataFrame(data);\n  }\n\n  if (data.hasOwnProperty('datapoints') || data.hasOwnProperty('points')) {\n    return convertTimeSeriesToDataFrame(data);\n  }\n\n  if (data.hasOwnProperty('data')) {\n    if (data.hasOwnProperty('schema')) {\n      return dataFrameFromJSON(data);\n    }\n    return convertGraphSeriesToDataFrame(data);\n  }\n\n  if (data.hasOwnProperty('columns')) {\n    return convertTableToDataFrame(data);\n  }\n\n  if (Array.isArray(data)) {\n    return arrayToDataFrame(data);\n  }\n\n  console.warn('Can not convert', data);\n  throw new Error('Unsupported data format');\n}\n\nexport const toLegacyResponseData = (frame: DataFrame): TimeSeries | TableData => {\n  const { fields } = frame;\n\n  const rowCount = frame.length;\n  const rows: unknown[][] = [];\n\n  if (fields.length === 2) {\n    const { timeField, timeIndex } = getTimeField(frame);\n    if (timeField) {\n      const valueIndex = timeIndex === 0 ? 1 : 0;\n      const valueField = fields[valueIndex];\n      const timeField = fields[timeIndex!];\n\n      // Make sure it is [value,time]\n      for (let i = 0; i < rowCount; i++) {\n        rows.push([\n          valueField.values[i], // value\n          timeField.values[i], // time\n        ]);\n      }\n\n      return {\n        alias: frame.name,\n        target: getFieldDisplayName(valueField, frame),\n        datapoints: rows,\n        unit: fields[0].config ? fields[0].config.unit : undefined,\n        refId: frame.refId,\n        meta: frame.meta,\n      } as TimeSeries;\n    }\n  }\n\n  for (let i = 0; i < rowCount; i++) {\n    const row: unknown[] = [];\n    for (let j = 0; j < fields.length; j++) {\n      row.push(fields[j].values[i]);\n    }\n    rows.push(row);\n  }\n\n  if (frame.meta && frame.meta.json) {\n    return {\n      alias: fields[0].name || frame.name,\n      target: fields[0].name || frame.name,\n      datapoints: fields[0].values,\n      filterable: fields[0].config ? fields[0].config.filterable : undefined,\n      type: 'docs',\n    } as TimeSeries;\n  }\n\n  return {\n    columns: fields.map((f) => {\n      const { name, config } = f;\n      if (config) {\n        // keep unit etc\n        const { ...column } = config;\n        (column as Column).text = name;\n        return column as Column;\n      }\n      return { text: name };\n    }),\n    type: 'table',\n    refId: frame.refId,\n    meta: frame.meta,\n    rows,\n  };\n};\n\nexport function sortDataFrame(data: DataFrame, sortIndex?: number, reverse = false): DataFrame {\n  const field = data.fields[sortIndex!];\n  if (!field) {\n    return data;\n  }\n\n  // Natural order\n  const index: number[] = [];\n  for (let i = 0; i < data.length; i++) {\n    index.push(i);\n  }\n\n  const fieldComparer = fieldIndexComparer(field, reverse);\n  index.sort(fieldComparer);\n\n  return {\n    ...data,\n    fields: data.fields.map((f) => {\n      const newF = {\n        ...f,\n        values: f.values.map((v, i) => f.values[index[i]]),\n      };\n\n      // only add .nanos if it exists\n      const { nanos } = f;\n      if (nanos !== undefined) {\n        newF.nanos = nanos.map((n, i) => nanos[index[i]]);\n      }\n      return newF;\n    }),\n  };\n}\n\n/**\n * Returns a copy with all values reversed\n */\nexport function reverseDataFrame(data: DataFrame): DataFrame {\n  return {\n    ...data,\n    fields: data.fields.map((f) => {\n      const values = [...f.values];\n      values.reverse();\n\n      const newF = {\n        ...f,\n        values,\n      };\n\n      // only add .nanos if it exists\n      const { nanos } = f;\n      if (nanos !== undefined) {\n        const revNanos = [...nanos];\n        revNanos.reverse();\n        newF.nanos = revNanos;\n      }\n      return newF;\n    }),\n  };\n}\n\n/**\n * Wrapper to get an array from each field value\n */\nexport function getDataFrameRow(data: DataFrame, row: number): unknown[] {\n  const values: unknown[] = [];\n  for (const field of data.fields) {\n    values.push(field.values[row]);\n  }\n  return values;\n}\n\n/**\n * Returns a copy that does not include functions\n */\nexport function toDataFrameDTO(data: DataFrame): DataFrameDTO {\n  return toFilteredDataFrameDTO(data);\n}\n\nexport function toFilteredDataFrameDTO(data: DataFrame, fieldPredicate?: (f: Field) => boolean): DataFrameDTO {\n  const filteredFields = fieldPredicate ? data.fields.filter(fieldPredicate) : data.fields;\n  const fields: FieldDTO[] = filteredFields.map((f) => {\n    let values = f.values;\n    return {\n      name: f.name,\n      type: f.type,\n      config: f.config,\n      values,\n      labels: f.labels,\n    };\n  });\n\n  return {\n    fields,\n    refId: data.refId,\n    meta: data.meta,\n    name: data.name,\n  };\n}\n\nexport const getTimeField = (series: DataFrame): { timeField?: Field; timeIndex?: number } => {\n  for (let i = 0; i < series.fields.length; i++) {\n    if (series.fields[i].type === FieldType.time) {\n      return {\n        timeField: series.fields[i],\n        timeIndex: i,\n      };\n    }\n  }\n  return {};\n};\n\nfunction getProcessedDataFrame(data: DataQueryResponseData): DataFrame {\n  const dataFrame = guessFieldTypes(toDataFrame(data));\n\n  if (dataFrame.fields && dataFrame.fields.length) {\n    // clear out the cached info\n    for (const field of dataFrame.fields) {\n      field.state = null;\n    }\n  }\n\n  return dataFrame;\n}\n\n/**\n * Given data request results, will return data frames with field types set\n *\n * This is also used by PanelChrome for snapshot support\n */\nexport function getProcessedDataFrames(results?: DataQueryResponseData[]): DataFrame[] {\n  if (!results || !isArray(results)) {\n    return [];\n  }\n\n  return results.map((data) => getProcessedDataFrame(data));\n}\n\n/**\n * Will process the panel data frames and in case of loading state with no data, will return the last result data but with loading state\n * This is to have panels not flicker temporarily with \"no data\" while loading\n */\nexport function preProcessPanelData(data: PanelData, lastResult?: PanelData): PanelData {\n  const { series, annotations } = data;\n\n  //  for loading states with no data, use last result\n  if (data.state === LoadingState.Loading && series.length === 0) {\n    if (!lastResult) {\n      lastResult = data;\n    }\n\n    return {\n      ...lastResult,\n      state: LoadingState.Loading,\n      request: data.request,\n    };\n  }\n\n  // Make sure the data frames are properly formatted\n  const STARTTIME = performance.now();\n  const processedDataFrames = series.map((data) => getProcessedDataFrame(data));\n  const annotationsProcessed = getProcessedDataFrames(annotations);\n  const STOPTIME = performance.now();\n\n  return {\n    ...data,\n    series: processedDataFrames,\n    annotations: annotationsProcessed,\n    timings: { dataProcessingTime: STOPTIME - STARTTIME },\n  };\n}\n\nexport interface PartialDataFrame extends Omit<DataFrame, 'fields' | 'length'> {\n  fields: Array<Partial<Field>>;\n}\n\nexport function createDataFrame(input: PartialDataFrame): DataFrame {\n  let length = 0;\n  const fields = input.fields.map((p, idx) => {\n    const { state, ...field } = p;\n    if (!field.name) {\n      field.name = `Field ${idx + 1}`;\n    }\n    if (!field.config) {\n      field.config = {};\n    }\n    if (!field.values) {\n      field.values = new Array(length);\n    } else if (field.values.length > length) {\n      length = field.values.length;\n    }\n    if (!field.type) {\n      field.type = guessFieldTypeForField(field as Field) ?? FieldType.other;\n    }\n    return field as Field;\n  });\n\n  return {\n    ...input,\n    fields,\n    length,\n  };\n}\n","import { css } from '@emotion/css';\nimport React, { ElementType, forwardRef, PropsWithChildren } from 'react';\n\nimport { GrafanaTheme2, ThemeSpacingTokens, ThemeShape, ThemeShadows } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { AlignItems, FlexProps, JustifyContent } from '../types';\nimport { ResponsiveProp, getResponsiveStyle } from '../utils/responsiveness';\n\ntype Display = 'flex' | 'block' | 'inline' | 'none';\nexport type BackgroundColor = keyof GrafanaTheme2['colors']['background'] | 'error' | 'success' | 'warning' | 'info';\nexport type BorderStyle = 'solid' | 'dashed';\nexport type BorderColor = keyof GrafanaTheme2['colors']['border'] | 'error' | 'success' | 'warning' | 'info';\nexport type BorderRadius = keyof ThemeShape['radius'];\nexport type BoxShadow = keyof ThemeShadows;\n\ninterface BoxProps extends FlexProps, Omit<React.HTMLAttributes<HTMLElement>, 'className' | 'style'> {\n  // Margin props\n  /** Sets the property `margin` */\n  margin?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the properties `margin-top` and `margin-bottom`. Higher priority than margin. */\n  marginX?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the properties `margin-left` and `margin-right`. Higher priority than margin. */\n  marginY?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `margin-top`. Higher priority than margin and marginY. */\n  marginTop?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `margin-bottom`. Higher priority than margin and marginXY */\n  marginBottom?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `margin-left`. Higher priority than margin and marginX. */\n  marginLeft?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `margin-right`. Higher priority than margin and marginX. */\n  marginRight?: ResponsiveProp<ThemeSpacingTokens>;\n\n  // Padding props\n  /** Sets the property `padding` */\n  padding?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the properties `padding-top` and `padding-bottom`. Higher priority than padding. */\n  paddingX?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the properties `padding-left` and `padding-right`. Higher priority than padding. */\n  paddingY?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `padding-top`. Higher priority than padding and paddingY. */\n  paddingTop?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `padding-bottom`. Higher priority than padding and paddingY. */\n  paddingBottom?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `padding-left`. Higher priority than padding and paddingX. */\n  paddingLeft?: ResponsiveProp<ThemeSpacingTokens>;\n  /** Sets the property `padding-right`. Higher priority than padding and paddingX. */\n  paddingRight?: ResponsiveProp<ThemeSpacingTokens>;\n\n  // Border Props\n  borderStyle?: ResponsiveProp<BorderStyle>;\n  borderColor?: ResponsiveProp<BorderColor>;\n  borderRadius?: ResponsiveProp<BorderRadius>;\n\n  // Flex Props\n  alignItems?: ResponsiveProp<AlignItems>;\n  justifyContent?: ResponsiveProp<JustifyContent>;\n  gap?: ResponsiveProp<ThemeSpacingTokens>;\n\n  // Other props\n  backgroundColor?: ResponsiveProp<BackgroundColor>;\n  display?: ResponsiveProp<Display>;\n  boxShadow?: ResponsiveProp<BoxShadow>;\n  /** Sets the HTML element that will be rendered as a Box. Defaults to 'div' */\n  element?: ElementType;\n}\n\nexport const Box = forwardRef<HTMLElement, PropsWithChildren<BoxProps>>((props, ref) => {\n  const {\n    children,\n    margin,\n    marginX,\n    marginY,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    padding,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    display,\n    backgroundColor,\n    grow,\n    shrink,\n    basis,\n    flex,\n    borderColor,\n    borderStyle,\n    borderRadius,\n    justifyContent,\n    alignItems,\n    boxShadow,\n    element,\n    gap,\n    ...rest\n  } = props;\n  const styles = useStyles2(\n    getStyles,\n    margin,\n    marginX,\n    marginY,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    padding,\n    paddingX,\n    paddingY,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    display,\n    backgroundColor,\n    grow,\n    shrink,\n    basis,\n    flex,\n    borderColor,\n    borderStyle,\n    borderRadius,\n    justifyContent,\n    alignItems,\n    boxShadow,\n    gap\n  );\n  const Element = element ?? 'div';\n\n  return (\n    <Element ref={ref} className={styles.root} {...rest}>\n      {children}\n    </Element>\n  );\n});\n\nBox.displayName = 'Box';\n\nconst customBorderColor = (color: BorderColor, theme: GrafanaTheme2) => {\n  switch (color) {\n    case 'error':\n    case 'success':\n    case 'info':\n    case 'warning':\n      return theme.colors[color].borderTransparent;\n    default:\n      return color ? theme.colors.border[color] : undefined;\n  }\n};\n\nconst customBackgroundColor = (color: BackgroundColor, theme: GrafanaTheme2) => {\n  switch (color) {\n    case 'error':\n    case 'success':\n    case 'info':\n    case 'warning':\n      return theme.colors[color].transparent;\n    default:\n      return color ? theme.colors.background[color] : undefined;\n  }\n};\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  margin: BoxProps['margin'],\n  marginX: BoxProps['marginX'],\n  marginY: BoxProps['marginY'],\n  marginTop: BoxProps['marginTop'],\n  marginBottom: BoxProps['marginBottom'],\n  marginLeft: BoxProps['marginLeft'],\n  marginRight: BoxProps['marginRight'],\n  padding: BoxProps['padding'],\n  paddingX: BoxProps['paddingX'],\n  paddingY: BoxProps['paddingY'],\n  paddingTop: BoxProps['paddingTop'],\n  paddingBottom: BoxProps['paddingBottom'],\n  paddingLeft: BoxProps['paddingLeft'],\n  paddingRight: BoxProps['paddingRight'],\n  display: BoxProps['display'],\n  backgroundColor: BoxProps['backgroundColor'],\n  grow: BoxProps['grow'],\n  shrink: BoxProps['shrink'],\n  basis: BoxProps['basis'],\n  flex: BoxProps['flex'],\n  borderColor: BoxProps['borderColor'],\n  borderStyle: BoxProps['borderStyle'],\n  borderRadius: BoxProps['borderRadius'],\n  justifyContent: BoxProps['justifyContent'],\n  alignItems: BoxProps['alignItems'],\n  boxShadow: BoxProps['boxShadow'],\n  gap: BoxProps['gap']\n) => {\n  return {\n    root: css([\n      getResponsiveStyle(theme, margin, (val) => ({\n        margin: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, marginX, (val) => ({\n        marginLeft: theme.spacing(val),\n        marginRight: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, marginY, (val) => ({\n        marginTop: theme.spacing(val),\n        marginBottom: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, marginTop, (val) => ({\n        marginTop: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, marginBottom, (val) => ({\n        marginBottom: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, marginLeft, (val) => ({\n        marginLeft: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, marginRight, (val) => ({\n        marginRight: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, padding, (val) => ({\n        padding: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, paddingX, (val) => ({\n        paddingLeft: theme.spacing(val),\n        paddingRight: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, paddingY, (val) => ({\n        paddingTop: theme.spacing(val),\n        paddingBottom: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, paddingTop, (val) => ({\n        paddingTop: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, paddingBottom, (val) => ({\n        paddingBottom: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, paddingLeft, (val) => ({\n        paddingLeft: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, paddingRight, (val) => ({\n        paddingRight: theme.spacing(val),\n      })),\n      getResponsiveStyle(theme, display, (val) => ({\n        display: val,\n      })),\n      getResponsiveStyle(theme, backgroundColor, (val) => ({\n        backgroundColor: customBackgroundColor(val, theme),\n      })),\n      getResponsiveStyle(theme, grow, (val) => ({\n        flexGrow: val,\n      })),\n      getResponsiveStyle(theme, shrink, (val) => ({\n        flexShrink: val,\n      })),\n      getResponsiveStyle(theme, basis, (val) => ({\n        flexBasis: val,\n      })),\n      getResponsiveStyle(theme, flex, (val) => ({\n        flex: val,\n      })),\n      getResponsiveStyle(theme, borderStyle, (val) => ({\n        borderStyle: val,\n      })),\n      getResponsiveStyle(theme, borderColor, (val) => ({\n        borderColor: customBorderColor(val, theme),\n      })),\n      (borderStyle || borderColor) && {\n        borderWidth: '1px',\n      },\n      getResponsiveStyle(theme, justifyContent, (val) => ({\n        justifyContent: val,\n      })),\n      getResponsiveStyle(theme, alignItems, (val) => ({\n        alignItems: val,\n      })),\n      getResponsiveStyle(theme, borderRadius, (val) => ({\n        borderRadius: theme.shape.radius[val],\n      })),\n      getResponsiveStyle(theme, boxShadow, (val) => ({\n        boxShadow: theme.shadows[val],\n      })),\n      getResponsiveStyle(theme, gap, (val) => ({\n        gap: theme.spacing(val),\n      })),\n    ]),\n  };\n};\n","import React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport { Tooltip } from '../Tooltip/Tooltip';\n\ninterface TruncatedTextProps {\n  childElement: (ref: React.ForwardedRef<HTMLElement> | undefined) => React.ReactElement;\n  children: NonNullable<React.ReactNode>;\n}\n\nexport const TruncatedText = React.forwardRef<HTMLElement, TruncatedTextProps>(({ childElement, children }, ref) => {\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const internalRef = useRef<HTMLElement>(null);\n\n  // Wire up the forwarded ref to the internal ref\n  useImperativeHandle<HTMLElement | null, HTMLElement | null>(ref, () => internalRef.current);\n\n  const resizeObserver = useMemo(\n    () =>\n      new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          if (entry.target.clientWidth && entry.target.scrollWidth) {\n            if (entry.target.scrollWidth > entry.target.clientWidth) {\n              setIsOverflowing(true);\n            }\n            if (entry.target.scrollWidth <= entry.target.clientWidth) {\n              setIsOverflowing(false);\n            }\n          }\n        }\n      }),\n    []\n  );\n\n  useEffect(() => {\n    const { current } = internalRef;\n    if (current) {\n      resizeObserver.observe(current);\n    }\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [setIsOverflowing, resizeObserver]);\n\n  const getTooltipText = (children: NonNullable<React.ReactNode>) => {\n    if (typeof children === 'string') {\n      return children;\n    }\n    const html = ReactDOMServer.renderToStaticMarkup(<>{children}</>);\n    return html.replace(/(<([^>]+)>)/gi, '');\n  };\n\n  if (isOverflowing) {\n    return (\n      <Tooltip ref={internalRef} content={getTooltipText(children)}>\n        {childElement(undefined)}\n      </Tooltip>\n    );\n  } else {\n    return childElement(internalRef);\n  }\n});\n\nTruncatedText.displayName = 'TruncatedText';\n","import { GrafanaTheme2, ThemeTypographyVariantTypes } from '@grafana/data';\n\nimport { TextProps } from './Text';\n\nexport const customWeight = (weight: TextProps['weight'], theme: GrafanaTheme2): number => {\n  switch (weight) {\n    case 'bold':\n      return theme.typography.fontWeightBold;\n    case 'medium':\n      return theme.typography.fontWeightMedium;\n    case 'light':\n      return theme.typography.fontWeightLight;\n    case 'regular':\n    case undefined:\n      return theme.typography.fontWeightRegular;\n  }\n};\n\nexport const customColor = (color: TextProps['color'], theme: GrafanaTheme2): string | undefined => {\n  switch (color) {\n    case 'error':\n      return theme.colors.error.text;\n    case 'success':\n      return theme.colors.success.text;\n    case 'info':\n      return theme.colors.info.text;\n    case 'warning':\n      return theme.colors.warning.text;\n    default:\n      return color ? theme.colors.text[color] : undefined;\n  }\n};\n\nexport const customVariant = (\n  theme: GrafanaTheme2,\n  element: TextProps['element'],\n  variant?: keyof ThemeTypographyVariantTypes\n) => {\n  if (variant) {\n    return theme.typography[variant];\n  }\n  switch (element) {\n    //Span elements does not have a default variant to be able to take the parents style\n    case 'span':\n      return;\n    case 'h1':\n      return theme.typography.h1;\n    case 'h2':\n      return theme.typography.h2;\n    case 'h3':\n      return theme.typography.h3;\n    case 'h4':\n      return theme.typography.h4;\n    case 'h5':\n      return theme.typography.h5;\n    case 'h6':\n      return theme.typography.h6;\n    default:\n      return theme.typography.body;\n  }\n};\n","import { css } from '@emotion/css';\nimport React, { createElement, CSSProperties } from 'react';\n\nimport { GrafanaTheme2, ThemeTypographyVariantTypes } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { TruncatedText } from './TruncatedText';\nimport { customWeight, customColor, customVariant } from './utils';\n\nexport interface TextProps extends Omit<React.HTMLAttributes<HTMLElement>, 'className' | 'style'> {\n  /** Defines what HTML element is defined underneath. \"span\" by default */\n  element?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'span' | 'p';\n  /** What typograpy variant should be used for the component. Only use if default variant for the defined element is not what is needed */\n  variant?: keyof ThemeTypographyVariantTypes;\n  /** Override the default weight for the used variant */\n  weight?: 'light' | 'regular' | 'medium' | 'bold';\n  /** Color to use for text */\n  color?: keyof GrafanaTheme2['colors']['text'] | 'error' | 'success' | 'warning' | 'info';\n  /** Use to cut the text off with ellipsis if there isn't space to show all of it. On hover shows the rest of the text */\n  truncate?: boolean;\n  /** If true, show the text as italic. False by default */\n  italic?: boolean;\n  /** Whether to align the text to left, center or right */\n  textAlignment?: CSSProperties['textAlign'];\n  children: NonNullable<React.ReactNode>;\n}\n\nexport const Text = React.forwardRef<HTMLElement, TextProps>(\n  ({ element = 'span', variant, weight, color, truncate, italic, textAlignment, children, ...restProps }, ref) => {\n    const styles = useStyles2(getTextStyles, element, variant, color, weight, truncate, italic, textAlignment);\n\n    const childElement = (ref: React.ForwardedRef<HTMLElement> | undefined) => {\n      return createElement(\n        element,\n        {\n          ...restProps,\n          style: undefined, // Remove the style prop to avoid overriding the styles\n          className: styles,\n          // When overflowing, the internalRef is passed to the tooltip, which forwards it to the child element\n          ref,\n        },\n        children\n      );\n    };\n\n    // A 'span' is an inline element, so it can't be truncated\n    // and it should be wrapped in a parent element that will show the tooltip\n    if (!truncate || element === 'span') {\n      return childElement(undefined);\n    }\n\n    return (\n      <TruncatedText\n        childElement={childElement}\n        // eslint-disable-next-line react/no-children-prop\n        children={children}\n        ref={ref}\n      />\n    );\n  }\n);\n\nText.displayName = 'Text';\n\nconst getTextStyles = (\n  theme: GrafanaTheme2,\n  element?: TextProps['element'],\n  variant?: keyof ThemeTypographyVariantTypes,\n  color?: TextProps['color'],\n  weight?: TextProps['weight'],\n  truncate?: TextProps['truncate'],\n  italic?: TextProps['italic'],\n  textAlignment?: TextProps['textAlignment']\n) => {\n  return css([\n    {\n      margin: 0,\n      padding: 0,\n      ...customVariant(theme, element, variant),\n    },\n    variant && {\n      ...theme.typography[variant],\n    },\n    color && {\n      color: customColor(color, theme),\n    },\n    weight && {\n      fontWeight: customWeight(weight, theme),\n    },\n    truncate && {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n    },\n    italic && {\n      fontStyle: 'italic',\n    },\n    textAlignment && {\n      textAlign: textAlignment,\n    },\n  ]);\n};\n","import { css, cx } from '@emotion/css';\nimport React, { AriaRole, HTMLAttributes, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { Button } from '../Button/Button';\nimport { Icon } from '../Icon/Icon';\nimport { Box } from '../Layout/Box/Box';\nimport { Text } from '../Text/Text';\n\nexport type AlertVariant = 'success' | 'warning' | 'error' | 'info';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  title: string;\n  /** On click handler for alert button, mostly used for dismissing the alert */\n  onRemove?: (event: React.MouseEvent) => void;\n  severity?: AlertVariant;\n  children?: ReactNode;\n  elevated?: boolean;\n  buttonContent?: React.ReactNode | string;\n  bottomSpacing?: number;\n  topSpacing?: number;\n}\n\nexport const Alert = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      title,\n      onRemove,\n      children,\n      buttonContent,\n      elevated,\n      bottomSpacing,\n      topSpacing,\n      className,\n      severity = 'error',\n      ...restProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const hasTitle = Boolean(title);\n    const styles = getStyles(theme, severity, hasTitle, elevated, bottomSpacing, topSpacing);\n    const rolesBySeverity: Record<AlertVariant, AriaRole> = {\n      error: 'alert',\n      warning: 'alert',\n      info: 'status',\n      success: 'status',\n    };\n    const role = restProps['role'] || rolesBySeverity[severity];\n    const ariaLabel = restProps['aria-label'] || title;\n\n    return (\n      <div\n        ref={ref}\n        className={cx(styles.wrapper, className)}\n        data-testid={selectors.components.Alert.alertV2(severity)}\n        role={role}\n        aria-label={ariaLabel}\n        {...restProps}\n      >\n        <Box\n          display=\"flex\"\n          backgroundColor={severity}\n          borderRadius=\"default\"\n          paddingY={1}\n          paddingX={2}\n          borderStyle=\"solid\"\n          borderColor={severity}\n          alignItems=\"stretch\"\n          boxShadow={elevated ? 'z3' : undefined}\n        >\n          <Box paddingTop={1} paddingRight={2}>\n            <div className={styles.icon}>\n              <Icon size=\"xl\" name={getIconFromSeverity(severity)} />\n            </div>\n          </Box>\n\n          <Box paddingY={1} grow={1}>\n            <Text weight=\"medium\">{title}</Text>\n            {children && <div className={styles.content}>{children}</div>}\n          </Box>\n          {/* If onRemove is specified, giving preference to onRemove */}\n          {onRemove && !buttonContent && (\n            <div className={styles.close}>\n              <Button\n                aria-label=\"Close alert\"\n                icon=\"times\"\n                onClick={onRemove}\n                type=\"button\"\n                fill=\"text\"\n                variant=\"secondary\"\n              />\n            </div>\n          )}\n\n          {onRemove && buttonContent && (\n            <Box marginLeft={1} display=\"flex\" alignItems=\"center\">\n              <Button aria-label=\"Close alert\" variant=\"secondary\" onClick={onRemove} type=\"button\">\n                {buttonContent}\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </div>\n    );\n  }\n);\n\nAlert.displayName = 'Alert';\n\nexport const getIconFromSeverity = (severity: AlertVariant): IconName => {\n  switch (severity) {\n    case 'error':\n      return 'exclamation-circle';\n    case 'warning':\n      return 'exclamation-triangle';\n    case 'info':\n      return 'info-circle';\n    case 'success':\n      return 'check';\n  }\n};\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  severity: AlertVariant,\n  hasTitle: boolean,\n  elevated?: boolean,\n  bottomSpacing?: number,\n  topSpacing?: number\n) => {\n  const color = theme.colors[severity];\n\n  return {\n    wrapper: css({\n      flexGrow: 1,\n      marginBottom: theme.spacing(bottomSpacing ?? 2),\n      marginTop: theme.spacing(topSpacing ?? 0),\n      position: 'relative',\n\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        background: theme.colors.background.primary,\n        zIndex: -1,\n      },\n    }),\n    icon: css({\n      color: color.text,\n    }),\n    content: css({\n      paddingTop: hasTitle ? theme.spacing(0.5) : 0,\n      maxHeight: '50vh',\n      overflowY: 'auto',\n    }),\n    close: css({\n      position: 'relative',\n      color: theme.colors.text.secondary,\n      background: 'none',\n      display: 'flex',\n      top: '-6px',\n      right: '-14px',\n    }),\n  };\n};\n","import { isArray } from 'lodash';\nimport React, { useState } from 'react';\n\nimport { dataFrameToJSON, toDataFrame, toDataFrameDTO } from '@grafana/data';\nimport { toDataQueryResponse } from '@grafana/runtime';\nimport { Alert, CodeEditor } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\n\nexport const RawFrameEditor = ({ onChange, query }: EditorProps) => {\n  const [error, setError] = useState<string>();\n  const [warning, setWarning] = useState<string>();\n\n  const onSaveFrames = (rawFrameContent: string) => {\n    try {\n      const json = JSON.parse(rawFrameContent);\n      if (isArray(json)) {\n        setError(undefined);\n        setWarning(undefined);\n        onChange({ ...query, rawFrameContent });\n        return;\n      }\n\n      let data = undefined;\n\n      // Copy paste from panel json\n      if (isArray(json.series) && json.state) {\n        data = json.series.map((v: unknown) => toDataFrameDTO(toDataFrame(v)));\n      } else {\n        // Chek if it is a copy of the raw resuls\n        const v = toDataQueryResponse({ data: json });\n        if (v.data?.length && !v.error) {\n          data = v.data.map((f) => dataFrameToJSON(f));\n        }\n      }\n\n      if (data) {\n        console.log('Original', json);\n        console.log('Save', data);\n        setError(undefined);\n        setWarning('Converted to direct frame result');\n        onChange({ ...query, rawFrameContent: JSON.stringify(data, null, 2) });\n        return;\n      }\n\n      setError('Unable to read dataframes in text');\n    } catch (e) {\n      console.log('Error parsing json', e);\n      setError('Enter JSON array of data frames (or raw query results body)');\n      setWarning(undefined);\n    }\n  };\n\n  return (\n    <>\n      {error && <Alert title={error} severity=\"error\" />}\n      {warning && <Alert title={warning} severity=\"warning\" />}\n      <CodeEditor\n        height={300}\n        language=\"json\"\n        value={query.rawFrameContent ?? '[]'}\n        onBlur={onSaveFrames}\n        onSave={onSaveFrames}\n        showMiniMap={true}\n        showLineNumbers={true}\n      />\n    </>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  children: React.ReactNode;\n  description?: React.ReactNode;\n  category?: React.ReactNode[];\n}\n\nexport const Label = ({ children, description, className, category, ...labelProps }: LabelProps) => {\n  const styles = useStyles2(getLabelStyles);\n  const categories = category?.map((c, i) => {\n    return (\n      <span className={styles.categories} key={`${c}/${i}`}>\n        <span>{c}</span>\n        <Icon name=\"angle-right\" className={styles.chevron} />\n      </span>\n    );\n  });\n\n  return (\n    <div className={cx(styles.label, className)}>\n      <label {...labelProps}>\n        <div className={styles.labelContent}>\n          {categories}\n          {children}\n        </div>\n        {description && <span className={styles.description}>{description}</span>}\n      </label>\n    </div>\n  );\n};\n\nexport const getLabelStyles = (theme: GrafanaTheme2) => ({\n  label: css({\n    label: 'Label',\n    fontSize: theme.typography.size.sm,\n    fontWeight: theme.typography.fontWeightMedium,\n    lineHeight: 1.25,\n    marginBottom: theme.spacing(0.5),\n    color: theme.colors.text.primary,\n    maxWidth: '480px',\n  }),\n  labelContent: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n  description: css({\n    label: 'Label-description',\n    color: theme.colors.text.secondary,\n    fontSize: theme.typography.size.sm,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginTop: theme.spacing(0.25),\n    display: 'block',\n  }),\n  categories: css({\n    label: 'Label-categories',\n    display: 'inline-flex',\n    alignItems: 'center',\n  }),\n  chevron: css({\n    margin: theme.spacing(0, 0.25),\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface LabelProps extends React.HTMLAttributes<HTMLLegendElement> {\n  children: string | ReactNode;\n  description?: string;\n}\n\nexport const getLegendStyles = (theme: GrafanaTheme2) => {\n  return {\n    legend: css({\n      fontSize: theme.typography.h3.fontSize,\n      fontWeight: theme.typography.fontWeightRegular,\n      margin: theme.spacing(0, 0, 2, 0),\n    }),\n  };\n};\n\nexport const Legend = ({ children, className, ...legendProps }: LabelProps) => {\n  const styles = useStyles2(getLegendStyles);\n\n  return (\n    <legend className={cx(styles.legend, className)} {...legendProps}>\n      {children}\n    </legend>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { Legend } from './Legend';\n\nexport interface Props extends Omit<HTMLProps<HTMLFieldSetElement>, 'label'> {\n  children: React.ReactNode[] | React.ReactNode;\n  /** Label for the fieldset's legend */\n  label?: React.ReactNode;\n}\n\nexport const FieldSet = ({ label, children, className, ...rest }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <fieldset className={cx(styles.wrapper, className)} {...rest}>\n      {label && <Legend>{label}</Legend>}\n      {children}\n    </fieldset>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    marginBottom: theme.spacing(4),\n\n    '&:last-child': {\n      marginBottom: 0,\n    },\n  }),\n});\n","import { css } from '@emotion/css';\nimport React, { FormEvent, useState, ChangeEvent } from 'react';\n\nimport { DataFrameSchema, FieldSchema, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, TextArea, InlineField, Input, FieldSet, InlineSwitch } from '@grafana/ui';\n\ninterface SchemaFormProps {\n  config: Record<string, any>;\n  schema: DataFrameSchema;\n  onChange: (config: Record<string, any>) => void;\n}\n\nconst renderInput = (field: FieldSchema, onChange: SchemaFormProps['onChange'], config: SchemaFormProps['config']) => {\n  switch (field.type) {\n    case 'number':\n      return (\n        <Input\n          type=\"number\"\n          defaultValue={config?.[field.name]}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            const newValue = e.currentTarget.valueAsNumber;\n            onChange({ ...config, [field.name]: newValue });\n          }}\n        />\n      );\n    case 'boolean':\n      return (\n        <InlineSwitch\n          value={config?.[field.name] ?? true}\n          onChange={() => {\n            onChange({ ...config, [field.name]: !config[field.name] });\n          }}\n        />\n      );\n    default:\n      return (\n        <Input\n          type=\"string\"\n          value={config?.[field.name]}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            const newValue = e.target.value;\n            onChange({ ...config, [field.name]: newValue });\n          }}\n        />\n      );\n  }\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    jsonView: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nexport const SimulationSchemaForm = ({ config, schema, onChange }: SchemaFormProps) => {\n  const [jsonView, setJsonView] = useState<boolean>(false);\n\n  const styles = useStyles2(getStyles);\n\n  const onUpdateTextArea = (event: FormEvent<HTMLTextAreaElement>) => {\n    const element = event.currentTarget;\n    onChange(JSON.parse(element.value));\n  };\n\n  return (\n    <FieldSet label=\"Config\">\n      <InlineSwitch\n        className={styles.jsonView}\n        label=\"JSON View\"\n        showLabel\n        value={jsonView}\n        onChange={() => setJsonView(!jsonView)}\n      />\n      {jsonView ? (\n        <TextArea defaultValue={JSON.stringify(config, null, 2)} rows={7} onChange={onUpdateTextArea} />\n      ) : (\n        <>\n          {schema.fields.map((field) => (\n            <InlineField label={field.name} key={field.name} labelWidth={14}>\n              {renderInput(field, onChange, config)}\n            </InlineField>\n          ))}\n        </>\n      )}\n    </FieldSet>\n  );\n};\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { DataFrameJSON, SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch, Input, Label, Select } from '@grafana/ui';\n\nimport { EditorProps } from '../QueryEditor';\nimport { SimulationQuery } from '../dataquery.gen';\n\nimport { SimulationSchemaForm } from './SimulationSchemaForm';\n\n// Type         string      `json:\"type\"`\n// Name         string      `json:\"name\"`\n// Description  string      `json:\"description\"`\n// OnlyForward  bool        `json:\"forward\"`\n// ConfigFields *data.Frame `json:\"config\"`\n\ninterface SimInfo {\n  type: string;\n  name: string;\n  description: string;\n  forward: boolean;\n  config: DataFrameJSON;\n}\n\nexport const SimulationQueryEditor = ({ onChange, query, ds }: EditorProps) => {\n  const simQuery = query.sim ?? ({} as SimulationQuery);\n  const simKey = simQuery.key ?? {};\n  // keep track of updated config state to pass down to form\n  const [cfgValue, setCfgValue] = useState<Record<string, any>>({});\n\n  // This only changes once\n  const info = useAsync(async () => {\n    const v = await ds.getResource<SimInfo[]>('sims');\n    return {\n      sims: v,\n      options: v.map((s) => ({ label: s.name, value: s.type, description: s.description })),\n    };\n  }, [ds]);\n\n  const current = useMemo(() => {\n    const type = simKey.type;\n    if (!type || !info.value) {\n      return {};\n    }\n    return {\n      details: info.value.sims.find((v) => v.type === type),\n      option: info.value.options.find((v) => v.value === type),\n    };\n  }, [info.value, simKey?.type]);\n\n  let config = useAsync(async () => {\n    let path = simKey.type + '/' + simKey.tick + 'hz';\n    if (simKey.uid) {\n      path += '/' + simKey.uid;\n    }\n    let config = (await ds.getResource('sim/' + path))?.config;\n    setCfgValue(config.value);\n    return config;\n  }, [simKey.type, simKey.tick, simKey.uid]);\n\n  const onUpdateKey = (key: typeof simQuery.key) => {\n    onChange({ ...query, sim: { ...simQuery, key } });\n  };\n\n  const onUIDChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onUpdateKey({ ...simKey, uid: value ?? undefined });\n  };\n\n  const onTickChanged = (e: FormEvent<HTMLInputElement>) => {\n    const tick = e.currentTarget.valueAsNumber;\n    onUpdateKey({ ...simKey, tick });\n  };\n\n  const onTypeChange = (v: SelectableValue<string>) => {\n    onUpdateKey({ ...simKey, type: v.value! });\n  };\n\n  const onToggleStream = () => {\n    onChange({ ...query, sim: { ...simQuery, stream: !simQuery.stream } });\n  };\n\n  const onToggleLast = () => {\n    onChange({ ...query, sim: { ...simQuery, last: !simQuery.last } });\n  };\n\n  const onSchemaFormChange = (config: Record<string, any>) => {\n    let path = simKey.type + '/' + simKey.tick + 'hz';\n    if (simKey.uid) {\n      path += '/' + simKey.uid;\n    }\n    ds.postResource('sim/' + path, config).then((res) => {\n      setCfgValue(res.config);\n    });\n  };\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Simulation\" tooltip=\"\">\n          <Select\n            isLoading={info.loading}\n            options={info.value?.options ?? []}\n            value={current.option}\n            onChange={onTypeChange}\n            width={32}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Stream\" tooltip=\"connect to the live channel\">\n          <InlineSwitch value={Boolean(simQuery.stream)} onChange={onToggleStream} />\n        </InlineField>\n\n        <InlineField label=\"Interval\" tooltip=\"the rate a simulation will spit out events\">\n          <Input\n            width={10}\n            type=\"number\"\n            value={simKey.tick}\n            onChange={onTickChanged}\n            min={1 / 10}\n            max={50}\n            suffix=\"hz\"\n          />\n        </InlineField>\n\n        <InlineField label=\"Last\" tooltip=\"Only return the last value\">\n          <Label>\n            <InlineSwitch value={Boolean(simQuery.last)} onChange={onToggleLast} />\n          </Label>\n        </InlineField>\n        <InlineField label=\"UID\" tooltip=\"A UID will allow multiple simulations to run at the same time\">\n          <Input type=\"text\" placeholder=\"optional\" value={simQuery.key.uid} onChange={onUIDChanged} />\n        </InlineField>\n      </InlineFieldRow>\n      <SimulationSchemaForm\n        onChange={onSchemaFormChange}\n        config={cfgValue ?? config.value}\n        schema={current.details?.config.schema ?? { fields: [] }}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFieldRow, InlineField, Select, MultiSelect, Input } from '@grafana/ui';\n\nimport { USAQuery } from '../dataquery.gen';\n\nexport interface Props {\n  onChange: (value: USAQuery) => void;\n  query: USAQuery;\n}\n\nexport function USAQueryEditor({ query, onChange }: Props) {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Mode\">\n          <Select\n            options={usaQueryModes}\n            onChange={(v) => {\n              onChange({ ...query, mode: v.value });\n            }}\n            width={32}\n            value={usaQueryModes.find((ep) => ep.value === query.mode)}\n          />\n        </InlineField>\n        <InlineField label=\"Period\">\n          <Input\n            value={query.period}\n            placeholder={'30m'}\n            onChange={(v) => {\n              onChange({ ...query, period: v.currentTarget.value });\n            }}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField labelWidth={14} label=\"Fields\">\n          <MultiSelect\n            options={fieldNames}\n            onChange={(vals: SelectableValue[]) => {\n              onChange({ ...query, fields: vals.map((v) => v.value) });\n            }}\n            width={32}\n            placeholder=\"all\"\n            value={query.fields}\n          />\n        </InlineField>\n        <InlineField label=\"States\" grow>\n          <MultiSelect\n            options={stateNames}\n            onChange={(vals: SelectableValue[]) => {\n              onChange({ ...query, states: vals.map((v) => v.value) });\n            }}\n            placeholder=\"all\"\n            value={query.states}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n}\n\nexport const usaQueryModes = [\n  'values-as-rows',\n  'values-as-fields',\n  'values-as-labeled-fields',\n  'timeseries',\n  'timeseries-wide',\n].map((f) => ({ label: f, value: f }));\n\nexport const fieldNames = [\n  'foo',\n  'bar',\n  'baz', // all short\n].map((f) => ({ label: f, value: f }));\n\nexport const stateNames = [\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'DC',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n].map((f) => ({ label: f, value: f }));\n","import { Labels } from '../types/data';\n\n/**\n * Regexp to extract Prometheus-style labels\n */\nconst labelRegexp = /\\b(\\w+)(!?=~?)\"([^\"\\n]*?)\"/g;\n\n/**\n * Returns a map of label keys to value from an input selector string.\n *\n * Example: `parseLabels('{job=\"foo\", instance=\"bar\"}) // {job: \"foo\", instance: \"bar\"}`\n */\nexport function parseLabels(labels: string): Labels {\n  const labelsByKey: Labels = {};\n  labels.replace(labelRegexp, (_, key, operator, value) => {\n    labelsByKey[key] = value;\n    return '';\n  });\n  return labelsByKey;\n}\n\n/**\n * Returns a map labels that are common to the given label sets.\n */\nexport function findCommonLabels(labelsSets: Labels[]): Labels {\n  return labelsSets.reduce(\n    (acc, labels) => {\n      if (!labels) {\n        throw new Error('Need parsed labels to find common labels.');\n      }\n      // Remove incoming labels that are missing or not matching in value\n      Object.keys(labels).forEach((key) => {\n        if (acc[key] === undefined || acc[key] !== labels[key]) {\n          delete acc[key];\n        }\n      });\n      // Remove common labels that are missing from incoming label set\n      Object.keys(acc).forEach((key) => {\n        if (labels[key] === undefined) {\n          delete acc[key];\n        }\n      });\n      return acc;\n    },\n    { ...labelsSets[0] }\n  );\n}\n\n/**\n * Returns a map of labels that are in `labels`, but not in `commonLabels`.\n */\nexport function findUniqueLabels(labels: Labels | undefined, commonLabels: Labels): Labels {\n  const uncommonLabels: Labels = { ...labels };\n  Object.keys(commonLabels).forEach((key) => {\n    delete uncommonLabels[key];\n  });\n  return uncommonLabels;\n}\n\n/**\n * Check that all labels exist in another set of labels\n */\nexport function matchAllLabels(expect: Labels, against?: Labels): boolean {\n  if (!expect) {\n    return true; // nothing to match\n  }\n  for (const [key, value] of Object.entries(expect)) {\n    if (!against || against[key] !== value) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Serializes the given labels to a string.\n */\nexport function formatLabels(labels: Labels, defaultValue = '', withoutBraces?: boolean): string {\n  if (!labels || Object.keys(labels).length === 0) {\n    return defaultValue;\n  }\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map((key) => `${key}=\"${labels[key]}\"`).join(', ');\n  if (withoutBraces) {\n    return cleanSelector;\n  }\n  return ['{', cleanSelector, '}'].join('');\n}\n","import { PluginState } from '../types';\nimport { SelectableValue } from '../types/select';\n\nexport interface RegistryItem {\n  id: string; // Unique Key -- saved in configs\n  name: string; // Display Name, can change without breaking configs\n  description?: string;\n  aliasIds?: string[]; // when the ID changes, we may want backwards compatibility ('current' => 'last')\n\n  /**\n   * Some extensions should not be user selectable\n   *  like: 'all' and 'any' matchers;\n   */\n  excludeFromPicker?: boolean;\n\n  /**\n   * Optional feature state\n   */\n  state?: PluginState;\n}\n\nexport interface RegistryItemWithOptions<TOptions = any> extends RegistryItem {\n  /**\n   * Convert the options to a string\n   */\n  getOptionsDisplayText?: (options: TOptions) => string;\n\n  /**\n   * Default options used if nothing else is specified\n   */\n  defaultOptions?: TOptions;\n}\n\ninterface RegistrySelectInfo {\n  options: Array<SelectableValue<string>>;\n  current: Array<SelectableValue<string>>;\n}\n\nexport class Registry<T extends RegistryItem> {\n  private ordered: T[] = [];\n  private byId = new Map<string, T>();\n  private initialized = false;\n\n  constructor(private init?: () => T[]) {\n    this.init = init;\n  }\n\n  setInit = (init: () => T[]) => {\n    if (this.initialized) {\n      throw new Error('Registry already initialized');\n    }\n    this.init = init;\n  };\n\n  getIfExists(id: string | undefined): T | undefined {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    if (id) {\n      return this.byId.get(id);\n    }\n\n    return undefined;\n  }\n\n  private initialize() {\n    if (this.init) {\n      for (const ext of this.init()) {\n        this.register(ext);\n      }\n    }\n    this.sort();\n    this.initialized = true;\n  }\n\n  get(id: string): T {\n    const v = this.getIfExists(id);\n    if (!v) {\n      throw new Error(`\"${id}\" not found in: ${this.list().map((v) => v.id)}`);\n    }\n    return v;\n  }\n\n  selectOptions(current?: string[], filter?: (ext: T) => boolean): RegistrySelectInfo {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    const select: RegistrySelectInfo = {\n      options: [],\n      current: [],\n    };\n\n    const currentOptions: Record<string, SelectableValue<string>> = {};\n    if (current) {\n      for (const id of current) {\n        currentOptions[id] = {};\n      }\n    }\n\n    for (const ext of this.ordered) {\n      if (ext.excludeFromPicker) {\n        continue;\n      }\n      if (filter && !filter(ext)) {\n        continue;\n      }\n\n      const option = {\n        value: ext.id,\n        label: ext.name,\n        description: ext.description,\n      };\n\n      if (ext.state === PluginState.alpha) {\n        option.label += ' (alpha)';\n      }\n\n      select.options.push(option);\n      if (currentOptions[ext.id]) {\n        currentOptions[ext.id] = option;\n      }\n    }\n\n    if (current) {\n      // this makes sure we preserve the order of ids\n      select.current = Object.values(currentOptions);\n    }\n\n    return select;\n  }\n\n  /**\n   * Return a list of values by ID, or all values if not specified\n   */\n  list(ids?: string[]): T[] {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    if (ids) {\n      const found: T[] = [];\n      for (const id of ids) {\n        const v = this.getIfExists(id);\n        if (v) {\n          found.push(v);\n        }\n      }\n      return found;\n    }\n\n    return this.ordered;\n  }\n\n  isEmpty(): boolean {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    return this.ordered.length === 0;\n  }\n\n  register(ext: T) {\n    if (this.byId.has(ext.id)) {\n      throw new Error('Duplicate Key:' + ext.id);\n    }\n\n    this.byId.set(ext.id, ext);\n    this.ordered.push(ext);\n\n    if (ext.aliasIds) {\n      for (const alias of ext.aliasIds) {\n        if (!this.byId.has(alias)) {\n          this.byId.set(alias, ext);\n        }\n      }\n    }\n\n    if (this.initialized) {\n      this.sort();\n    }\n  }\n\n  private sort() {\n    // TODO sort the list\n  }\n}\n","// This needs to be in its own file to avoid circular references\n\n// Builtin Predicates\n// not using 'any' and 'never' since they are reserved keywords\nexport enum MatcherID {\n  anyMatch = 'anyMatch', // checks children\n  allMatch = 'allMatch', // checks children\n  invertMatch = 'invertMatch', // checks child\n  alwaysMatch = 'alwaysMatch',\n  neverMatch = 'neverMatch',\n}\n\nexport enum FieldMatcherID {\n  // Specific Types\n  numeric = 'numeric',\n  time = 'time', // Can be multiple times\n  first = 'first',\n  firstTimeField = 'firstTimeField', // Only the first time field\n\n  // With arguments\n  byType = 'byType',\n  byTypes = 'byTypes',\n  byName = 'byName',\n  byNames = 'byNames',\n  byRegexp = 'byRegexp',\n  byRegexpOrNames = 'byRegexpOrNames',\n  byFrameRefID = 'byFrameRefID',\n  byValue = 'byValue',\n  // byIndex = 'byIndex',\n  // byLabel = 'byLabel',\n}\n\n/**\n * Field name matchers\n */\nexport enum FrameMatcherID {\n  byName = 'byName',\n  byRefId = 'byRefId',\n  byIndex = 'byIndex',\n}\n\n/**\n * @public\n */\nexport enum ValueMatcherID {\n  regex = 'regex',\n  isNull = 'isNull',\n  isNotNull = 'isNotNull',\n  greater = 'greater',\n  greaterOrEqual = 'greaterOrEqual',\n  lower = 'lower',\n  lowerOrEqual = 'lowerOrEqual',\n  equal = 'equal',\n  notEqual = 'notEqual',\n  between = 'between',\n}\n","import { Field, FieldType, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID } from './ids';\n\n// General Field matcher\nconst fieldTypeMatcher: FieldMatcherInfo<FieldType> = {\n  id: FieldMatcherID.byType,\n  name: 'Field Type',\n  description: 'match based on the field type',\n  defaultOptions: FieldType.number,\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return type === field.type;\n    };\n  },\n\n  getOptionsDisplayText: (type: FieldType) => {\n    return `Field type: ${type}`;\n  },\n};\n\n// General Field matcher (multiple types)\nconst fieldTypesMatcher: FieldMatcherInfo<Set<FieldType>> = {\n  id: FieldMatcherID.byTypes,\n  name: 'Field Type',\n  description: 'match based on the field types',\n  defaultOptions: new Set(),\n\n  get: (types) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return types.has(field.type);\n    };\n  },\n\n  getOptionsDisplayText: (types) => {\n    return `Field types: ${[...types].join(' | ')}`;\n  },\n};\n\n// Numeric Field matcher\n// This gets its own entry so it shows up in the dropdown\nconst numericMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.numeric,\n  name: 'Numeric Fields',\n  description: 'Fields with type number',\n\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.number);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Numeric Fields';\n  },\n};\n\n// Time Field matcher\nconst timeMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.time,\n  name: 'Time Fields',\n  description: 'Fields with type time',\n\n  get: () => {\n    return fieldTypeMatcher.get(FieldType.time);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Time Fields';\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getFieldTypeMatchers(): FieldMatcherInfo[] {\n  return [fieldTypeMatcher, fieldTypesMatcher, numericMatcher, timeMatcher];\n}\n","import { DataFrameDTO, FieldConfig } from './dataFrame';\nimport { DataFrameType } from './dataFrameTypes';\nimport { ApplyFieldOverrideOptions } from './fieldOverrides';\nimport { DataTopic } from './query';\nimport { DataTransformerConfig } from './transformations';\n\nimport { PanelPluginDataSupport } from '.';\n\nexport type KeyValue<T = any> = Record<string, T>;\n\n/**\n * Represent panel data loading state.\n * @public\n */\nexport enum LoadingState {\n  NotStarted = 'NotStarted',\n  Loading = 'Loading',\n  Streaming = 'Streaming',\n  Done = 'Done',\n  Error = 'Error',\n}\n\n// Should be kept in sync with grafana-plugin-sdk-go/data/frame_meta.go\nexport const preferredVisualizationTypes = [\n  'graph',\n  'table',\n  'logs',\n  'trace',\n  'nodeGraph',\n  'flamegraph',\n  'rawPrometheus',\n] as const;\nexport type PreferredVisualisationType = (typeof preferredVisualizationTypes)[number];\n\n/**\n * @public\n */\nexport interface QueryResultMeta {\n  type?: DataFrameType;\n\n  /**\n   * TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\n   * contract documentation https://github.com/grafana/grafana-plugin-sdk-go/tree/main/data/contract_docs.\n   */\n  typeVersion?: [number, number];\n\n  /** DatasSource Specific Values */\n  custom?: Record<string, any>;\n\n  /** Stats */\n  stats?: QueryResultMetaStat[];\n\n  /** Meta Notices */\n  notices?: QueryResultMetaNotice[];\n\n  /** Used to track transformation ids that where part of the processing */\n  transformations?: string[];\n\n  /** Currently used to show results in Explore only in preferred visualisation option */\n  preferredVisualisationType?: PreferredVisualisationType;\n\n  /** Set the panel plugin id to use to render the data when using Explore. If the plugin cannot be found\n   * will fall back to {@link preferredVisualisationType}.\n   *\n   * @alpha\n   */\n  preferredVisualisationPluginId?: string;\n\n  /** The path for live stream updates for this frame */\n  channel?: string;\n\n  /** Did the query response come from the cache */\n  isCachedResponse?: boolean;\n\n  /**\n   * Optionally identify which topic the frame should be assigned to.\n   * A value specified in the response will override what the request asked for.\n   */\n  dataTopic?: DataTopic;\n\n  /**\n   * This is the raw query sent to the underlying system.  All macros and templating\n   * as been applied.  When metadata contains this value, it will be shown in the query inspector\n   */\n  executedQueryString?: string;\n\n  /**\n   * A browsable path on the datasource\n   */\n  path?: string;\n\n  /**\n   * defaults to '/'\n   */\n  pathSeparator?: string;\n\n  /** A time shift metadata indicating a result of comparison */\n  timeCompare?: {\n    diffMs: number;\n    isTimeShiftQuery: boolean;\n  };\n\n  /**\n   * Legacy data source specific, should be moved to custom\n   * */\n  searchWords?: string[]; // used by log models and loki\n  limit?: number; // used by log models and loki\n  json?: boolean; // used to keep track of old json doc values\n  instant?: boolean;\n}\n\nexport interface QueryResultMetaStat extends FieldConfig {\n  displayName: string;\n  value: number;\n}\n\n/**\n * QueryResultMetaNotice is a structure that provides user notices for query result data\n * @public\n */\nexport interface QueryResultMetaNotice {\n  /**\n   * Specify the notice severity\n   */\n  severity: 'info' | 'warning' | 'error';\n\n  /**\n   * Notice descriptive text\n   */\n  text: string;\n\n  /**\n   * An optional link that may be displayed in the UI.\n   * This value may be an absolute URL or relative to grafana root\n   */\n  link?: string;\n\n  /**\n   * Optionally suggest an appropriate tab for the panel inspector\n   */\n  inspect?: 'meta' | 'error' | 'data' | 'stats';\n}\n\n/**\n * @public\n */\nexport interface QueryResultBase {\n  /**\n   * Matches the query target refId\n   */\n  refId?: string;\n\n  /**\n   * Used by some backend data sources to communicate back info about the execution (generated sql, timing)\n   */\n  meta?: QueryResultMeta;\n}\n\nexport interface Labels {\n  [key: string]: string;\n}\n\n/** @deprecated this is a very old (pre Grafana 7 + DataFrame) representation for tabular data  */\nexport interface Column {\n  text: string; // For a Column, the 'text' is the field name\n  filterable?: boolean;\n  unit?: string;\n  custom?: Record<string, any>;\n}\n\n/** @deprecated this is a very old (pre Grafana 7 + DataFrame) representation for tabular data  */\nexport interface TableData extends QueryResultBase {\n  name?: string;\n  columns: Column[];\n  rows: any[][];\n  type?: string;\n}\n\n/** @deprecated this is a very old (pre Grafana 7 + DataFrame) representation for tabular data  */\nexport type TimeSeriesValue = number | null;\n\n/** @deprecated this is a very old (pre Grafana 7 + DataFrame) representation for tabular data  */\nexport type TimeSeriesPoints = TimeSeriesValue[][];\n\n/** @deprecated this is a very old (pre Grafana 7 + DataFrame) representation for tabular data  */\nexport interface TimeSeries extends QueryResultBase {\n  target: string;\n  /**\n   * If name is manually configured via an alias / legend pattern\n   */\n  title?: string;\n  datapoints: TimeSeriesPoints;\n  unit?: string;\n  tags?: Labels;\n}\n\nexport enum NullValueMode {\n  Null = 'null',\n  Ignore = 'connected',\n  AsZero = 'null as zero',\n}\n\n/**\n * Describes and API for exposing panel specific data configurations.\n */\nexport interface DataConfigSource {\n  configRev?: number;\n  getDataSupport: () => PanelPluginDataSupport;\n  getTransformations: () => DataTransformerConfig[] | undefined;\n  getFieldOverrideOptions: () => ApplyFieldOverrideOptions | undefined;\n  snapshotData?: DataFrameDTO[];\n}\n\ntype Truthy<T> = T extends false | '' | 0 | null | undefined ? never : T;\nexport const isTruthy = <T>(value: T): value is Truthy<T> => Boolean(value);\n\n/**\n * Serves no runtime purpose - only used to make typescript check a value has been correctly\n * narrowed to an object\n */\nfunction identityObject(value: object): object {\n  return value;\n}\n\n/**\n * Utility type predicate to check if a value is typeof object, but excludes \"null\".\n *\n * We normally discourage the use of type predicates in favor of just inline typescript narrowing,\n * but this is a special case to handle null annoyingly being typeof object\n */\nexport function isObject(value: unknown): value is object {\n  if (typeof value === 'object' && value !== null) {\n    identityObject(value);\n\n    return true;\n  }\n\n  return false;\n}\n","// Libraries\nimport { isNumber } from 'lodash';\n\nimport { NullValueMode, Field, FieldCalcs, FieldType } from '../types/index';\nimport { Registry, RegistryItem } from '../utils/Registry';\n\nexport enum ReducerID {\n  sum = 'sum',\n  max = 'max',\n  min = 'min',\n  logmin = 'logmin',\n  mean = 'mean',\n  variance = 'variance',\n  stdDev = 'stdDev',\n  last = 'last',\n  first = 'first',\n  count = 'count',\n  range = 'range',\n  diff = 'diff',\n  diffperc = 'diffperc',\n  delta = 'delta',\n  step = 'step',\n  firstNotNull = 'firstNotNull',\n  lastNotNull = 'lastNotNull',\n  changeCount = 'changeCount',\n  distinctCount = 'distinctCount',\n  allIsZero = 'allIsZero',\n  allIsNull = 'allIsNull',\n  allValues = 'allValues',\n  uniqueValues = 'uniqueValues',\n}\n\nexport function isReducerID(id: string): id is ReducerID {\n  return Object.keys(ReducerID).includes(id);\n}\n\n// Internal function\ntype FieldReducer = (field: Field, ignoreNulls: boolean, nullAsZero: boolean) => FieldCalcs;\n\nexport interface FieldReducerInfo extends RegistryItem {\n  // Internal details\n  emptyInputResult?: unknown; // typically null, but some things like 'count' & 'sum' should be zero\n  standard: boolean; // The most common stats can all be calculated in a single pass\n  reduce?: FieldReducer;\n}\n\ninterface ReduceFieldOptions {\n  field: Field;\n  reducers: string[]; // The stats to calculate\n}\n\n/**\n * @returns an object with a key for each selected stat\n * NOTE: This will also modify the 'field.state' object,\n * leaving values in a cache until cleared.\n */\nexport function reduceField(options: ReduceFieldOptions): FieldCalcs {\n  const { field, reducers } = options;\n\n  if (!field || !reducers || reducers.length < 1) {\n    return {};\n  }\n\n  if (field.state?.calcs) {\n    // Find the values we need to calculate\n    const missing: string[] = [];\n    for (const s of reducers) {\n      if (!field.state.calcs.hasOwnProperty(s)) {\n        missing.push(s);\n      }\n    }\n    if (missing.length < 1) {\n      return {\n        ...field.state.calcs,\n      };\n    }\n  }\n  if (!field.state) {\n    field.state = {};\n  }\n\n  const queue = fieldReducers.list(reducers);\n\n  // Return early for empty series\n  // This lets the concrete implementations assume at least one row\n  const data = field.values;\n  if (data.length < 1) {\n    const calcs: FieldCalcs = { ...field.state.calcs };\n    for (const reducer of queue) {\n      calcs[reducer.id] = reducer.emptyInputResult !== null ? reducer.emptyInputResult : null;\n    }\n    return (field.state.calcs = calcs);\n  }\n\n  // Default to Ignore for nullValueMode.\n  const { nullValueMode = NullValueMode.Ignore } = field.config;\n\n  const ignoreNulls = nullValueMode === NullValueMode.Ignore;\n  const nullAsZero = nullValueMode === NullValueMode.AsZero;\n\n  // Avoid calculating all the standard stats if possible\n  if (queue.length === 1 && queue[0].reduce) {\n    const values = queue[0].reduce(field, ignoreNulls, nullAsZero);\n    field.state.calcs = {\n      ...field.state.calcs,\n      ...values,\n    };\n    return values;\n  }\n\n  // For now everything can use the standard stats\n  let values = doStandardCalcs(field, ignoreNulls, nullAsZero);\n\n  for (const reducer of queue) {\n    if (!values.hasOwnProperty(reducer.id) && reducer.reduce) {\n      values = {\n        ...values,\n        ...reducer.reduce(field, ignoreNulls, nullAsZero),\n      };\n    }\n  }\n\n  field.state.calcs = {\n    ...field.state.calcs,\n    ...values,\n  };\n  return values;\n}\n\n// ------------------------------------------------------------------------------\n//\n//  No Exported symbols below here.\n//\n// ------------------------------------------------------------------------------\n\nexport const fieldReducers = new Registry<FieldReducerInfo>(() => [\n  {\n    id: ReducerID.lastNotNull,\n    name: 'Last *',\n    description: 'Last non-null value (also excludes NaNs)',\n    standard: true,\n    aliasIds: ['current'],\n    reduce: calculateLastNotNull,\n  },\n  {\n    id: ReducerID.last,\n    name: 'Last',\n    description: 'Last value',\n    standard: true,\n    reduce: calculateLast,\n  },\n  {\n    id: ReducerID.firstNotNull,\n    name: 'First *',\n    description: 'First non-null value (also excludes NaNs)',\n    standard: true,\n    reduce: calculateFirstNotNull,\n  },\n  { id: ReducerID.first, name: 'First', description: 'First Value', standard: true, reduce: calculateFirst },\n  { id: ReducerID.min, name: 'Min', description: 'Minimum Value', standard: true },\n  { id: ReducerID.max, name: 'Max', description: 'Maximum Value', standard: true },\n  { id: ReducerID.mean, name: 'Mean', description: 'Average Value', standard: true, aliasIds: ['avg'] },\n  {\n    id: ReducerID.variance,\n    name: 'Variance',\n    description: 'Variance of all values in a field',\n    standard: false,\n    reduce: calculateStdDev,\n  },\n  {\n    id: ReducerID.stdDev,\n    name: 'StdDev',\n    description: 'Standard deviation of all values in a field',\n    standard: false,\n    reduce: calculateStdDev,\n  },\n  {\n    id: ReducerID.sum,\n    name: 'Total',\n    description: 'The sum of all values',\n    emptyInputResult: 0,\n    standard: true,\n    aliasIds: ['total'],\n  },\n  {\n    id: ReducerID.count,\n    name: 'Count',\n    description: 'Number of values in response',\n    emptyInputResult: 0,\n    standard: true,\n  },\n  {\n    id: ReducerID.range,\n    name: 'Range',\n    description: 'Difference between minimum and maximum values',\n    standard: true,\n  },\n  {\n    id: ReducerID.delta,\n    name: 'Delta',\n    description: 'Cumulative change in value',\n    standard: true,\n  },\n  {\n    id: ReducerID.step,\n    name: 'Step',\n    description: 'Minimum interval between values',\n    standard: true,\n  },\n  {\n    id: ReducerID.diff,\n    name: 'Difference',\n    description: 'Difference between first and last values',\n    standard: true,\n  },\n  {\n    id: ReducerID.logmin,\n    name: 'Min (above zero)',\n    description: 'Used for log min scale',\n    standard: true,\n  },\n  {\n    id: ReducerID.allIsZero,\n    name: 'All Zeros',\n    description: 'All values are zero',\n    emptyInputResult: false,\n    standard: true,\n  },\n  {\n    id: ReducerID.allIsNull,\n    name: 'All Nulls',\n    description: 'All values are null',\n    emptyInputResult: true,\n    standard: true,\n  },\n  {\n    id: ReducerID.changeCount,\n    name: 'Change Count',\n    description: 'Number of times the value changes',\n    standard: false,\n    reduce: calculateChangeCount,\n  },\n  {\n    id: ReducerID.distinctCount,\n    name: 'Distinct Count',\n    description: 'Number of distinct values',\n    standard: false,\n    reduce: calculateDistinctCount,\n  },\n  {\n    id: ReducerID.diffperc,\n    name: 'Difference percent',\n    description: 'Percentage difference between first and last values',\n    standard: true,\n  },\n  {\n    id: ReducerID.allValues,\n    name: 'All values',\n    description: 'Returns an array with all values',\n    standard: false,\n    reduce: (field: Field) => ({ allValues: [...field.values] }),\n  },\n  {\n    id: ReducerID.uniqueValues,\n    name: 'All unique values',\n    description: 'Returns an array with all unique values',\n    standard: false,\n    reduce: (field: Field) => ({\n      uniqueValues: [...new Set(field.values)],\n    }),\n  },\n]);\n\nexport function doStandardCalcs(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const calcs: FieldCalcs = {\n    sum: 0,\n    max: -Number.MAX_VALUE,\n    min: Number.MAX_VALUE,\n    logmin: Number.MAX_VALUE,\n    mean: null,\n    last: null,\n    first: null,\n    lastNotNull: null,\n    firstNotNull: null,\n    count: 0,\n    nonNullCount: 0,\n    allIsNull: true,\n    allIsZero: true,\n    range: null,\n    diff: null,\n    delta: 0,\n    step: Number.MAX_VALUE,\n    diffperc: 0,\n\n    // Just used for calculations -- not exposed as a stat\n    previousDeltaUp: true,\n  };\n\n  const data = field.values;\n\n  const isNumberField = field.type === FieldType.number || field.type === FieldType.time;\n\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data[i];\n\n    if (i === 0) {\n      calcs.first = currentValue;\n    }\n\n    calcs.last = currentValue;\n\n    if (currentValue == null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n\n    calcs.count++;\n\n    if (currentValue != null && !Number.isNaN(currentValue)) {\n      // null || undefined || NaN\n      const isFirst = calcs.firstNotNull === null;\n      if (isFirst) {\n        calcs.firstNotNull = currentValue;\n      }\n\n      if (isNumberField) {\n        calcs.sum += currentValue;\n        calcs.allIsNull = false;\n        calcs.nonNullCount++;\n\n        if (!isFirst) {\n          const step = currentValue - calcs.lastNotNull!;\n          if (calcs.step > step) {\n            calcs.step = step; // the minimum interval\n          }\n\n          if (calcs.lastNotNull! > currentValue) {\n            // counter reset\n            calcs.previousDeltaUp = false;\n            if (i === data.length - 1) {\n              // reset on last\n              calcs.delta += currentValue;\n            }\n          } else {\n            if (calcs.previousDeltaUp) {\n              calcs.delta += step; // normal increment\n            } else {\n              calcs.delta += currentValue; // account for counter reset\n            }\n            calcs.previousDeltaUp = true;\n          }\n        }\n\n        if (currentValue > calcs.max) {\n          calcs.max = currentValue;\n        }\n\n        if (currentValue < calcs.min) {\n          calcs.min = currentValue;\n        }\n\n        if (currentValue < calcs.logmin && currentValue > 0) {\n          calcs.logmin = currentValue;\n        }\n      }\n\n      if (currentValue !== 0) {\n        calcs.allIsZero = false;\n      }\n\n      calcs.lastNotNull = currentValue;\n    }\n  }\n\n  if (calcs.max === -Number.MAX_VALUE) {\n    calcs.max = null;\n  }\n\n  if (calcs.min === Number.MAX_VALUE) {\n    calcs.min = null;\n  }\n\n  if (calcs.step === Number.MAX_VALUE) {\n    calcs.step = null;\n  }\n\n  if (calcs.nonNullCount > 0) {\n    calcs.mean = calcs.sum! / calcs.nonNullCount;\n  }\n\n  if (calcs.allIsNull) {\n    calcs.allIsZero = false;\n  }\n\n  if (calcs.max !== null && calcs.min !== null) {\n    calcs.range = calcs.max - calcs.min;\n  }\n\n  if (isNumber(calcs.firstNotNull) && isNumber(calcs.lastNotNull)) {\n    calcs.diff = calcs.lastNotNull - calcs.firstNotNull;\n  }\n\n  if (isNumber(calcs.firstNotNull) && isNumber(calcs.diff)) {\n    calcs.diffperc = calcs.diff / calcs.firstNotNull;\n  }\n  return calcs;\n}\n\nfunction calculateFirst(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  return { first: field.values[0] };\n}\n\nfunction calculateFirstNotNull(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  for (let idx = 0; idx < data.length; idx++) {\n    const v = data[idx];\n    if (v != null && !Number.isNaN(v)) {\n      return { firstNotNull: v };\n    }\n  }\n  return { firstNotNull: null };\n}\n\nfunction calculateLast(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  return { last: data[data.length - 1] };\n}\n\nfunction calculateLastNotNull(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  let idx = data.length - 1;\n  while (idx >= 0) {\n    const v = data[idx--];\n    if (v != null && !Number.isNaN(v)) {\n      return { lastNotNull: v };\n    }\n  }\n  return { lastNotNull: null };\n}\n\n/** Calculates standard deviation and variance */\nfunction calculateStdDev(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  // Only support number fields\n  if (!(field.type === FieldType.number || field.type === FieldType.time)) {\n    return { variance: 0, stdDev: 0 };\n  }\n\n  let squareSum = 0;\n  let runningMean = 0;\n  let runningNonNullCount = 0;\n  const data = field.values;\n  for (let i = 0; i < data.length; i++) {\n    const currentValue = data[i];\n    if (currentValue != null) {\n      runningNonNullCount++;\n      let _oldMean = runningMean;\n      runningMean += (currentValue - _oldMean) / runningNonNullCount;\n      squareSum += (currentValue - _oldMean) * (currentValue - runningMean);\n    }\n  }\n  if (runningNonNullCount > 0) {\n    const variance = squareSum / runningNonNullCount;\n    return { variance, stdDev: Math.sqrt(variance) };\n  }\n  return { variance: 0, stdDev: 0 };\n}\n\nfunction calculateChangeCount(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  let count = 0;\n  let first = true;\n  let last = null;\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data[i];\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n    if (!first && last !== currentValue) {\n      count++;\n    }\n    first = false;\n    last = currentValue;\n  }\n\n  return { changeCount: count };\n}\n\nfunction calculateDistinctCount(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  const distinct = new Set();\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data[i];\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n    distinct.add(currentValue);\n  }\n  return { distinctCount: distinct.size };\n}\n","import { ComparisonOperation } from '@grafana/schema';\n\n/**\n * Compare two values\n *\n * @internal -- not yet exported in `@grafana/data`\n */\nexport function compareValues(\n  left: string | number | boolean | null | undefined,\n  op: ComparisonOperation,\n  right: string | number | boolean | null | undefined\n) {\n  // Normalize null|undefined values\n  if (left == null || right == null) {\n    if (left == null) {\n      left = 'null';\n    }\n    if (right == null) {\n      right = 'null';\n    }\n    if (op === ComparisonOperation.GTE || op === ComparisonOperation.LTE) {\n      op = ComparisonOperation.EQ; // check for equality\n    }\n  }\n\n  switch (op) {\n    case ComparisonOperation.EQ:\n      return `${left}` === `${right}`;\n    case ComparisonOperation.NEQ:\n      return `${left}` !== `${right}`;\n    case ComparisonOperation.GT:\n      return left > right;\n    case ComparisonOperation.GTE:\n      return left >= right;\n    case ComparisonOperation.LT:\n      return left < right;\n    case ComparisonOperation.LTE:\n      return left <= right;\n    default:\n      return false;\n  }\n}\n","import { ComparisonOperation } from '@grafana/schema';\n\nimport { Field, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\nimport { reduceField, ReducerID } from '../fieldReducer';\n\nimport { compareValues } from './compareValues';\nimport { FieldMatcherID } from './ids';\n\nexport interface FieldValueMatcherConfig {\n  reducer: ReducerID;\n  op?: ComparisonOperation;\n  value?: number; // or string?\n}\n\n// This should move to a utility function on the reducer registry\nfunction isBooleanReducer(r: ReducerID) {\n  return r === ReducerID.allIsNull || r === ReducerID.allIsZero;\n}\n\nexport const fieldValueMatcherInfo: FieldMatcherInfo<FieldValueMatcherConfig> = {\n  id: FieldMatcherID.byValue,\n  name: 'By value (reducer)',\n  description: 'Reduce a field to a single value and test for inclusion',\n\n  // This is added to overrides by default\n  defaultOptions: {\n    reducer: ReducerID.allIsZero,\n    op: ComparisonOperation.GTE,\n    value: 0,\n  },\n\n  get: (props) => {\n    if (!props || !props.reducer) {\n      return () => false;\n    }\n    let { reducer, op, value } = props;\n    const isBoolean = isBooleanReducer(reducer);\n    if (!op) {\n      op = ComparisonOperation.EQ;\n    }\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      const left = reduceField({\n        field,\n        reducers: [reducer],\n      })[reducer];\n\n      if (isBoolean) {\n        return Boolean(left); // boolean\n      }\n      return compareValues(left, op!, value);\n    };\n  },\n\n  getOptionsDisplayText: (props) => {\n    return `By value (${props.reducer})`;\n  },\n};\n","import { isEqual } from 'lodash';\n\nimport { DataFrame, Field, TIME_SERIES_VALUE_FIELD_NAME, FieldType, TIME_SERIES_TIME_FIELD_NAME } from '../types';\nimport { formatLabels } from '../utils/labels';\n\n/**\n * Get an appropriate display title\n */\nexport function getFrameDisplayName(frame: DataFrame, index?: number) {\n  if (frame.name) {\n    return frame.name;\n  }\n\n  const valueFieldNames: string[] = [];\n  for (const field of frame.fields) {\n    if (field.type === FieldType.time) {\n      continue;\n    }\n\n    // No point in doing more\n    if (valueFieldNames.length > 1) {\n      break;\n    }\n\n    valueFieldNames.push(getFieldDisplayName(field, frame));\n  }\n\n  // If the frame has a single value field then use the name of that field as the frame name\n  if (valueFieldNames.length === 1) {\n    return valueFieldNames[0];\n  }\n\n  // list all the\n  if (index === undefined && frame.fields.length > 0) {\n    return frame.fields\n      .filter((f) => f.type !== FieldType.time)\n      .map((f) => getFieldDisplayName(f, frame))\n      .join(', ');\n  }\n\n  if (frame.refId) {\n    return `Series (${frame.refId})`;\n  }\n\n  return `Series (${index})`;\n}\n\nexport function cacheFieldDisplayNames(frames: DataFrame[]) {\n  frames.forEach((frame) => {\n    frame.fields.forEach((field) => {\n      getFieldDisplayName(field, frame, frames);\n    });\n  });\n}\n\nexport function getFieldDisplayName(field: Field, frame?: DataFrame, allFrames?: DataFrame[]): string {\n  const existingTitle = field.state?.displayName;\n  const multipleFrames = Boolean(allFrames && allFrames.length > 1);\n\n  if (existingTitle && multipleFrames === field.state?.multipleFrames) {\n    return existingTitle;\n  }\n\n  const displayName = calculateFieldDisplayName(field, frame, allFrames);\n  field.state = field.state || {};\n  field.state.displayName = displayName;\n  field.state.multipleFrames = multipleFrames;\n\n  return displayName;\n}\n\n/**\n * Get an appropriate display name. If the 'displayName' field config is set, use that.\n */\nexport function calculateFieldDisplayName(field: Field, frame?: DataFrame, allFrames?: DataFrame[]): string {\n  const hasConfigTitle = field.config?.displayName && field.config?.displayName.length;\n  const isComparisonSeries = Boolean(frame?.meta?.timeCompare?.isTimeShiftQuery);\n  let displayName = hasConfigTitle ? field.config!.displayName! : field.name;\n\n  if (hasConfigTitle) {\n    return isComparisonSeries ? `${displayName} (comparison)` : displayName;\n  }\n\n  if (frame && field.config?.displayNameFromDS) {\n    return isComparisonSeries ? `${field.config.displayNameFromDS} (comparison)` : field.config.displayNameFromDS;\n  }\n\n  // This is an ugly exception for time field\n  // For time series we should normally treat time field with same name\n  // But in case it has a join source we should handle it as normal field\n  if (field.type === FieldType.time && !field.labels) {\n    return displayName ?? TIME_SERIES_TIME_FIELD_NAME;\n  }\n\n  let parts: string[] = [];\n  let frameNamesDiffer = false;\n\n  if (allFrames && allFrames.length > 1) {\n    for (let i = 1; i < allFrames.length; i++) {\n      const frame = allFrames[i];\n      if (frame.name !== allFrames[i - 1].name) {\n        frameNamesDiffer = true;\n        break;\n      }\n    }\n  }\n\n  let frameNameAdded = false;\n  let labelsAdded = false;\n\n  if (frameNamesDiffer && frame?.name) {\n    parts.push(frame.name);\n    frameNameAdded = true;\n  }\n\n  if (field.name && field.name !== TIME_SERIES_VALUE_FIELD_NAME) {\n    parts.push(field.name);\n  }\n\n  if (field.labels && frame) {\n    let singleLabelName = getSingleLabelName(allFrames ?? [frame]);\n\n    if (!singleLabelName) {\n      let allLabels = formatLabels(field.labels);\n      if (allLabels) {\n        parts.push(allLabels);\n        labelsAdded = true;\n      }\n    } else if (field.labels[singleLabelName]) {\n      parts.push(field.labels[singleLabelName]);\n      labelsAdded = true;\n    }\n  }\n\n  // if we have not added frame name and no labels, and field name = Value, we should add frame name\n  if (frame && !frameNameAdded && !labelsAdded && field.name === TIME_SERIES_VALUE_FIELD_NAME) {\n    if (frame.name && frame.name.length > 0) {\n      parts.push(frame.name);\n      frameNameAdded = true;\n    }\n  }\n\n  if (parts.length) {\n    displayName = parts.join(' ');\n  } else if (field.name) {\n    displayName = field.name;\n  } else {\n    displayName = TIME_SERIES_VALUE_FIELD_NAME;\n  }\n\n  // Ensure unique field name\n  if (displayName === field.name) {\n    displayName = getUniqueFieldName(field, frame);\n  }\n\n  if (isComparisonSeries) {\n    displayName = `${displayName} (comparison)`;\n  }\n  return displayName;\n}\n\nexport function getUniqueFieldName(field: Field, frame?: DataFrame) {\n  let dupeCount = 0;\n  let foundSelf = false;\n\n  if (frame) {\n    for (let i = 0; i < frame.fields.length; i++) {\n      const otherField = frame.fields[i];\n\n      if (isEqual(field, otherField)) {\n        foundSelf = true;\n\n        if (dupeCount > 0) {\n          dupeCount++;\n          break;\n        }\n      } else if (field.name === otherField.name) {\n        dupeCount++;\n\n        if (foundSelf) {\n          break;\n        }\n      }\n    }\n  }\n\n  if (dupeCount) {\n    return `${field.name} ${dupeCount}`;\n  }\n\n  return field.name;\n}\n\n/**\n * Checks all data frames and return name of label if there is only one label name in all frames\n */\nfunction getSingleLabelName(frames: DataFrame[]): string | null {\n  let singleName: string | null = null;\n\n  for (let i = 0; i < frames.length; i++) {\n    const frame = frames[i];\n\n    for (const field of frame.fields) {\n      if (!field.labels) {\n        continue;\n      }\n\n      // yes this should be in!\n      for (const labelKey in field.labels) {\n        if (singleName === null) {\n          singleName = labelKey;\n        } else if (labelKey !== singleName) {\n          return null;\n        }\n      }\n    }\n  }\n\n  return singleName;\n}\n","import { camelCase } from 'lodash';\n\nconst specialChars = ['(', '[', '{', '}', ']', ')', '\\\\', '|', '*', '+', '-', '.', '?', '<', '>', '#', '&', '^', '$'];\nconst specialMatcher = '([\\\\' + specialChars.join('\\\\') + '])';\nconst specialCharEscape = new RegExp(specialMatcher, 'g');\nconst specialCharUnescape = new RegExp('(\\\\\\\\)' + specialMatcher, 'g');\n\nexport function escapeStringForRegex(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  return value.replace(specialCharEscape, '\\\\$1');\n}\n\nexport function unEscapeStringFromRegex(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  return value.replace(specialCharUnescape, '$2');\n}\n\nexport function stringStartsAsRegEx(str: string): boolean {\n  if (!str) {\n    return false;\n  }\n\n  return str[0] === '/';\n}\n\nexport function stringToJsRegex(str: string): RegExp {\n  if (!stringStartsAsRegEx(str)) {\n    return new RegExp(`^${str}$`);\n  }\n\n  const match = str.match(new RegExp('^/(.*?)/(g?i?m?y?s?)$'));\n\n  if (!match) {\n    throw new Error(`'${str}' is not a valid regular expression.`);\n  }\n\n  return new RegExp(match[1], match[2]);\n}\n\nexport function stringToMs(str: string): number {\n  if (!str) {\n    return 0;\n  }\n\n  const nr = parseInt(str, 10);\n  const unit = str.slice(String(nr).length);\n  const s = 1000;\n  const m = s * 60;\n  const h = m * 60;\n  const d = h * 24;\n\n  switch (unit) {\n    case 's':\n      return nr * s;\n    case 'm':\n      return nr * m;\n    case 'h':\n      return nr * h;\n    case 'd':\n      return nr * d;\n    default:\n      if (!unit) {\n        return isNaN(nr) ? 0 : nr;\n      }\n      throw new Error('Not supported unit: ' + unit);\n  }\n}\n\nexport function toNumberString(value: number | undefined | null): string {\n  if (value !== null && value !== undefined && Number.isFinite(value)) {\n    return value.toString();\n  }\n  return '';\n}\n\nexport function toIntegerOrUndefined(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const v = parseInt(value, 10);\n  return isNaN(v) ? undefined : v;\n}\n\nexport function toFloatOrUndefined(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const v = parseFloat(value);\n  return isNaN(v) ? undefined : v;\n}\n\nexport function toPascalCase(string: string) {\n  const str = camelCase(string);\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function escapeRegex(value: string): string {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n}\n","import { getFieldDisplayName } from '../../field/fieldState';\nimport { stringToJsRegex } from '../../text/string';\nimport { DataFrame, Field, FieldType, TIME_SERIES_VALUE_FIELD_NAME } from '../../types/dataFrame';\nimport { FieldMatcher, FieldMatcherInfo, FrameMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID, FrameMatcherID } from './ids';\n\nexport interface RegexpOrNamesMatcherOptions {\n  pattern?: string;\n  names?: string[];\n  variable?: string;\n}\n\n/**\n * Mode to be able to toggle if the names matcher should match fields in provided\n * list or all except provided names.\n * @public\n */\nexport enum ByNamesMatcherMode {\n  exclude = 'exclude',\n  include = 'include',\n}\n\n/**\n * Options to instruct the by names matcher to either match all fields in given list\n * or all except the fields in the list.\n * @public\n */\nexport interface ByNamesMatcherOptions {\n  mode?: ByNamesMatcherMode;\n  names?: string[];\n  readOnly?: boolean;\n  prefix?: string;\n}\n\n// General Field matcher\nconst fieldNameMatcher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byName,\n  name: 'Field Name',\n  description: 'match the field name',\n  defaultOptions: '',\n\n  get: (name: string): FieldMatcher => {\n    const uniqueNames = new Set<string>([name] ?? []);\n\n    const fallback = fieldNameFallback(uniqueNames);\n\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return (\n        name === field.name ||\n        name === getFieldDisplayName(field, frame, allFrames) ||\n        Boolean(fallback && fallback(field, frame, allFrames))\n      );\n    };\n  },\n\n  getOptionsDisplayText: (name: string) => {\n    return `Field name: ${name}`;\n  },\n};\n\nconst multipleFieldNamesMatcher: FieldMatcherInfo<ByNamesMatcherOptions> = {\n  id: FieldMatcherID.byNames,\n  name: 'Field Names',\n  description: 'match any of the given the field names',\n  defaultOptions: {\n    mode: ByNamesMatcherMode.include,\n    names: [],\n  },\n\n  get: (options: ByNamesMatcherOptions): FieldMatcher => {\n    const { names, mode = ByNamesMatcherMode.include } = options;\n    const uniqueNames = new Set<string>(names ?? []);\n\n    const fallback = fieldNameFallback(uniqueNames);\n\n    const matcher = (field: Field, frame: DataFrame, frames: DataFrame[]) => {\n      return (\n        uniqueNames.has(field.name) ||\n        uniqueNames.has(getFieldDisplayName(field, frame, frames)) ||\n        Boolean(fallback && fallback(field, frame, frames))\n      );\n    };\n\n    if (mode === ByNamesMatcherMode.exclude) {\n      return (field: Field, frame: DataFrame, frames: DataFrame[]) => {\n        return !matcher(field, frame, frames);\n      };\n    }\n    return matcher;\n  },\n\n  getOptionsDisplayText: (options: ByNamesMatcherOptions): string => {\n    const { names, mode } = options;\n    const displayText = (names ?? []).join(', ');\n    if (mode === ByNamesMatcherMode.exclude) {\n      return `All except: ${displayText}`;\n    }\n    return `All of: ${displayText}`;\n  },\n};\n\n// In an effort to support migrating to a consistent data contract, the\n// naming conventions need to get normalized. However, many existing setups\n// exist that would no longer match names if that changes.  This injects\n// fallback logic when the data frame has not type version specified\nexport function fieldNameFallback(fields: Set<string>) {\n  let fallback: FieldMatcher | undefined = undefined;\n\n  // grafana-data does not have access to runtime so we are accessing the window object\n  // to get access to the feature toggle\n  // eslint-disable-next-line\n  const useMatcherFallback = (window as any)?.grafanaBootData?.settings?.featureToggles?.dataplaneFrontendFallback;\n  if (useMatcherFallback) {\n    if (fields.has(TIME_SERIES_VALUE_FIELD_NAME)) {\n      fallback = (field: Field, frame: DataFrame) => {\n        return (\n          Boolean(field.labels) && // Value was reasonable when the name was set in labels or on the frame\n          field.labels?.__name__ === field.name\n        );\n      };\n    } else if (fields.has('Time') || fields.has('time')) {\n      fallback = (field: Field, frame: DataFrame) => {\n        return frame.meta?.typeVersion == null && field.type === FieldType.time;\n      };\n    }\n  }\n\n  return fallback;\n}\n\nconst regexpFieldNameMatcher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byRegexp,\n  name: 'Field Name by Regexp',\n  description: 'match the field name by a given regexp pattern',\n  defaultOptions: '/.*/',\n\n  get: (pattern: string): FieldMatcher => {\n    const regexp = patternToRegex(pattern);\n\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      const displayName = getFieldDisplayName(field, frame, allFrames);\n      return !!regexp && regexp.test(displayName);\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string): string => {\n    return `Field name by pattern: ${pattern}`;\n  },\n};\n\n/**\n * Field matcher that will match all fields that exists in a\n * data frame with configured refId.\n * @public\n */\nconst fieldsInFrameMatcher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byFrameRefID,\n  name: 'Fields by frame refId',\n  description: 'match all fields returned in data frame with refId.',\n  defaultOptions: '',\n\n  get: (refId: string): FieldMatcher => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return frame.refId === refId;\n    };\n  },\n\n  getOptionsDisplayText: (refId: string): string => {\n    return `Math all fields returned by query with reference ID: ${refId}`;\n  },\n};\n\nconst regexpOrMultipleNamesMatcher: FieldMatcherInfo<RegexpOrNamesMatcherOptions> = {\n  id: FieldMatcherID.byRegexpOrNames,\n  name: 'Field Name by Regexp or Names',\n  description: 'match the field name by a given regexp pattern or given names',\n  defaultOptions: {\n    pattern: '/.*/',\n    names: [],\n  },\n\n  get: (options: RegexpOrNamesMatcherOptions): FieldMatcher => {\n    const regexpMatcher = regexpFieldNameMatcher.get(options?.pattern || '');\n    const namesMatcher = multipleFieldNamesMatcher.get({\n      mode: ByNamesMatcherMode.include,\n      names: options?.names ?? [],\n    });\n\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return namesMatcher(field, frame, allFrames) || regexpMatcher(field, frame, allFrames);\n    };\n  },\n\n  getOptionsDisplayText: (options: RegexpOrNamesMatcherOptions): string => {\n    const pattern = options?.pattern ?? '';\n    const names = options?.names?.join(',') ?? '';\n    return `Field name by pattern: ${pattern} or names: ${names}`;\n  },\n};\n\nconst patternToRegex = (pattern?: string): RegExp | undefined => {\n  if (!pattern) {\n    return undefined;\n  }\n\n  try {\n    return stringToJsRegex(pattern);\n  } catch (error) {\n    console.error(error);\n    return undefined;\n  }\n};\n\n// General Frame matcher\nconst frameNameMatcher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byName,\n  name: 'Frame Name',\n  description: 'match the frame name',\n  defaultOptions: '/.*/',\n\n  get: (pattern: string) => {\n    const regex = stringToJsRegex(pattern);\n    return (frame: DataFrame) => {\n      return regex.test(frame.name || '');\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `Frame name: ${pattern}`;\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getFieldNameMatchers(): FieldMatcherInfo[] {\n  return [\n    fieldNameMatcher,\n    regexpFieldNameMatcher,\n    multipleFieldNamesMatcher,\n    regexpOrMultipleNamesMatcher,\n    fieldsInFrameMatcher,\n  ];\n}\n\nexport function getFrameNameMatchers(): FrameMatcherInfo[] {\n  return [frameNameMatcher];\n}\n","import { Field, DataFrame, FieldType } from '../../types/dataFrame';\nimport { FieldMatcherInfo, MatcherConfig, FrameMatcherInfo } from '../../types/transformations';\nimport { getFieldMatcher, fieldMatchers, getFrameMatchers, frameMatchers } from '../matchers';\n\nimport { MatcherID } from './ids';\n\nconst anyFieldMatcher: FieldMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.anyMatch,\n  name: 'Any',\n  description: 'Any child matches (OR)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFieldMatcher(option);\n    });\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      for (const child of children) {\n        if (child(field, frame, allFrames)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' OR ';\n      }\n      const matcher = fieldMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst anyFrameMatcher: FrameMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.anyMatch,\n  name: 'Any',\n  description: 'Any child matches (OR)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFrameMatchers(option);\n    });\n    return (frame: DataFrame) => {\n      for (const child of children) {\n        if (child(frame)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' OR ';\n      }\n      const matcher = frameMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst allFieldsMatcher: FieldMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.allMatch,\n  name: 'All',\n  description: 'Everything matches (AND)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFieldMatcher(option);\n    });\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      for (const child of children) {\n        if (!child(field, frame, allFrames)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' AND ';\n      }\n      const matcher = fieldMatchers.get(sub.id); // Ugho what about frame\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst allFramesMatcher: FrameMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.allMatch,\n  name: 'All',\n  description: 'Everything matches (AND)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map((option) => {\n      return getFrameMatchers(option);\n    });\n    return (frame: DataFrame) => {\n      for (const child of children) {\n        if (!child(frame)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' AND ';\n      }\n      const matcher = frameMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst notFieldMatcher: FieldMatcherInfo<MatcherConfig> = {\n  id: MatcherID.invertMatch,\n  name: 'NOT',\n  description: 'Inverts other matchers',\n  excludeFromPicker: true,\n\n  get: (option: MatcherConfig) => {\n    const check = getFieldMatcher(option);\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return !check(field, frame, allFrames);\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig) => {\n    const matcher = fieldMatchers.get(options.id);\n    const text = matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(options.options) : matcher.name;\n    return 'NOT ' + text;\n  },\n};\n\nconst notFrameMatcher: FrameMatcherInfo<MatcherConfig> = {\n  id: MatcherID.invertMatch,\n  name: 'NOT',\n  description: 'Inverts other matchers',\n  excludeFromPicker: true,\n\n  get: (option: MatcherConfig) => {\n    const check = getFrameMatchers(option);\n    return (frame: DataFrame) => {\n      return !check(frame);\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig) => {\n    const matcher = frameMatchers.get(options.id);\n    const text = matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(options.options) : matcher.name;\n    return 'NOT ' + text;\n  },\n};\n\nexport const alwaysFieldMatcher = (field: Field) => {\n  return true;\n};\n\nexport const alwaysFrameMatcher = (frame: DataFrame) => {\n  return true;\n};\n\nexport const neverFieldMatcher = (field: Field) => {\n  return false;\n};\n\nexport const notTimeFieldMatcher = (field: Field) => {\n  return field.type !== FieldType.time;\n};\n\nexport const neverFrameMatcher = (frame: DataFrame) => {\n  return false;\n};\n\nconst alwaysFieldMatcherInfo: FieldMatcherInfo = {\n  id: MatcherID.alwaysMatch,\n  name: 'All Fields',\n  description: 'Always Match',\n\n  get: (_option) => {\n    return alwaysFieldMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Always';\n  },\n};\n\nconst alwaysFrameMatcherInfo: FrameMatcherInfo = {\n  id: MatcherID.alwaysMatch,\n  name: 'All Frames',\n  description: 'Always Match',\n\n  get: (_option) => {\n    return alwaysFrameMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Always';\n  },\n};\n\nconst neverFieldMatcherInfo: FieldMatcherInfo = {\n  id: MatcherID.neverMatch,\n  name: 'No Fields',\n  description: 'Never Match',\n  excludeFromPicker: true,\n\n  get: (_option) => {\n    return neverFieldMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Never';\n  },\n};\n\nconst neverFrameMatcherInfo: FrameMatcherInfo = {\n  id: MatcherID.neverMatch,\n  name: 'No Frames',\n  description: 'Never Match',\n\n  get: (_option) => {\n    return neverFrameMatcher;\n  },\n\n  getOptionsDisplayText: (_options) => {\n    return 'Never';\n  },\n};\n\nexport function getFieldPredicateMatchers(): FieldMatcherInfo[] {\n  return [anyFieldMatcher, allFieldsMatcher, notFieldMatcher, alwaysFieldMatcherInfo, neverFieldMatcherInfo];\n}\n\nexport function getFramePredicateMatchers(): FrameMatcherInfo[] {\n  return [anyFrameMatcher, allFramesMatcher, notFrameMatcher, alwaysFrameMatcherInfo, neverFrameMatcherInfo];\n}\n","import { stringToJsRegex } from '../../text';\nimport { DataFrame } from '../../types/dataFrame';\nimport { FrameMatcherInfo } from '../../types/transformations';\n\nimport { FrameMatcherID } from './ids';\n\n// General Field matcher\nconst refIdMatcher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byRefId,\n  name: 'Query refId',\n  description: 'match the refId',\n  defaultOptions: 'A',\n\n  get: (pattern: string) => {\n    const regex = stringToJsRegex(pattern);\n    return (frame: DataFrame) => {\n      return regex.test(frame.refId || '');\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `RefID: ${pattern}`;\n  },\n};\n\nexport function getRefIdMatchers(): FrameMatcherInfo[] {\n  return [refIdMatcher];\n}\n","import { Field, FieldType, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\n\nimport { FieldMatcherID } from './ids';\n\nconst firstFieldMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.first,\n  name: 'First Field',\n  description: 'The first field in the frame',\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return field === frame.fields[0];\n    };\n  },\n\n  getOptionsDisplayText: () => {\n    return `First field`;\n  },\n};\n\nconst firstTimeFieldMatcher: FieldMatcherInfo = {\n  id: FieldMatcherID.firstTimeField,\n  name: 'First time field',\n  description: 'The first field of type time in a frame',\n\n  get: (type: FieldType) => {\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      return field.type === FieldType.time && field === frame.fields.find((f) => f.type === FieldType.time);\n    };\n  },\n\n  getOptionsDisplayText: () => {\n    return `First time field`;\n  },\n};\n\n/**\n * Registry Initialization\n */\nexport function getSimpleFieldMatchers(): FieldMatcherInfo[] {\n  return [firstFieldMatcher, firstTimeFieldMatcher];\n}\n","import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst isEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.equal,\n  name: 'Is equal',\n  description: 'Match where value for given field is equal to options value.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      // eslint-disable-next-line eqeqeq\n      return value == options.value;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '' }),\n};\n\nconst isNotEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.notEqual,\n  name: 'Is not equal',\n  description: 'Match where value for given field is not equal to options value.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      // eslint-disable-next-line eqeqeq\n      return value != options.value;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is not null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '' }),\n};\n\nexport const getEqualValueMatchers = (): ValueMatcherInfo[] => [isEqualValueMatcher, isNotEqualValueMatcher];\n","import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { ValueMatcherOptions } from './types';\n\nconst isNullValueMatcher: ValueMatcherInfo<ValueMatcherOptions> = {\n  id: ValueMatcherID.isNull,\n  name: 'Is null',\n  description: 'Match where value for given field is null.',\n  get: () => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      return value == null;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({}),\n};\n\nconst isNotNullValueMatcher: ValueMatcherInfo<ValueMatcherOptions> = {\n  id: ValueMatcherID.isNotNull,\n  name: 'Is not null',\n  description: 'Match where value for given field is not null.',\n  get: () => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      return value != null;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is not null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({}),\n};\n\nexport const getNullValueMatchers = (): ValueMatcherInfo[] => [isNullValueMatcher, isNotNullValueMatcher];\n","import { Field, FieldType } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst isGreaterValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.greater,\n  name: 'Is greater',\n  description: 'Match when field value is greater than option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value > options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is greater than: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nconst isGreaterOrEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.greaterOrEqual,\n  name: 'Is greater or equal',\n  description: 'Match when field value is greater than or equal to option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value >= options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is greater than or equal to: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nconst isLowerValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.lower,\n  name: 'Is lower',\n  description: 'Match when field value is lower than option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value < options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is lower than: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nconst isLowerOrEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.lowerOrEqual,\n  name: 'Is lower or equal',\n  description: 'Match when field value is lower or equal than option.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value <= options.value;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is lower or equal than: ${options.value}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ value: 0 }),\n};\n\nexport const getNumericValueMatchers = (): ValueMatcherInfo[] => [\n  isGreaterValueMatcher,\n  isGreaterOrEqualValueMatcher,\n  isLowerValueMatcher,\n  isLowerOrEqualValueMatcher,\n];\n","import { Field, FieldType } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { RangeValueMatcherOptions } from './types';\n\nconst isBetweenValueMatcher: ValueMatcherInfo<RangeValueMatcherOptions> = {\n  id: ValueMatcherID.between,\n  name: 'Is between',\n  description: 'Match when field value is between given option values.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      if (isNaN(value)) {\n        return false;\n      }\n      return value > options.from && value < options.to;\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is between ${options.from} and ${options.to}.`;\n  },\n  isApplicable: (field) => field.type === FieldType.number,\n  getDefaultOptions: () => ({ from: 0, to: 100 }),\n};\n\nexport const getRangeValueMatchers = (): ValueMatcherInfo[] => [isBetweenValueMatcher];\n","import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst regexValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions<string>> = {\n  id: ValueMatcherID.regex,\n  name: 'Regex',\n  description: 'Match when field value is matching regex.',\n  get: (options) => {\n    const regex = new RegExp(options.value);\n\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      return regex.test(value);\n    };\n  },\n  getOptionsDisplayText: (options) => {\n    return `Matches all rows where field value is matching regex: ${options.value}`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '.*' }),\n};\n\nexport const getRegexValueMatcher = (): ValueMatcherInfo[] => [regexValueMatcher];\n","// Load the Builtin matchers\nimport {\n  FieldMatcherInfo,\n  MatcherConfig,\n  FrameMatcherInfo,\n  FieldMatcher,\n  FrameMatcher,\n  ValueMatcherInfo,\n  ValueMatcher,\n} from '../types/transformations';\nimport { Registry } from '../utils/Registry';\n\nimport { getFieldTypeMatchers } from './matchers/fieldTypeMatcher';\nimport { fieldValueMatcherInfo } from './matchers/fieldValueMatcher';\nimport { getFieldNameMatchers, getFrameNameMatchers } from './matchers/nameMatcher';\nimport { getFieldPredicateMatchers, getFramePredicateMatchers } from './matchers/predicates';\nimport { getRefIdMatchers } from './matchers/refIdMatcher';\nimport { getSimpleFieldMatchers } from './matchers/simpleFieldMatcher';\nimport { getEqualValueMatchers } from './matchers/valueMatchers/equalMatchers';\nimport { getNullValueMatchers } from './matchers/valueMatchers/nullMatchers';\nimport { getNumericValueMatchers } from './matchers/valueMatchers/numericMatchers';\nimport { getRangeValueMatchers } from './matchers/valueMatchers/rangeMatchers';\nimport { getRegexValueMatcher } from './matchers/valueMatchers/regexMatchers';\n\nexport { type FieldValueMatcherConfig } from './matchers/fieldValueMatcher';\n\n/**\n * Registry that contains all of the built in field matchers.\n * @public\n */\nexport const fieldMatchers = new Registry<FieldMatcherInfo>(() => {\n  return [\n    ...getFieldPredicateMatchers(), // Predicates\n    ...getFieldTypeMatchers(), // by type\n    ...getFieldNameMatchers(), // by name\n    ...getSimpleFieldMatchers(), // first\n    fieldValueMatcherInfo, // reduce field (all null/zero)\n  ];\n});\n\n/**\n * Registry that contains all of the built in frame matchers.\n * @public\n */\nexport const frameMatchers = new Registry<FrameMatcherInfo>(() => {\n  return [\n    ...getFramePredicateMatchers(), // Predicates\n    ...getFrameNameMatchers(), // by name\n    ...getRefIdMatchers(), // by query refId\n  ];\n});\n\n/**\n * Registry that contains all of the built in value matchers.\n * @public\n */\nexport const valueMatchers = new Registry<ValueMatcherInfo>(() => {\n  return [\n    ...getNullValueMatchers(),\n    ...getNumericValueMatchers(),\n    ...getEqualValueMatchers(),\n    ...getRangeValueMatchers(),\n    ...getRegexValueMatcher(),\n  ];\n});\n\n/**\n * Resolves a field matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFieldMatcher(config: MatcherConfig): FieldMatcher {\n  const info = fieldMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown field matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a frame matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFrameMatchers(config: MatcherConfig): FrameMatcher {\n  const info = frameMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown frame matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a value matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getValueMatcher(config: MatcherConfig): ValueMatcher {\n  const info = valueMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown value matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n","export enum DataTransformerID {\n  append = 'append',\n  //  rotate = 'rotate', // Columns to rows\n  reduce = 'reduce',\n  order = 'order',\n  organize = 'organize',\n  rename = 'rename',\n  calculateField = 'calculateField',\n  /** @deprecated use joinByField */\n  seriesToColumns = 'seriesToColumns',\n  seriesToRows = 'seriesToRows',\n  merge = 'merge',\n  concatenate = 'concatenate',\n  labelsToFields = 'labelsToFields',\n  filterFields = 'filterFields',\n  filterFieldsByName = 'filterFieldsByName',\n  filterFrames = 'filterFrames',\n  filterByRefId = 'filterByRefId',\n  renameByRegex = 'renameByRegex',\n  filterByValue = 'filterByValue',\n  noop = 'noop',\n  ensureColumns = 'ensureColumns',\n  groupBy = 'groupBy',\n  sortBy = 'sortBy',\n  histogram = 'histogram',\n  configFromData = 'configFromData',\n  rowsToFields = 'rowsToFields',\n  prepareTimeSeries = 'prepareTimeSeries',\n  convertFieldType = 'convertFieldType',\n  fieldLookup = 'fieldLookup',\n  heatmap = 'heatmap',\n  spatial = 'spatial',\n  joinByField = 'joinByField',\n  joinByLabels = 'joinByLabels',\n  extractFields = 'extractFields',\n  groupingToMatrix = 'groupingToMatrix',\n  limit = 'limit',\n  partitionByValues = 'partitionByValues',\n  timeSeriesTable = 'timeSeriesTable',\n  formatTime = 'formatTime',\n  formatString = 'formatString',\n  regression = 'regression',\n}\n","import { map } from 'rxjs/operators';\n\nimport { DataFrame, SynchronousDataTransformerInfo, FieldMatcher, DataTransformContext } from '../../types';\nimport { fieldMatchers } from '../matchers';\nimport { FieldMatcherID } from '../matchers/ids';\n\nimport { DataTransformerID } from './ids';\nimport { joinDataFrames } from './joinDataFrames';\n\nexport enum JoinMode {\n  outer = 'outer', // best for time series, non duplicated join on values\n  inner = 'inner',\n  outerTabular = 'outerTabular', // best for tabular data where the join on value can be duplicated\n}\n\nexport interface JoinByFieldOptions {\n  byField?: string; // empty will pick the field automatically\n  mode?: JoinMode;\n}\n\nexport const joinByFieldTransformer: SynchronousDataTransformerInfo<JoinByFieldOptions> = {\n  id: DataTransformerID.joinByField,\n  aliasIds: [DataTransformerID.seriesToColumns],\n  name: 'Join by field',\n  description:\n    'Combine rows from two or more tables, based on a related field between them.  This can be used to outer join multiple time series on the _time_ field to show many time series in one table.',\n  defaultOptions: {\n    byField: undefined, // DEFAULT_KEY_FIELD,\n    mode: JoinMode.outer,\n  },\n\n  operator: (options, ctx) => (source) =>\n    source.pipe(map((data) => joinByFieldTransformer.transformer(options, ctx)(data))),\n\n  transformer: (options: JoinByFieldOptions, ctx: DataTransformContext) => {\n    let joinBy: FieldMatcher | undefined = undefined;\n    return (data: DataFrame[]) => {\n      if (data.length > 1) {\n        if (options.byField && !joinBy) {\n          joinBy = fieldMatchers.get(FieldMatcherID.byName).get(ctx.interpolate(options.byField));\n        }\n        const joined = joinDataFrames({ frames: data, joinBy, mode: options.mode });\n        if (joined) {\n          return [joined];\n        }\n      }\n      return data;\n    };\n  },\n};\n","import intersect from 'fast_array_intersect';\n\nimport { getTimeField, sortDataFrame } from '../../dataframe';\nimport { DataFrame, Field, FieldMatcher, FieldType, TIME_SERIES_VALUE_FIELD_NAME } from '../../types';\nimport { fieldMatchers } from '../matchers';\nimport { FieldMatcherID } from '../matchers/ids';\n\nimport { JoinMode } from './joinByField';\n\nexport function pickBestJoinField(data: DataFrame[]): FieldMatcher {\n  const { timeField } = getTimeField(data[0]);\n  if (timeField) {\n    return fieldMatchers.get(FieldMatcherID.firstTimeField).get({});\n  }\n  let common: string[] = [];\n  for (const f of data[0].fields) {\n    if (f.type === FieldType.number) {\n      common.push(f.name);\n    }\n  }\n\n  for (let i = 1; i < data.length; i++) {\n    const names: string[] = [];\n    for (const f of data[0].fields) {\n      if (f.type === FieldType.number) {\n        names.push(f.name);\n      }\n    }\n    common = common.filter((v) => !names.includes(v));\n  }\n\n  return fieldMatchers.get(FieldMatcherID.byName).get(common[0]);\n}\n\n/**\n * @internal\n */\nexport interface JoinOptions {\n  /**\n   * The input fields\n   */\n  frames: DataFrame[];\n\n  /**\n   * The field to join -- frames that do not have this field will be dropped\n   */\n  joinBy?: FieldMatcher;\n\n  /**\n   * Optionally filter the non-join fields\n   */\n  keep?: FieldMatcher;\n\n  /**\n   * @internal -- used when we need to keep a reference to the original frame/field index\n   */\n  keepOriginIndices?: boolean;\n\n  /**\n   * @internal -- Optionally specify a join mode (outer or inner)\n   */\n  mode?: JoinMode;\n}\n\nfunction getJoinMatcher(options: JoinOptions): FieldMatcher {\n  return options.joinBy ?? pickBestJoinField(options.frames);\n}\n\n/**\n * @internal\n */\nexport function maybeSortFrame(frame: DataFrame, fieldIdx: number) {\n  if (fieldIdx >= 0) {\n    let sortByField = frame.fields[fieldIdx];\n\n    if (sortByField.type !== FieldType.string && !isLikelyAscendingVector(sortByField.values)) {\n      frame = sortDataFrame(frame, fieldIdx);\n    }\n  }\n\n  return frame;\n}\n\n/**\n * This will return a single frame joined by the first matching field.  When a join field is not specified,\n * the default will use the first time field\n */\nexport function joinDataFrames(options: JoinOptions): DataFrame | undefined {\n  if (!options.frames?.length) {\n    return;\n  }\n\n  if (options.frames.length === 1) {\n    let frame = options.frames[0];\n    let frameCopy = frame;\n\n    const joinFieldMatcher = getJoinMatcher(options);\n    let joinIndex = frameCopy.fields.findIndex((f) => joinFieldMatcher(f, frameCopy, options.frames));\n\n    if (options.keepOriginIndices) {\n      frameCopy = {\n        ...frame,\n        fields: frame.fields.map((f, fieldIndex) => {\n          const copy = { ...f };\n          const origin = {\n            frameIndex: 0,\n            fieldIndex,\n          };\n          if (copy.state) {\n            copy.state.origin = origin;\n          } else {\n            copy.state = { origin };\n          }\n          return copy;\n        }),\n      };\n\n      // Make sure the join field is first\n      if (joinIndex > 0) {\n        const joinField = frameCopy.fields[joinIndex];\n        const fields = frameCopy.fields.filter((f, idx) => idx !== joinIndex);\n        fields.unshift(joinField);\n        frameCopy.fields = fields;\n        joinIndex = 0;\n      }\n    }\n\n    if (joinIndex >= 0) {\n      frameCopy = maybeSortFrame(frameCopy, joinIndex);\n    }\n\n    if (options.keep) {\n      let fields = frameCopy.fields.filter(\n        (f, fieldIdx) => fieldIdx === joinIndex || options.keep!(f, frameCopy, options.frames)\n      );\n\n      // mutate already copied frame\n      if (frame !== frameCopy) {\n        frameCopy.fields = fields;\n      } else {\n        frameCopy = {\n          ...frame,\n          fields,\n        };\n      }\n    }\n\n    return frameCopy;\n  }\n\n  const nullModes: JoinNullMode[][] = [];\n  const allData: AlignedData[] = [];\n  const originalFields: Field[] = [];\n  // store frame field order for tabular data join\n  const originalFieldsOrderByFrame: number[][] = [];\n  // all other fields that are not the join on are in the 1+ position (join is always the 0)\n  let fieldsOrder = 1;\n  const joinFieldMatcher = getJoinMatcher(options);\n\n  for (let frameIndex = 0; frameIndex < options.frames.length; frameIndex++) {\n    const frame = options.frames[frameIndex];\n\n    if (!frame || !frame.fields?.length) {\n      continue; // skip the frame\n    }\n\n    const nullModesFrame: JoinNullMode[] = [NULL_REMOVE];\n    let join: Field | undefined = undefined;\n    let fields: Field[] = [];\n    let frameFieldsOrder = [];\n\n    for (let fieldIndex = 0; fieldIndex < frame.fields.length; fieldIndex++) {\n      const field = frame.fields[fieldIndex];\n      field.state = field.state || {};\n\n      if (!join && joinFieldMatcher(field, frame, options.frames)) {\n        join = field;\n      } else {\n        if (options.keep && !options.keep(field, frame, options.frames)) {\n          continue; // skip field\n        }\n\n        // Support the standard graph span nulls field config\n        let spanNulls = field.config.custom?.spanNulls;\n        nullModesFrame.push(spanNulls === true ? NULL_REMOVE : spanNulls === -1 ? NULL_RETAIN : NULL_EXPAND);\n\n        let labels = field.labels ?? {};\n        let name = field.name;\n        if (frame.name) {\n          if (field.name === TIME_SERIES_VALUE_FIELD_NAME) {\n            name = frame.name;\n          } else {\n            labels = { ...labels, name: frame.name };\n          }\n        }\n\n        fields.push({\n          ...field,\n          name,\n          labels, // add the name label from frame\n        });\n      }\n\n      if (options.keepOriginIndices) {\n        field.state.origin = {\n          frameIndex,\n          fieldIndex,\n        };\n      }\n    }\n\n    if (!join) {\n      continue; // skip the frame\n    }\n\n    if (originalFields.length === 0) {\n      originalFields.push(join); // first join field\n    }\n\n    nullModes.push(nullModesFrame);\n    const a: AlignedData = [join.values]; //\n\n    for (const field of fields) {\n      a.push(field.values);\n      originalFields.push(field);\n      // clear field displayName state\n      delete field.state?.displayName;\n      // store frame field order for tabular data join\n      frameFieldsOrder.push(fieldsOrder);\n      fieldsOrder++;\n    }\n    // store frame field order for tabular data join\n    originalFieldsOrderByFrame.push(frameFieldsOrder);\n    allData.push(a);\n  }\n\n  let joined: Array<Array<number | string | null | undefined>> = [];\n\n  if (options.mode === JoinMode.outerTabular) {\n    joined = joinOuterTabular(allData, originalFieldsOrderByFrame, originalFields.length, nullModes);\n  } else {\n    joined = join(allData, nullModes, options.mode);\n  }\n\n  return {\n    // ...options.data[0], // keep name, meta?\n    length: joined[0] ? joined[0].length : 0,\n    fields: originalFields.map((f, index) => ({\n      ...f,\n      values: joined[index],\n    })),\n  };\n}\n\n// The following full outer join allows for multiple/duplicated joined fields values where as the performant join from uplot creates a unique set of field values to be joined on\n// http://www.silota.com/docs/recipes/sql-join-tutorial-javascript-examples.html\n// The frame field value which is used join on is sorted to the 0 position of each table data in both tables and nullModes\n// (not sure if we need nullModes) for nullModes, the field to join on is given NULL_REMOVE and all other fields are given NULL_EXPAND\nfunction joinOuterTabular(\n  tables: AlignedData[],\n  originalFieldsOrderByFrame: number[][],\n  numberOfFields: number,\n  nullModes?: number[][]\n) {\n  // we will iterate through all frames and check frames for matches preventing duplicates.\n  // we will store each matched frame \"row\" or field values at the same index in the following hash.\n  let duplicateHash: { [key: string]: Array<number | string | null | undefined> } = {};\n\n  // iterate through the tables (frames)\n  // for each frame we get the field data where the data in the 0 pos is the value to join on\n  for (let tableIdx = 0; tableIdx < tables.length; tableIdx++) {\n    // the table (frame) to check for matches in other tables\n    let table = tables[tableIdx];\n    // the field value to join on (the join value is always in the 0 position)\n    let joinOnTableField = table[0];\n\n    // now we iterate through the other table (frame) data to look for matches\n    for (let otherTablesIdx = 0; otherTablesIdx < tables.length; otherTablesIdx++) {\n      // do not match on the same table\n      if (otherTablesIdx === tableIdx) {\n        continue;\n      }\n\n      let otherTable = tables[otherTablesIdx];\n      let otherTableJoinOnField = otherTable[0];\n\n      // iterate through the field to join on from the first table\n      for (\n        let joinTableFieldValuesIdx = 0;\n        joinTableFieldValuesIdx < joinOnTableField.length;\n        joinTableFieldValuesIdx++\n      ) {\n        // create the joined data\n        // this has the orignalFields length and should start out undefined\n        // joined row + number of other fields in each frame\n        // the order of each field is important in how we\n        // 1 check for duplicates\n        // 2 transform the row back into fields for the joined frame\n        // 3 when there is no match for the row we keep the vals undefined\n        const tableJoinOnValue = joinOnTableField[joinTableFieldValuesIdx];\n        const allOtherFields = numberOfFields - 1;\n        let joinedRow: Array<number | string | null | undefined> = [tableJoinOnValue].concat(new Array(allOtherFields));\n\n        let tableFieldValIdx = 0;\n        for (let fieldsIdx = 1; fieldsIdx < table.length; fieldsIdx++) {\n          const joinRowIdx = originalFieldsOrderByFrame[tableIdx][tableFieldValIdx];\n          joinedRow[joinRowIdx] = table[fieldsIdx][joinTableFieldValuesIdx];\n          tableFieldValIdx++;\n        }\n\n        for (let otherTableValuesIdx = 0; otherTableValuesIdx < otherTableJoinOnField.length; otherTableValuesIdx++) {\n          if (joinOnTableField[joinTableFieldValuesIdx] === otherTableJoinOnField[otherTableValuesIdx]) {\n            let tableFieldValIdx = 0;\n            for (let fieldsIdx = 1; fieldsIdx < otherTable.length; fieldsIdx++) {\n              const joinRowIdx = originalFieldsOrderByFrame[otherTablesIdx][tableFieldValIdx];\n              joinedRow[joinRowIdx] = otherTable[fieldsIdx][otherTableValuesIdx];\n              tableFieldValIdx++;\n            }\n\n            break;\n          }\n        }\n\n        // prevent duplicates by entering rows in a hash where keys are the rows\n        duplicateHash[JSON.stringify(joinedRow)] = joinedRow;\n      }\n    }\n  }\n\n  // transform the joined rows into data for a dataframe\n  let data: Array<Array<number | string | null | undefined>> = [];\n  for (let field = 0; field < numberOfFields; field++) {\n    data.push(new Array(0));\n  }\n\n  for (let key in duplicateHash) {\n    const row = duplicateHash[key];\n\n    for (let valIdx = 0; valIdx < row.length; valIdx++) {\n      data[valIdx].push(row[valIdx]);\n    }\n  }\n\n  return data;\n}\n\n//--------------------------------------------------------------------------------\n// Below here is copied from uplot (MIT License)\n// https://github.com/leeoniya/uPlot/blob/master/src/utils.js#L325\n// This avoids needing to import uplot into the data package\n//--------------------------------------------------------------------------------\n\n// Copied from uplot\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray\n  | Float32Array\n  | Float64Array;\n\nexport type AlignedData =\n  | TypedArray[]\n  | [xValues: number[] | TypedArray, ...yValues: Array<Array<number | null | undefined> | TypedArray>];\n\n// nullModes\nconst NULL_REMOVE = 0; // nulls are converted to undefined (e.g. for spanGaps: true)\nconst NULL_RETAIN = 1; // nulls are retained, with alignment artifacts set to undefined (default)\nconst NULL_EXPAND = 2; // nulls are expanded to include any adjacent alignment artifacts\n\ntype JoinNullMode = number; // NULL_IGNORE | NULL_RETAIN | NULL_EXPAND;\n\n// sets undefined values to nulls when adjacent to existing nulls (minesweeper)\nfunction nullExpand(yVals: Array<number | null>, nullIdxs: number[], alignedLen: number) {\n  for (let i = 0, xi, lastNullIdx = -1; i < nullIdxs.length; i++) {\n    let nullIdx = nullIdxs[i];\n\n    if (nullIdx > lastNullIdx) {\n      xi = nullIdx - 1;\n      while (xi >= 0 && yVals[xi] == null) {\n        yVals[xi--] = null;\n      }\n\n      xi = nullIdx + 1;\n      while (xi < alignedLen && yVals[xi] == null) {\n        yVals[(lastNullIdx = xi++)] = null;\n      }\n    }\n  }\n}\n\n// nullModes is a tables-matched array indicating how to treat nulls in each series\nexport function join(tables: AlignedData[], nullModes?: number[][], mode: JoinMode = JoinMode.outer) {\n  let xVals: Set<number>;\n\n  if (mode === JoinMode.inner) {\n    // @ts-ignore\n    xVals = new Set(intersect(tables.map((t) => t[0])));\n  } else {\n    xVals = new Set();\n\n    for (let ti = 0; ti < tables.length; ti++) {\n      let t = tables[ti];\n      let xs = t[0];\n      let len = xs.length;\n\n      for (let i = 0; i < len; i++) {\n        xVals.add(xs[i]);\n      }\n    }\n  }\n\n  let data = [Array.from(xVals).sort((a, b) => a - b)];\n\n  let alignedLen = data[0].length;\n\n  let xIdxs = new Map();\n\n  for (let i = 0; i < alignedLen; i++) {\n    xIdxs.set(data[0][i], i);\n  }\n\n  for (let ti = 0; ti < tables.length; ti++) {\n    let t = tables[ti];\n    let xs = t[0];\n\n    for (let si = 1; si < t.length; si++) {\n      let ys = t[si];\n\n      let yVals = Array(alignedLen).fill(undefined);\n\n      let nullMode = nullModes ? nullModes[ti][si] : NULL_RETAIN;\n\n      let nullIdxs = [];\n\n      for (let i = 0; i < ys.length; i++) {\n        let yVal = ys[i];\n        let alignedIdx = xIdxs.get(xs[i]);\n\n        if (yVal === null) {\n          if (nullMode !== NULL_REMOVE) {\n            yVals[alignedIdx] = yVal;\n\n            if (nullMode === NULL_EXPAND) {\n              nullIdxs.push(alignedIdx);\n            }\n          }\n        } else {\n          yVals[alignedIdx] = yVal;\n        }\n      }\n\n      nullExpand(yVals, nullIdxs, alignedLen);\n\n      data.push(yVals);\n    }\n  }\n\n  return data;\n}\n\n// Test a few samples to see if the values are ascending\n// Only exported for tests\nexport function isLikelyAscendingVector(data: any[], samples = 50) {\n  const len = data.length;\n\n  // empty or single value\n  if (len <= 1) {\n    return true;\n  }\n\n  // skip leading & trailing nullish\n  let firstIdx = 0;\n  let lastIdx = len - 1;\n\n  while (firstIdx <= lastIdx && data[firstIdx] == null) {\n    firstIdx++;\n  }\n\n  while (lastIdx >= firstIdx && data[lastIdx] == null) {\n    lastIdx--;\n  }\n\n  // all nullish or one value surrounded by nullish\n  if (lastIdx <= firstIdx) {\n    return true;\n  }\n\n  const stride = Math.max(1, Math.floor((lastIdx - firstIdx + 1) / samples));\n\n  for (let prevVal = data[firstIdx], i = firstIdx + stride; i <= lastIdx; i += stride) {\n    const v = data[i];\n\n    if (v != null) {\n      if (v <= prevVal) {\n        return false;\n      }\n\n      prevVal = v;\n    }\n  }\n\n  return true;\n}\n","import { Labels } from '../types';\n\n/** replace labels in a string.  Used for loki+prometheus legend formats */\nexport function renderLegendFormat(aliasPattern: string, aliasData: Labels): string {\n  const aliasRegex = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n  return aliasPattern.replace(aliasRegex, (_, g1) => (aliasData[g1] ? aliasData[g1] : g1));\n}\n","import { AlignedData } from 'uplot';\n\nimport { DataFrame, Field, FieldDTO, FieldType, Labels, parseLabels, QueryResultMeta } from '..';\nimport { join } from '../transformations/transformers/joinDataFrames';\nimport { renderLegendFormat } from '../utils/legend';\n\nimport {\n  DataFrameJSON,\n  decodeFieldValueEntities,\n  FieldSchema,\n  guessFieldTypeFromValue,\n  toFilteredDataFrameDTO,\n} from '.';\n\n/**\n * Indicate if the frame is appened or replace\n *\n * @alpha\n */\nexport enum StreamingFrameAction {\n  Append = 'append',\n  Replace = 'replace',\n}\n\n/**\n * @alpha\n * */\nexport interface StreamingFrameOptions {\n  maxLength: number; // 1000\n  maxDelta: number; // how long to keep things\n  action: StreamingFrameAction; // default will append\n\n  /** optionally format field names based on labels */\n  displayNameFormat?: string;\n}\n\n/**\n * Stream packet info is attached to StreamingDataFrames and indicate how many\n * rows were added to the end of the frame.  The number of discarded rows can be\n * calculated from previous state\n */\nexport interface StreamPacketInfo {\n  number: number;\n  action: StreamingFrameAction;\n  length: number;\n  schemaChanged: boolean;\n}\n\nconst PROM_STYLE_METRIC_LABEL = '__name__';\n\nenum PushMode {\n  wide,\n  labels,\n  // long\n}\n\nexport type SerializedStreamingDataFrame = {\n  name?: string;\n  fields: FieldDTO[];\n  refId?: string;\n  meta: QueryResultMeta;\n  schemaFields: FieldSchema[];\n  timeFieldIndex: number;\n  pushMode: PushMode;\n  length: number;\n  packetInfo: StreamPacketInfo;\n  options: StreamingFrameOptions;\n  labels: Set<string>;\n};\n\n/**\n * Unlike a circular buffer, this will append and periodically slice the front\n */\nexport class StreamingDataFrame implements DataFrame {\n  name?: string;\n  refId?: string;\n  meta: QueryResultMeta = {};\n\n  fields: Field[] = [];\n  length = 0;\n\n  private schemaFields: FieldSchema[] = [];\n  private timeFieldIndex = -1;\n  private pushMode = PushMode.wide;\n\n  // current labels\n  private labels: Set<string> = new Set();\n  readonly packetInfo: StreamPacketInfo = {\n    schemaChanged: true,\n    number: 0,\n    action: StreamingFrameAction.Replace,\n    length: 0,\n  };\n\n  private constructor(public options: StreamingFrameOptions) {\n    // Get Length to show up if you use spread\n    Object.defineProperty(this, 'length', {\n      enumerable: true,\n    });\n\n    // Get fields to show up if you use spread\n    Object.defineProperty(this, 'fields', {\n      enumerable: true,\n    });\n  }\n\n  serialize = (\n    fieldPredicate?: (f: Field) => boolean,\n    optionsOverride?: Partial<StreamingFrameOptions>,\n    trimValues?: {\n      maxLength?: number;\n    }\n  ): SerializedStreamingDataFrame => {\n    const options = optionsOverride ? Object.assign({}, { ...this.options, ...optionsOverride }) : this.options;\n    const dataFrameDTO = toFilteredDataFrameDTO(this, fieldPredicate);\n\n    const numberOfItemsToRemove = getNumberOfItemsToRemove(\n      dataFrameDTO.fields.map((f) => f.values) as unknown[][],\n      typeof trimValues?.maxLength === 'number' ? Math.min(trimValues.maxLength, options.maxLength) : options.maxLength,\n      this.timeFieldIndex,\n      options.maxDelta\n    );\n\n    dataFrameDTO.fields = dataFrameDTO.fields.map((f) => ({\n      ...f,\n      values: f.values?.slice(numberOfItemsToRemove),\n    }));\n\n    const length = dataFrameDTO.fields[0]?.values?.length ?? 0;\n\n    return {\n      ...dataFrameDTO,\n      // TODO: Labels and schema are not filtered by field\n      labels: this.labels,\n      schemaFields: this.schemaFields,\n\n      name: this.name,\n      refId: this.refId,\n      meta: this.meta,\n      length,\n      timeFieldIndex: this.timeFieldIndex,\n      pushMode: this.pushMode,\n      packetInfo: this.packetInfo,\n      options,\n    };\n  };\n\n  private initFromSerialized = (serialized: Omit<SerializedStreamingDataFrame, 'options'>) => {\n    this.name = serialized.name;\n    this.refId = serialized.refId;\n    this.meta = serialized.meta;\n    this.length = serialized.length;\n    this.labels = serialized.labels;\n    this.schemaFields = serialized.schemaFields;\n    this.timeFieldIndex = serialized.timeFieldIndex;\n    this.pushMode = serialized.pushMode;\n    this.packetInfo.length = serialized.packetInfo.length;\n    this.packetInfo.number = serialized.packetInfo.number;\n    this.packetInfo.action = StreamingFrameAction.Replace;\n    this.packetInfo.schemaChanged = true;\n    this.fields = serialized.fields.map((f) => ({\n      ...f,\n      type: f.type ?? FieldType.other,\n      config: f.config ?? {},\n      values: f.values ?? [],\n    }));\n\n    assureValuesAreWithinLengthLimit(\n      this.fields.map((f) => f.values),\n      this.options.maxLength,\n      this.timeFieldIndex,\n      this.options.maxDelta\n    );\n  };\n\n  static deserialize = (serialized: SerializedStreamingDataFrame) => {\n    const frame = new StreamingDataFrame(serialized.options);\n    frame.initFromSerialized(serialized);\n    return frame;\n  };\n\n  static empty = (opts?: Partial<StreamingFrameOptions>): StreamingDataFrame =>\n    new StreamingDataFrame(getStreamingFrameOptions(opts));\n\n  static fromDataFrameJSON = (frame: DataFrameJSON, opts?: Partial<StreamingFrameOptions>): StreamingDataFrame => {\n    const streamingDataFrame = new StreamingDataFrame(getStreamingFrameOptions(opts));\n    streamingDataFrame.push(frame);\n    return streamingDataFrame;\n  };\n\n  private get alwaysReplace() {\n    return this.options.action === StreamingFrameAction.Replace;\n  }\n\n  needsResizing = ({ maxLength, maxDelta }: StreamingFrameOptions) => {\n    const needsMoreLength = maxLength && this.options.maxLength < maxLength;\n    const needsBiggerDelta = maxDelta && this.options.maxDelta < maxDelta;\n    const needsToOverrideDefaultInfinityDelta = maxDelta && this.options.maxDelta === Infinity;\n    return Boolean(needsMoreLength || needsBiggerDelta || needsToOverrideDefaultInfinityDelta);\n  };\n\n  resize = ({ maxLength, maxDelta }: Partial<StreamingFrameOptions>) => {\n    if (maxDelta) {\n      if (this.options.maxDelta === Infinity) {\n        this.options.maxDelta = maxDelta;\n      } else {\n        this.options.maxDelta = Math.max(maxDelta, this.options.maxDelta);\n      }\n    }\n    this.options.maxLength = Math.max(this.options.maxLength, maxLength ?? 0);\n  };\n\n  /**\n   * apply the new message to the existing data.  This will replace the existing schema\n   * if a new schema is included in the message, or append data matching the current schema\n   */\n  push(msg: DataFrameJSON): StreamPacketInfo {\n    const { schema, data } = msg;\n\n    this.packetInfo.number++;\n    this.packetInfo.length = 0;\n    this.packetInfo.schemaChanged = false;\n\n    if (schema) {\n      this.pushMode = PushMode.wide;\n      this.timeFieldIndex = schema.fields.findIndex((f) => f.type === FieldType.time);\n      const firstField = schema.fields[0];\n      if (\n        this.timeFieldIndex === 1 &&\n        firstField.type === FieldType.string &&\n        (firstField.name === 'labels' || firstField.name === 'Labels')\n      ) {\n        this.pushMode = PushMode.labels;\n        this.timeFieldIndex = 0; // after labels are removed!\n      }\n\n      const niceSchemaFields = this.pushMode === PushMode.labels ? schema.fields.slice(1) : schema.fields;\n\n      this.refId = schema.refId;\n      if (schema.meta) {\n        this.meta = { ...schema.meta };\n      }\n\n      const { displayNameFormat } = this.options;\n      if (hasSameStructure(this.schemaFields, niceSchemaFields)) {\n        const len = niceSchemaFields.length;\n        this.fields.forEach((f, idx) => {\n          const sf = niceSchemaFields[idx % len];\n          f.config = sf.config ?? {};\n          f.labels = sf.labels;\n        });\n        if (displayNameFormat) {\n          this.fields.forEach((f) => {\n            const labels = { [PROM_STYLE_METRIC_LABEL]: f.name, ...f.labels };\n            f.config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n          });\n        }\n      } else {\n        this.packetInfo.schemaChanged = true;\n        const isWide = this.pushMode === PushMode.wide;\n        this.fields = niceSchemaFields.map((f) => {\n          const config = f.config ?? {};\n          if (displayNameFormat) {\n            const labels = { [PROM_STYLE_METRIC_LABEL]: f.name, ...f.labels };\n            config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n          }\n          return {\n            config,\n            name: f.name,\n            labels: f.labels,\n            type: f.type ?? FieldType.other,\n            // transfer old values by type & name, unless we relied on labels to match fields\n            values: isWide\n              ? this.fields.find((of) => of.name === f.name && f.type === of.type)?.values ??\n                Array(this.length).fill(undefined)\n              : [],\n          };\n        });\n      }\n\n      this.schemaFields = niceSchemaFields;\n    }\n\n    if (data && data.values.length && data.values[0].length) {\n      let { values, entities } = data;\n\n      if (entities) {\n        entities.forEach((ents, i) => {\n          if (ents) {\n            decodeFieldValueEntities(ents, values[i]);\n            // TODO: append replacements to field\n          }\n        });\n      }\n\n      if (this.pushMode === PushMode.labels) {\n        // augment and transform data to match current schema for standard circPush() path\n        const labeledTables = transpose(values);\n\n        // make sure fields are initalized for each label\n        for (const label of labeledTables.keys()) {\n          if (!this.labels.has(label)) {\n            this.packetInfo.schemaChanged = true;\n            this.addLabel(label);\n          }\n        }\n\n        // TODO: cache higher up\n        let dummyTable = Array(this.schemaFields.length).fill([]);\n\n        let tables: AlignedData[] = [];\n        this.labels.forEach((label) => {\n          tables.push(labeledTables.get(label) ?? dummyTable);\n        });\n\n        values = join(tables);\n      }\n\n      if (values.length !== this.fields.length) {\n        if (this.fields.length) {\n          throw new Error(\n            `push message mismatch.  Expected: ${this.fields.length}, received: ${values.length} (labels=${\n              this.pushMode === PushMode.labels\n            })`\n          );\n        }\n\n        this.fields = values.map((vals, idx) => {\n          let name = `Field ${idx}`;\n          let type = guessFieldTypeFromValue(vals[0]);\n          const isTime = idx === 0 && type === FieldType.number && (vals as number[])[0] > 1600016688632;\n          if (isTime) {\n            type = FieldType.time;\n            name = 'Time';\n          }\n\n          return {\n            name,\n            type,\n            config: {},\n            values: [],\n          };\n        });\n      }\n\n      let appended = values;\n      this.packetInfo.length = values[0].length;\n\n      if (this.alwaysReplace || !this.length) {\n        this.packetInfo.action = StreamingFrameAction.Replace;\n      } else {\n        this.packetInfo.action = StreamingFrameAction.Append;\n\n        // mutates appended\n        appended = this.fields.map((f) => f.values);\n        circPush(appended, values, this.options.maxLength, this.timeFieldIndex, this.options.maxDelta);\n      }\n\n      appended.forEach((v, i) => {\n        const field = this.fields[i];\n        const { state } = field;\n        field.values = v;\n        if (state) {\n          state.calcs = undefined;\n        }\n      });\n\n      // Update the frame length\n      this.length = appended[0].length;\n    }\n\n    return {\n      ...this.packetInfo,\n    };\n  }\n\n  pushNewValues = (values: unknown[][]) => {\n    if (!values?.length) {\n      return;\n    }\n\n    this.packetInfo.action = this.options.action;\n    this.packetInfo.number++;\n    this.packetInfo.length = values[0].length;\n    this.packetInfo.schemaChanged = false;\n\n    if (this.options.action === StreamingFrameAction.Append) {\n      circPush(\n        this.fields.map((f) => f.values),\n        values,\n        this.options.maxLength,\n        this.timeFieldIndex,\n        this.options.maxDelta\n      );\n    } else {\n      values.forEach((v, i) => {\n        if (this.fields[i]) {\n          this.fields[i].values = v;\n        }\n      });\n\n      assureValuesAreWithinLengthLimit(\n        this.fields.map((f) => f.values),\n        this.options.maxLength,\n        this.timeFieldIndex,\n        this.options.maxDelta\n      );\n    }\n    const newLength = this.fields?.[0]?.values.length;\n    if (newLength !== undefined) {\n      this.length = newLength;\n    }\n  };\n\n  resetStateCalculations = () => {\n    this.fields.forEach((f) => {\n      f.state = {\n        ...(f.state ?? {}),\n        calcs: undefined,\n        range: undefined,\n      };\n    });\n  };\n\n  getMatchingFieldIndexes = (fieldPredicate: (f: Field) => boolean): number[] =>\n    this.fields\n      .map((f, index) => (fieldPredicate(f) ? index : undefined))\n      .filter((val) => val !== undefined) as number[];\n\n  getValuesFromLastPacket = (): unknown[][] =>\n    this.fields.map((f) => {\n      const values = f.values;\n      return values.slice(Math.max(values.length - this.packetInfo.length));\n    });\n\n  hasAtLeastOnePacket = () => Boolean(this.packetInfo.length);\n\n  // adds a set of fields for a new label\n  private addLabel(label: string) {\n    const { displayNameFormat } = this.options;\n    const labelCount = this.labels.size;\n\n    // parse labels\n    const parsedLabels = parseLabelsFromField(label);\n\n    if (labelCount === 0) {\n      // mutate existing fields and add labels\n      this.fields.forEach((f, i) => {\n        if (i > 0) {\n          f.labels = parsedLabels;\n          if (displayNameFormat) {\n            const labels = { [PROM_STYLE_METRIC_LABEL]: f.name, ...parsedLabels };\n            f.config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n          }\n        }\n      });\n    } else {\n      for (let i = 1; i < this.schemaFields.length; i++) {\n        let proto = this.schemaFields[i] as Field;\n        const config = proto.config ?? {};\n        if (displayNameFormat) {\n          const labels = { [PROM_STYLE_METRIC_LABEL]: proto.name, ...parsedLabels };\n          config.displayNameFromDS = renderLegendFormat(displayNameFormat, labels);\n        }\n        this.fields.push({\n          ...proto,\n          config,\n          labels: parsedLabels,\n          values: Array(this.length).fill(undefined),\n        });\n      }\n    }\n\n    this.labels.add(label);\n  }\n\n  getOptions = (): Readonly<StreamingFrameOptions> => this.options;\n}\n\nexport function getStreamingFrameOptions(opts?: Partial<StreamingFrameOptions>): StreamingFrameOptions {\n  return {\n    maxLength: opts?.maxLength ?? 1000,\n    maxDelta: opts?.maxDelta ?? Infinity,\n    action: opts?.action ?? StreamingFrameAction.Append,\n    displayNameFormat: opts?.displayNameFormat,\n  };\n}\n\n// converts vertical insertion records with table keys in [0] and column values in [1...N]\n// to join()-able tables with column arrays\nexport function transpose(vrecs: unknown[][]) {\n  let tableKeys = new Set(vrecs[0]);\n  let tables = new Map();\n\n  tableKeys.forEach((key) => {\n    let cols = Array(vrecs.length - 1)\n      .fill(null)\n      .map(() => []);\n\n    tables.set(key, cols);\n  });\n\n  for (let r = 0; r < vrecs[0].length; r++) {\n    let table = tables.get(vrecs[0][r]);\n    for (let c = 1; c < vrecs.length; c++) {\n      table[c - 1].push(vrecs[c][r]);\n    }\n  }\n\n  return tables;\n}\n\n// binary search for index of closest value\nexport function closestIdx(num: number, arr: number[], lo?: number, hi?: number) {\n  let mid;\n  lo = lo || 0;\n  hi = hi || arr.length - 1;\n  let bitwise = hi <= 2147483647;\n\n  while (hi - lo > 1) {\n    mid = bitwise ? (lo + hi) >> 1 : Math.floor((lo + hi) / 2);\n\n    if (arr[mid] < num) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  if (num - arr[lo] <= arr[hi] - num) {\n    return lo;\n  }\n\n  return hi;\n}\n\nexport function parseLabelsFromField(str: string): Labels {\n  if (!str.length) {\n    return {};\n  }\n  if (str.charAt(0) === '{') {\n    return parseLabels(str);\n  }\n  const parsedLabels: Labels = {};\n  str.split(',').forEach((kv) => {\n    const [key, val] = kv.trim().split('=');\n    parsedLabels[key] = val;\n  });\n  return parsedLabels;\n}\n\n/**\n * @internal // not exported in yet\n */\nexport function getLastStreamingDataFramePacket(frame: DataFrame) {\n  const pi = (frame as StreamingDataFrame).packetInfo;\n  return pi?.action ? pi : undefined;\n}\n\n// mutable circular push\nfunction circPush(data: unknown[][], newData: unknown[][], maxLength = Infinity, deltaIdx = 0, maxDelta = Infinity) {\n  for (let i = 0; i < data.length; i++) {\n    for (let k = 0; k < newData[i].length; k++) {\n      data[i].push(newData[i][k]);\n    }\n  }\n\n  return assureValuesAreWithinLengthLimit(data, maxLength, deltaIdx, maxDelta);\n}\n\nfunction assureValuesAreWithinLengthLimit(data: unknown[][], maxLength = Infinity, deltaIdx = 0, maxDelta = Infinity) {\n  const count = getNumberOfItemsToRemove(data, maxLength, deltaIdx, maxDelta);\n\n  if (count) {\n    for (let i = 0; i < data.length; i++) {\n      data[i].splice(0, count);\n    }\n  }\n\n  return count;\n}\n\nfunction getNumberOfItemsToRemove(data: unknown[][], maxLength = Infinity, deltaIdx = 0, maxDelta = Infinity) {\n  if (!data[0]?.length) {\n    return 0;\n  }\n\n  const nlen = data[0].length;\n\n  let sliceIdx = 0;\n\n  if (nlen > maxLength) {\n    sliceIdx = nlen - maxLength;\n  }\n\n  if (maxDelta !== Infinity && deltaIdx >= 0) {\n    const deltaLookup = data[deltaIdx] as number[];\n\n    const low = deltaLookup[sliceIdx];\n    const high = deltaLookup[nlen - 1];\n\n    if (high - low > maxDelta) {\n      sliceIdx = closestIdx(high - maxDelta, deltaLookup, sliceIdx);\n    }\n  }\n\n  return sliceIdx;\n}\n\nfunction hasSameStructure(a: FieldSchema[], b: FieldSchema[]): boolean {\n  if (a?.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    const fA = a[i];\n    const fB = b[i];\n    if (fA.name !== fB.name || fA.type !== fB.type) {\n      return false;\n    }\n  }\n  return true;\n}\n","declare global {\n  interface Array<T> {\n    /** @deprecated Use [idx]. This only exists to help migrate Vector to Array */\n    get(idx: number): T;\n    /** @deprecated Use [idx]. This only exists to help migrate Vector to Array */\n    set(idx: number, value: T): void;\n    /** @deprecated Use .push(value). This only exists to help migrate Vector to Array */\n    add(value: T): void;\n    /** @deprecated this is not necessary.  This only exists to help migrate Vector to Array */\n    toArray(): T[];\n  }\n}\n\n// JS original sin\n// this if condition is because Jest will re-exec this block multiple times (in a browser this only runs once)\nexport function patchArrayVectorProrotypeMethods() {\n  if (!Object.getOwnPropertyDescriptor(Array.prototype, 'toArray')) {\n    Object.defineProperties(Array.prototype, {\n      get: {\n        value: function (idx: number) {\n          return this[idx];\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      set: {\n        value: function (idx: number, value: unknown) {\n          this[idx] = value;\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      add: {\n        value: function (value: unknown) {\n          this.push(value);\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      toArray: {\n        value: function () {\n          return this;\n        },\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n    });\n  }\n}\n//this function call is intentional\npatchArrayVectorProrotypeMethods();\n\n/** @deprecated use a simple Array<T> */\nexport interface Vector<T = any> extends Array<T> {\n  length: number;\n\n  /**\n   * Access the value by index (Like an array)\n   *\n   * @deprecated use a simple Array<T>\n   */\n  get(index: number): T;\n\n  /**\n   * Set a value\n   *\n   * @deprecated use a simple Array<T>\n   */\n  set: (index: number, value: T) => void;\n\n  /**\n   * Adds the value to the vector\n   * Same as Array.push()\n   *\n   * @deprecated use a simple Array<T>\n   */\n  add: (value: T) => void;\n\n  /**\n   * Get the results as an array.\n   *\n   * @deprecated use a simple Array<T>\n   */\n  toArray(): T[];\n}\n\n/**\n * Apache arrow vectors are Read/Write\n *\n * @deprecated -- this is now part of the base Vector interface\n */\nexport interface ReadWriteVector<T = any> extends Vector<T> {}\n\n/**\n * Vector with standard manipulation functions\n *\n * @deprecated -- this is now part of the base Vector interface\n */\nexport interface MutableVector<T = any> extends ReadWriteVector<T> {}\n\n/**\n * This is an extremely inefficient Vector wrapper that allows vectors to\n * be treated as arrays.  We should avoid using this wrapper, but it is helpful\n * for a clean migration to arrays\n *\n * @deprecated\n */\nexport function makeArrayIndexableVector<T extends Vector>(v: T): T {\n  return new Proxy<T>(v, {\n    get(target: Vector, property: string, receiver: Vector) {\n      if (typeof property !== 'symbol') {\n        const idx = +property;\n        if (String(idx) === property) {\n          return target.get(idx);\n        }\n      }\n      return Reflect.get(target, property, receiver);\n    },\n    set(target: Vector, property: string, value: unknown, receiver: Vector) {\n      if (typeof property !== 'symbol') {\n        const idx = +property;\n        if (String(idx) === property) {\n          target.set(idx, value);\n          return true;\n        }\n      }\n      return Reflect.set(target, property, value, receiver);\n    },\n  });\n}\n","import { Vector } from '../types/vector';\n\n/** @deprecated use a simple Arrays */\nexport function vectorToArray<T>(v: Vector<T>): T[] {\n  const arr: T[] = Array(v.length);\n  for (let i = 0; i < v.length; i++) {\n    arr[i] = v.get(i);\n  }\n  return arr;\n}\n","import { Vector } from '../types';\n\nimport { vectorToArray } from './vectorToArray';\n\n/**\n * @public\n * @deprecated use a simple Arrays\n */\nexport abstract class FunctionalVector<T = any> implements Vector<T> {\n  abstract get length(): number;\n\n  abstract get(index: number): T;\n\n  // Implement \"iterator protocol\"\n  *iterator() {\n    for (let i = 0; i < this.length; i++) {\n      yield this.get(i);\n    }\n  }\n\n  set(index: number, value: T): void {\n    throw 'unsupported operation';\n  }\n\n  add(value: T): void {\n    throw 'unsupported operation';\n  }\n\n  push(...vals: T[]): number {\n    for (const v of vals) {\n      this.add(v);\n    }\n    return this.length;\n  }\n\n  // Implement \"iterable protocol\"\n  [Symbol.iterator]() {\n    return this.iterator();\n  }\n\n  forEach(iterator: (row: T, index: number, array: T[]) => void): void {\n    return vectorator(this).forEach(iterator);\n  }\n\n  map<V>(transform: (item: T, index: number, array: T[]) => V): V[] {\n    return vectorator(this).map(transform);\n  }\n\n  filter(predicate: (item: T, index: number, array: T[]) => boolean): T[] {\n    return vectorator(this).filter(predicate);\n  }\n\n  at(index: number): T | undefined {\n    return this.get(index);\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  join(separator?: string | undefined): string {\n    return this.toArray().join(separator);\n  }\n\n  toJSON(): any {\n    return this.toArray();\n  }\n\n  //--------------------------\n  // Method not implemented\n  //--------------------------\n\n  [n: number]: T;\n\n  pop(): T | undefined {\n    throw new Error('Method not implemented.');\n  }\n  concat(...items: Array<ConcatArray<T>>): T[];\n  concat(...items: Array<T | ConcatArray<T>>): T[] {\n    throw new Error('Method not implemented.');\n  }\n  reverse(): T[] {\n    throw new Error('Method not implemented.');\n  }\n  shift(): T | undefined {\n    throw new Error('Method not implemented.');\n  }\n  sort(compareFn?: ((a: T, b: T) => number) | undefined): this {\n    throw new Error('Method not implemented.');\n  }\n  splice(start: number, deleteCount?: number | undefined): T[];\n  splice(start: number, deleteCount: number, ...items: T[]): T[] {\n    throw new Error('Method not implemented.');\n  }\n  unshift(...items: T[]): number {\n    throw new Error('Method not implemented.');\n  }\n  fill(value: T, start?: number | undefined, end?: number | undefined): this {\n    throw new Error('Method not implemented.');\n  }\n  copyWithin(target: number, start: number, end?: number | undefined): this {\n    throw new Error('Method not implemented.');\n  }\n  // Object not implemented\n  [Symbol.unscopables] = {};\n\n  //--------------------------------------------------------------------------------\n  // Delegated Array function -- these will not be efficient :grimmice:\n  //--------------------------------------------------------------------------------\n\n  slice(start?: number | undefined, end?: number | undefined): T[] {\n    return this.toArray().slice(start, end);\n  }\n  indexOf(searchElement: T, fromIndex?: number | undefined): number {\n    return this.toArray().indexOf(searchElement, fromIndex);\n  }\n  lastIndexOf(searchElement: T, fromIndex?: number | undefined): number {\n    return this.toArray().lastIndexOf(searchElement, fromIndex);\n  }\n  every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[];\n  every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\n  every(predicate: any, thisArg?: unknown): boolean {\n    return this.toArray().every(predicate, thisArg);\n  }\n  some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean {\n    return this.toArray().some(predicate, thisArg);\n  }\n  reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n  reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\n  reduce(callbackfn: unknown, initialValue?: unknown): T {\n    throw new Error('Method not implemented.');\n  }\n  reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  reduceRight(\n    callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T,\n    initialValue: T\n  ): T;\n  reduceRight<U>(\n    callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U,\n    initialValue: U\n  ): U;\n  reduceRight(callbackfn: unknown, initialValue?: unknown): T {\n    throw new Error('Method not implemented.');\n  }\n  find<S extends T>(\n    predicate: (this: void, value: T, index: number, obj: T[]) => value is S,\n    thisArg?: any\n  ): S | undefined;\n  find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined {\n    return this.toArray().find(predicate, thisArg);\n  }\n  findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number {\n    return this.toArray().findIndex(predicate, thisArg);\n  }\n  entries(): IterableIterator<[number, T]> {\n    return this.toArray().entries();\n  }\n  keys(): IterableIterator<number> {\n    return this.toArray().keys();\n  }\n  values(): IterableIterator<T> {\n    return this.toArray().values();\n  }\n  includes(searchElement: T, fromIndex?: number | undefined): boolean {\n    return this.toArray().includes(searchElement, fromIndex);\n  }\n  flatMap<U, This = undefined>(\n    callback: (this: This, value: T, index: number, array: T[]) => U | readonly U[],\n    thisArg?: This | undefined\n  ): U[] {\n    return this.toArray().flatMap(callback, thisArg);\n  }\n  flat<A, D extends number = 1>(this: A, depth?: D | undefined): Array<FlatArray<A, D>> {\n    throw new Error('Method not implemented.');\n  }\n}\n\nconst emptyarray: any[] = [];\n\n/**\n * Use functional programming with your vector\n *\n * @deprecated use a simple Arrays\n */\nexport function vectorator<T>(vector: Vector<T>) {\n  return {\n    *[Symbol.iterator]() {\n      for (let i = 0; i < vector.length; i++) {\n        yield vector.get(i);\n      }\n    },\n\n    forEach(iterator: (row: T, index: number, array: T[]) => void): void {\n      for (let i = 0; i < vector.length; i++) {\n        iterator(vector.get(i), i, emptyarray);\n      }\n    },\n\n    map<V>(transform: (item: T, index: number, array: T[]) => V): V[] {\n      const result: V[] = [];\n      for (let i = 0; i < vector.length; i++) {\n        result.push(transform(vector.get(i), i, emptyarray));\n      }\n      return result;\n    },\n\n    /** Add a predicate where you return true if it should *keep* the value */\n    filter(predicate: (item: T, index: number, array: T[]) => boolean): T[] {\n      const result: T[] = [];\n      let count = 0;\n      for (const val of this) {\n        if (predicate(val, count++, emptyarray)) {\n          result.push(val);\n        }\n      }\n      return result;\n    },\n  };\n}\n","import { makeArrayIndexableVector } from '../types';\n\nimport { FunctionalVector } from './FunctionalVector';\n\ninterface CircularOptions<T> {\n  buffer?: T[];\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * Circular vector uses a single buffer to capture a stream of values\n * overwriting the oldest value on add.\n *\n * This supports adding to the 'head' or 'tail' and will grow the buffer\n * to match a configured capacity.\n *\n * @public\n * @deprecated use a simple Arrays\n */\nexport class CircularVector<T = any> extends FunctionalVector<T> {\n  private buffer: T[];\n  private index: number;\n  private capacity: number;\n  private tail: boolean;\n\n  constructor(options: CircularOptions<T>) {\n    super();\n\n    this.buffer = options.buffer || [];\n    this.capacity = this.buffer.length;\n    this.tail = 'head' !== options.append;\n    this.index = 0;\n\n    this.add = this.getAddFunction();\n    if (options.capacity) {\n      this.setCapacity(options.capacity);\n    }\n    return makeArrayIndexableVector(this);\n  }\n\n  /**\n   * This gets the appropriate add function depending on the buffer state:\n   *  * head vs tail\n   *  * growing buffer vs overwriting values\n   */\n  private getAddFunction(): (value: T) => void {\n    // When we are not at capacity, it should actually modify the buffer\n    if (this.capacity > this.buffer.length) {\n      if (this.tail) {\n        return (value: T) => {\n          this.buffer.push(value);\n          if (this.buffer.length >= this.capacity) {\n            this.add = this.getAddFunction();\n          }\n        };\n      } else {\n        return (value: T) => {\n          this.buffer.unshift(value);\n          if (this.buffer.length >= this.capacity) {\n            this.add = this.getAddFunction();\n          }\n        };\n      }\n    }\n\n    if (this.tail) {\n      return (value: T) => {\n        this.buffer[this.index] = value;\n        this.index = (this.index + 1) % this.buffer.length;\n      };\n    }\n\n    // Append values to the head\n    return (value: T) => {\n      let idx = this.index - 1;\n      if (idx < 0) {\n        idx = this.buffer.length - 1;\n      }\n      this.buffer[idx] = value;\n      this.index = idx;\n    };\n  }\n\n  setCapacity(v: number) {\n    if (this.capacity === v) {\n      return;\n    }\n    // Make a copy so it is in order and new additions can be at the head or tail\n    const copy = this.toArray();\n    if (v > this.length) {\n      this.buffer = copy;\n    } else if (v < this.capacity) {\n      // Shrink the buffer\n      const delta = this.length - v;\n      if (this.tail) {\n        this.buffer = copy.slice(delta, copy.length); // Keep last items\n      } else {\n        this.buffer = copy.slice(0, copy.length - delta); // Keep first items\n      }\n    }\n    this.capacity = v;\n    this.index = 0;\n    this.add = this.getAddFunction();\n  }\n\n  setAppendMode(mode: 'head' | 'tail') {\n    const tail = 'head' !== mode;\n    if (tail !== this.tail) {\n      this.buffer = this.toArray().reverse();\n      this.index = 0;\n      this.tail = tail;\n      this.add = this.getAddFunction();\n    }\n  }\n\n  reverse() {\n    return this.buffer.reverse();\n  }\n\n  get(index: number) {\n    return this.buffer[(index + this.index) % this.buffer.length];\n  }\n\n  set(index: number, value: T) {\n    this.buffer[(index + this.index) % this.buffer.length] = value;\n  }\n\n  get length() {\n    return this.buffer.length;\n  }\n}\n","import { guessFieldTypeFromValue } from '../dataframe/processDataFrame';\nimport { Field, FieldType } from '../types/dataFrame';\n\nexport function makeFieldParser(value: unknown, field: Field) {\n  if (!field.type) {\n    if (field.name === 'time' || field.name === 'Time') {\n      field.type = FieldType.time;\n    } else {\n      field.type = guessFieldTypeFromValue(value);\n    }\n  }\n\n  if (field.type === FieldType.number) {\n    return (value: string) => {\n      return parseFloat(value);\n    };\n  }\n\n  // Will convert anything that starts with \"T\" to true\n  if (field.type === FieldType.boolean) {\n    return (value: string) => {\n      return !(value[0] === 'F' || value[0] === 'f' || value[0] === '0');\n    };\n  }\n\n  // Just pass the string back\n  return (value: string) => value;\n}\n","import { isString } from 'lodash';\n\nimport { QueryResultMeta } from '../types/data';\nimport { Field, DataFrame, DataFrameDTO, FieldDTO, FieldType } from '../types/dataFrame';\nimport { makeFieldParser } from '../utils/fieldParser';\nimport { FunctionalVector } from '../vector/FunctionalVector';\n\nimport { guessFieldTypeFromValue, guessFieldTypeForField, toDataFrameDTO } from './processDataFrame';\n\n/** @deprecated */\nexport type MutableField<T = any> = Field<T>;\n\n/** @deprecated */\ntype MutableVectorCreator = (buffer?: any[]) => any[];\n\nexport const MISSING_VALUE = undefined; // Treated as connected in new graph panel\n\n/**\n * MutableDataFrame is a complex wrapper around the DataFrame interface\n *\n * @deprecated use standard DataFrame, or create one with PartialDataFrame\n */\nexport class MutableDataFrame<T = any> extends FunctionalVector<T> implements DataFrame {\n  name?: string;\n  refId?: string;\n  meta?: QueryResultMeta;\n  fields: MutableField[] = [];\n\n  private first: any[] = [];\n  private creator: MutableVectorCreator;\n\n  constructor(source?: DataFrame | DataFrameDTO, creator?: MutableVectorCreator) {\n    super();\n\n    // This creates the underlying storage buffers\n    this.creator = creator\n      ? creator\n      : (buffer?: any[]) => {\n          return buffer ?? [];\n        };\n\n    // Copy values from\n    if (source) {\n      const { name, refId, meta, fields } = source;\n      if (name) {\n        this.name = name;\n      }\n      if (refId) {\n        this.refId = refId;\n      }\n      if (meta) {\n        this.meta = meta;\n      }\n      if (fields) {\n        for (const f of fields) {\n          this.addField(f);\n        }\n      }\n    }\n\n    // Get Length to show up if you use spread\n    Object.defineProperty(this, 'length', {\n      enumerable: true,\n      get: () => {\n        return this.first.length;\n      },\n    });\n  }\n\n  // Defined for Vector interface\n  get length() {\n    return this.first.length;\n  }\n\n  addFieldFor(value: unknown, name?: string): Field {\n    return this.addField({\n      name: name || '', // Will be filled in\n      type: guessFieldTypeFromValue(value),\n    });\n  }\n\n  addField(f: Field | FieldDTO, startLength?: number): Field {\n    let buffer: any[] | undefined = undefined;\n\n    if (f.values) {\n      buffer = f.values;\n    }\n\n    let type = f.type;\n\n    if (!type && ('time' === f.name || 'Time' === f.name)) {\n      type = FieldType.time;\n    } else {\n      if (!type && buffer && buffer.length) {\n        type = guessFieldTypeFromValue(buffer[0]);\n      }\n      if (!type) {\n        type = FieldType.other;\n      }\n    }\n\n    // Make sure it has a name\n    let name = f.name;\n    if (!name) {\n      name = `Field ${this.fields.length + 1}`;\n    }\n\n    const field: Field = {\n      ...f,\n      name,\n      type,\n      config: f.config || {},\n      values: this.creator(buffer),\n    };\n\n    if (type === FieldType.other) {\n      type = guessFieldTypeForField(field);\n      if (type) {\n        field.type = type;\n      }\n    }\n\n    this.fields.push(field);\n    this.first = this.fields[0].values;\n\n    // Make sure the field starts with a given length\n    if (startLength) {\n      while (field.values.length < startLength) {\n        field.values.push(MISSING_VALUE);\n      }\n    } else {\n      this.validate();\n    }\n\n    return field;\n  }\n\n  validate() {\n    // Make sure all arrays are the same length\n    const length = this.fields.reduce((v: number, f) => {\n      return Math.max(v, f.values.length);\n    }, 0);\n\n    // Add empty elements until everything matches\n    for (const field of this.fields) {\n      while (field.values.length !== length) {\n        field.values.push(MISSING_VALUE);\n      }\n    }\n  }\n\n  private parsers: Map<Field, (v: string) => any> | undefined = undefined;\n\n  /**\n   * @deprecated unclear if this is actually used\n   */\n  setParser(field: Field, parser: (v: string) => any) {\n    if (!this.parsers) {\n      this.parsers = new Map<Field, (v: string) => any>();\n    }\n    this.parsers.set(field, parser);\n    return parser;\n  }\n\n  private parseValue(field: Field, v: string) {\n    let p = this.parsers?.get(field);\n    if (!p) {\n      p = this.setParser(field, makeFieldParser(v, field));\n    }\n    return p(v);\n  }\n\n  /**\n   * This will add each value to the corresponding column\n   */\n  appendRow(row: unknown[]) {\n    // Add any extra columns\n    for (let i = this.fields.length; i < row.length; i++) {\n      this.addField({\n        name: `Field ${i + 1}`,\n        type: guessFieldTypeFromValue(row[i]),\n      });\n    }\n\n    // The first line may change the field types\n    if (this.length < 1) {\n      for (let i = 0; i < this.fields.length; i++) {\n        const f = this.fields[i];\n        if (!f.type || f.type === FieldType.other) {\n          f.type = guessFieldTypeFromValue(row[i]);\n        }\n      }\n    }\n\n    for (let i = 0; i < this.fields.length; i++) {\n      const f = this.fields[i];\n      let v = row[i];\n      if (f.type !== FieldType.string && isString(v)) {\n        v = this.parseValue(f, v);\n      }\n      f.values.push(v);\n    }\n  }\n\n  /** support standard array push syntax */\n  push(...vals: T[]): number {\n    for (const v of vals) {\n      this.add(v);\n    }\n    return this.length;\n  }\n\n  reverse() {\n    for (const field of this.fields) {\n      field.values.reverse();\n    }\n    return this;\n  }\n\n  /**\n   * Add values from an object to corresponding fields. Similar to appendRow but does not create new fields.\n   */\n  add(value: T): void {\n    // Will add one value for every field\n    const obj = value as any;\n    for (const field of this.fields) {\n      let val = obj[field.name];\n\n      if (field.type !== FieldType.string && isString(val)) {\n        val = this.parseValue(field, val);\n      }\n\n      if (val === undefined) {\n        val = MISSING_VALUE;\n      }\n\n      field.values.push(val);\n    }\n  }\n\n  set(index: number, value: T) {\n    if (index > this.length) {\n      throw new Error('Unable to set value beyond current length');\n    }\n\n    const obj = (value as any) || {};\n    for (const field of this.fields) {\n      field.values[index] = obj[field.name];\n    }\n  }\n\n  /**\n   * Get an object with a property for each field in the DataFrame\n   */\n  get(idx: number): T {\n    const v: any = {};\n    for (const field of this.fields) {\n      v[field.name] = field.values[idx];\n    }\n    return v as T;\n  }\n\n  /**\n   * The simplified JSON values used in JSON.stringify()\n   */\n  toJSON() {\n    return toDataFrameDTO(this);\n  }\n}\n","import { CircularVector } from '../vector/CircularVector';\n\nimport { MutableDataFrame } from './MutableDataFrame';\n\ninterface CircularOptions {\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * This dataframe can have values constantly added, and will never\n * exceed the given capacity\n */\nexport class CircularDataFrame<T = any> extends MutableDataFrame<T> {\n  constructor(options: CircularOptions) {\n    super(undefined, (buffer) => {\n      return new CircularVector({\n        ...options,\n        buffer,\n      });\n    });\n  }\n}\n","// Libraries\nimport { defaults } from 'lodash';\nimport Papa, { ParseConfig, Parser, ParseResult } from 'papaparse';\n\n// Types\nimport { MutableDataFrame } from '../dataframe/MutableDataFrame';\nimport { guessFieldTypeFromValue } from '../dataframe/processDataFrame';\nimport { getFieldDisplayName } from '../field';\nimport { DataFrame, Field, FieldConfig, FieldType } from '../types';\nimport { formattedValueToString } from '../valueFormats';\n\nexport enum CSVHeaderStyle {\n  full,\n  name,\n  none,\n}\n\n// Subset of all parse options\nexport interface CSVConfig {\n  delimiter?: string; // default: \",\"\n  newline?: string; // default: \"\\r\\n\"\n  quoteChar?: string; // default: '\"'\n  encoding?: string; // default: \"\",\n  useExcelHeader?: boolean; // default: false\n  headerStyle?: CSVHeaderStyle;\n}\n\nexport interface CSVParseCallbacks {\n  /**\n   * Get a callback before any rows are processed\n   * This can return a modified table to force any\n   * Column configurations\n   */\n  onHeader: (fields: Field[]) => void;\n\n  // Called after each row is read\n  onRow: (row: string[]) => void;\n}\n\nexport interface CSVOptions {\n  config?: CSVConfig;\n  callback?: CSVParseCallbacks;\n}\n\nexport function readCSV(csv: string, options?: CSVOptions): DataFrame[] {\n  return new CSVReader(options).readCSV(csv);\n}\n\nenum ParseState {\n  Starting,\n  InHeader,\n  ReadingRows,\n}\n\nexport class CSVReader {\n  config: CSVConfig;\n  callback?: CSVParseCallbacks;\n\n  state: ParseState;\n  data: MutableDataFrame[];\n  current: MutableDataFrame;\n\n  constructor(options?: CSVOptions) {\n    if (!options) {\n      options = {};\n    }\n    this.config = options.config || {};\n    this.callback = options.callback;\n\n    this.current = new MutableDataFrame({ fields: [] });\n    this.state = ParseState.Starting;\n    this.data = [];\n  }\n\n  // PapaParse callback on each line\n  private chunk = (results: ParseResult<string[]>, parser: Parser): void => {\n    for (let i = 0; i < results.data.length; i++) {\n      const line = results.data[i];\n      if (line.length < 1) {\n        continue;\n      }\n      const first = line[0]; // null or value, papaparse does not return ''\n      if (first) {\n        // Comment or header queue\n        if (first.startsWith('#')) {\n          // Look for special header column\n          // #{columkey}#a,b,c\n          const idx = first.indexOf('#', 2);\n          if (idx > 0) {\n            const k = first.slice(1, idx);\n            const isName = 'name' === k;\n\n            // Simple object used to check if headers match\n            const headerKeys: FieldConfig = {\n              unit: '#',\n            };\n\n            // Check if it is a known/supported column\n            if (isName || headerKeys.hasOwnProperty(k)) {\n              // Starting a new table after reading rows\n              if (this.state === ParseState.ReadingRows) {\n                this.current = new MutableDataFrame({ fields: [] });\n                this.data.push(this.current);\n              }\n\n              const v = first.slice(idx + 1);\n              if (isName) {\n                this.current.addFieldFor(undefined, v);\n                for (let j = 1; j < line.length; j++) {\n                  this.current.addFieldFor(undefined, line[j]);\n                }\n              } else {\n                const { fields } = this.current;\n                for (let j = 0; j < fields.length; j++) {\n                  if (!fields[j].config) {\n                    fields[j].config = {};\n                  }\n                  const disp = fields[j].config as any; // any lets name lookup\n                  disp[k] = j === 0 ? v : line[j];\n                }\n              }\n\n              this.state = ParseState.InHeader;\n              continue;\n            }\n          } else if (this.state === ParseState.Starting) {\n            this.state = ParseState.InHeader;\n            continue;\n          }\n          // Ignore comment lines\n          continue;\n        }\n\n        if (this.state === ParseState.Starting) {\n          const type = guessFieldTypeFromValue(first);\n          if (type === FieldType.string) {\n            for (const s of line) {\n              this.current.addFieldFor(undefined, s);\n            }\n            this.state = ParseState.InHeader;\n            continue;\n          }\n          this.state = ParseState.InHeader; // fall through to read rows\n        }\n      }\n\n      // Add the current results to the data\n      if (this.state !== ParseState.ReadingRows) {\n        // anything???\n      }\n\n      this.state = ParseState.ReadingRows;\n\n      // Make sure column structure is valid\n      if (line.length > this.current.fields.length) {\n        const { fields } = this.current;\n        for (let f = fields.length; f < line.length; f++) {\n          this.current.addFieldFor(line[f]);\n        }\n        if (this.callback) {\n          this.callback.onHeader(this.current.fields);\n        }\n      }\n\n      this.current.appendRow(line);\n      if (this.callback) {\n        // // Send the header after we guess the type\n        // if (this.series.rows.length === 0) {\n        //   this.callback.onHeader(this.series);\n        // }\n        this.callback.onRow(line);\n      }\n    }\n  };\n\n  readCSV(text: string): MutableDataFrame[] {\n    this.current = new MutableDataFrame({ fields: [] });\n    this.data = [this.current];\n\n    const papacfg = {\n      ...this.config,\n      dynamicTyping: false,\n      skipEmptyLines: true,\n      comments: false, // Keep comment lines\n      chunk: this.chunk,\n    } as ParseConfig;\n\n    Papa.parse(text, papacfg);\n\n    return this.data;\n  }\n}\n\ntype FieldWriter = (value: unknown) => string;\n\nfunction writeValue(value: unknown, config: CSVConfig): string {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const str = value.toString();\n  if (str.includes('\"')) {\n    // Escape the double quote characters\n    return config.quoteChar + str.replace(/\"/gi, '\"\"') + config.quoteChar;\n  }\n  if (str.includes('\\n') || (config.delimiter && str.includes(config.delimiter))) {\n    return config.quoteChar + str + config.quoteChar;\n  }\n  return str;\n}\n\nfunction makeFieldWriter(field: Field, config: CSVConfig): FieldWriter {\n  if (field.display) {\n    return (value: unknown) => {\n      const displayValue = field.display!(value);\n      return writeValue(formattedValueToString(displayValue), config);\n    };\n  }\n\n  return (value: unknown) => writeValue(value, config);\n}\n\nfunction getHeaderLine(key: string, fields: Field[], config: CSVConfig): string {\n  const isName = 'name' === key;\n  const isType = 'type' === key;\n\n  for (const f of fields) {\n    const display = f.config;\n    if (isName || isType || (display && display.hasOwnProperty(key))) {\n      let line = '#' + key + '#';\n      for (let i = 0; i < fields.length; i++) {\n        if (i > 0) {\n          line = line + config.delimiter;\n        }\n\n        let v = fields[i].name;\n        if (isType) {\n          v = fields[i].type;\n        } else if (isName) {\n          // already name\n        } else {\n          v = (fields[i].config as any)[key];\n        }\n        if (v) {\n          line = line + writeValue(v, config);\n        }\n      }\n      return line + config.newline;\n    }\n  }\n  return '';\n}\n\nfunction getLocaleDelimiter(): string {\n  const arr = ['x', 'y'];\n  if (arr.toLocaleString) {\n    return arr.toLocaleString().charAt(1);\n  }\n  return ',';\n}\n\nexport function toCSV(data: DataFrame[], config?: CSVConfig): string {\n  if (!data) {\n    return '';\n  }\n\n  config = defaults(config, {\n    delimiter: getLocaleDelimiter(),\n    newline: '\\r\\n',\n    quoteChar: '\"',\n    encoding: '',\n    headerStyle: CSVHeaderStyle.name,\n    useExcelHeader: false,\n  });\n  let csv = config.useExcelHeader ? `sep=${config.delimiter}${config.newline}` : '';\n\n  for (let s = 0; s < data.length; s++) {\n    const series = data[s];\n    const { fields } = series;\n\n    // ignore frames with no fields\n    if (fields.length === 0) {\n      continue;\n    }\n\n    if (config.headerStyle === CSVHeaderStyle.full) {\n      csv =\n        csv +\n        getHeaderLine('name', fields, config) +\n        getHeaderLine('type', fields, config) +\n        getHeaderLine('unit', fields, config) +\n        getHeaderLine('dateFormat', fields, config);\n    } else if (config.headerStyle === CSVHeaderStyle.name) {\n      for (let i = 0; i < fields.length; i++) {\n        if (i > 0) {\n          csv += config.delimiter;\n        }\n        csv += `\"${getFieldDisplayName(fields[i], series).replace(/\"/g, '\"\"')}\"`;\n      }\n      csv += config.newline;\n    }\n\n    const length = fields[0].values.length;\n\n    if (length > 0) {\n      const writers = fields.map((field) => makeFieldWriter(field, config!));\n      for (let i = 0; i < length; i++) {\n        for (let j = 0; j < fields.length; j++) {\n          if (j > 0) {\n            csv = csv + config.delimiter;\n          }\n\n          const v = fields[j].values[i];\n          if (v !== null) {\n            csv = csv + writers[j](v);\n          }\n        }\n\n        if (i !== length - 1) {\n          csv = csv + config.newline;\n        }\n      }\n    }\n\n    if (s !== data.length - 1) {\n      csv = csv + config.newline;\n    }\n  }\n\n  return csv;\n}\n","import { LogLevel } from '@grafana/data';\n\nlet index = 0;\n\nexport function getRandomLogLevel(): LogLevel {\n  const v = Math.random();\n  if (v > 0.9) {\n    return LogLevel.critical;\n  }\n  if (v > 0.8) {\n    return LogLevel.error;\n  }\n  if (v > 0.7) {\n    return LogLevel.warning;\n  }\n  if (v > 0.4) {\n    return LogLevel.info;\n  }\n  if (v > 0.3) {\n    return LogLevel.debug;\n  }\n  if (v > 0.1) {\n    return LogLevel.trace;\n  }\n  return LogLevel.unknown;\n}\n\nexport function getNextWord() {\n  index = (index + Math.floor(Math.random() * 5)) % words.length;\n  return words[index];\n}\n\nexport function getRandomLine(length = 60) {\n  let line = getNextWord();\n  while (line.length < length) {\n    line += ' ' + getNextWord();\n  }\n  return line;\n}\n\nconst words = [\n  'At',\n  'vero',\n  'eos',\n  'et',\n  'accusamus',\n  'et',\n  'iusto',\n  'odio',\n  'dignissimos',\n  'ducimus',\n  'qui',\n  'blanditiis',\n  'praesentium',\n  'voluptatum',\n  'deleniti',\n  'atque',\n  'corrupti',\n  'quos',\n  'dolores',\n  'et',\n  'quas',\n  'molestias',\n  'excepturi',\n  'sint',\n  'occaecati',\n  'cupiditate',\n  'non',\n  'provident',\n  'similique',\n  'sunt',\n  'in',\n  'culpa',\n  'qui',\n  'officia',\n  'deserunt',\n  'mollitia',\n  'animi',\n  'id',\n  'est',\n  'laborum',\n  'et',\n  'dolorum',\n  'fuga',\n  'Et',\n  'harum',\n  'quidem',\n  'rerum',\n  'facilis',\n  'est',\n  'et',\n  'expedita',\n  'distinctio',\n  'Nam',\n  'libero',\n  'tempore',\n  'cum',\n  'soluta',\n  'nobis',\n  'est',\n  'eligendi',\n  'optio',\n  'cumque',\n  'nihil',\n  'impedit',\n  'quo',\n  'minus',\n  'id',\n  'quod',\n  'maxime',\n  'placeat',\n  'facere',\n  'possimus',\n  'omnis',\n  'voluptas',\n  'assumenda',\n  'est',\n  'omnis',\n  'dolor',\n  'repellendus',\n  'Temporibus',\n  'autem',\n  'quibusdam',\n  'et',\n  'aut',\n  'officiis',\n  'debitis',\n  'aut',\n  'rerum',\n  'necessitatibus',\n  'saepe',\n  'eveniet',\n  'ut',\n  'et',\n  'voluptates',\n  'repudiandae',\n  'sint',\n  'et',\n  'molestiae',\n  'non',\n  'recusandae',\n  'Itaque',\n  'earum',\n  'rerum',\n  'hic',\n  'tenetur',\n  'a',\n  'sapiente',\n  'delectus',\n  'ut',\n  'aut',\n  'reiciendis',\n  'voluptatibus',\n  'maiores',\n  'alias',\n  'consequatur',\n  'aut',\n  'perferendis',\n  'doloribus',\n  'asperiores',\n  'repellat',\n];\n","import { defaults } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  FieldType,\n  CircularDataFrame,\n  CSVReader,\n  Field,\n  LoadingState,\n  DataFrameSchema,\n  DataFrameData,\n  StreamingDataFrame,\n} from '@grafana/data';\n\nimport { getRandomLine } from './LogIpsum';\nimport { TestData, StreamingQuery } from './dataquery.gen';\n\nexport const defaultStreamQuery: StreamingQuery = {\n  type: 'signal',\n  speed: 250, // ms\n  spread: 3.5,\n  noise: 2.2,\n  bands: 1,\n};\n\nexport function runStream(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n  const query = defaults(target.stream, defaultStreamQuery);\n  if ('signal' === query.type) {\n    return runSignalStream(target, query, req);\n  }\n  if ('logs' === query.type) {\n    return runLogsStream(target, query, req);\n  }\n  if ('fetch' === query.type) {\n    return runFetchStream(target, query, req);\n  }\n  throw new Error(`Unknown Stream Type: ${query.type}`);\n}\n\nexport function runSignalStream(\n  target: TestData,\n  query: StreamingQuery,\n  req: DataQueryRequest<TestData>\n): Observable<DataQueryResponse> {\n  return new Observable<DataQueryResponse>((subscriber) => {\n    const streamId = `signal-${req.panelId}-${target.refId}`;\n    const maxDataPoints = req.maxDataPoints || 1000;\n\n    const schema: DataFrameSchema = {\n      refId: target.refId,\n      fields: [\n        { name: 'time', type: FieldType.time },\n        { name: target.alias ?? 'value', type: FieldType.number },\n      ],\n    };\n\n    const { spread, speed, bands = 0, noise } = query;\n    for (let i = 0; i < bands; i++) {\n      const suffix = bands > 1 ? ` ${i + 1}` : '';\n      schema.fields.push({ name: 'Min' + suffix, type: FieldType.number });\n      schema.fields.push({ name: 'Max' + suffix, type: FieldType.number });\n    }\n\n    const frame = StreamingDataFrame.fromDataFrameJSON({ schema }, { maxLength: maxDataPoints });\n\n    let value = Math.random() * 100;\n    let timeoutId: ReturnType<typeof setTimeout>;\n    let lastSent = -1;\n\n    const addNextRow = (time: number) => {\n      value += (Math.random() - 0.5) * spread;\n\n      const data: DataFrameData = {\n        values: [[time], [value]],\n      };\n\n      let min = value;\n      let max = value;\n\n      for (let i = 0; i < bands; i++) {\n        min = min - Math.random() * noise;\n        max = max + Math.random() * noise;\n\n        data.values.push([min]);\n        data.values.push([max]);\n      }\n\n      const event = { data };\n      return frame.push(event);\n    };\n\n    // Fill the buffer on init\n    if (true) {\n      let time = Date.now() - maxDataPoints * speed;\n      for (let i = 0; i < maxDataPoints; i++) {\n        addNextRow(time);\n        time += speed;\n      }\n    }\n\n    const pushNextEvent = () => {\n      lastSent = Date.now();\n      addNextRow(lastSent);\n      subscriber.next({\n        data: [frame],\n        key: streamId,\n        state: LoadingState.Streaming,\n      });\n      timeoutId = setTimeout(pushNextEvent, speed);\n    };\n\n    // Send first event in 5ms\n    setTimeout(pushNextEvent, 5);\n\n    return () => {\n      console.log('unsubscribing to stream ' + streamId);\n      clearTimeout(timeoutId);\n    };\n  });\n}\n\nexport function runLogsStream(\n  target: TestData,\n  query: StreamingQuery,\n  req: DataQueryRequest<TestData>\n): Observable<DataQueryResponse> {\n  return new Observable<DataQueryResponse>((subscriber) => {\n    const streamId = `logs-${req.panelId}-${target.refId}`;\n    const maxDataPoints = req.maxDataPoints || 1000;\n\n    const data = new CircularDataFrame({\n      append: 'tail',\n      capacity: maxDataPoints,\n    });\n    data.refId = target.refId;\n    data.name = target.alias || 'Logs ' + target.refId;\n    data.addField({ name: 'line', type: FieldType.string });\n    data.addField({ name: 'time', type: FieldType.time });\n    data.meta = { preferredVisualisationType: 'logs' };\n\n    const { speed } = query;\n\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    const pushNextEvent = () => {\n      data.fields[0].values.push(getRandomLine());\n      data.fields[1].values.push(Date.now());\n\n      subscriber.next({\n        data: [data],\n        key: streamId,\n      });\n\n      timeoutId = setTimeout(pushNextEvent, speed);\n    };\n\n    // Send first event in 5ms\n    setTimeout(pushNextEvent, 5);\n\n    return () => {\n      console.log('unsubscribing to stream ' + streamId);\n      clearTimeout(timeoutId);\n    };\n  });\n}\n\nexport function runFetchStream(\n  target: TestData,\n  query: StreamingQuery,\n  req: DataQueryRequest<TestData>\n): Observable<DataQueryResponse> {\n  return new Observable<DataQueryResponse>((subscriber) => {\n    const streamId = `fetch-${req.panelId}-${target.refId}`;\n    const maxDataPoints = req.maxDataPoints || 1000;\n\n    let data = new CircularDataFrame({\n      append: 'tail',\n      capacity: maxDataPoints,\n    });\n    data.refId = target.refId;\n    data.name = target.alias || 'Fetch ' + target.refId;\n\n    let reader: ReadableStreamDefaultReader<Uint8Array>;\n    const csv = new CSVReader({\n      callback: {\n        onHeader: (fields: Field[]) => {\n          // Clear any existing fields\n          if (data.fields.length) {\n            data = new CircularDataFrame({\n              append: 'tail',\n              capacity: maxDataPoints,\n            });\n            data.refId = target.refId;\n            data.name = 'Fetch ' + target.refId;\n          }\n          for (const field of fields) {\n            data.addField(field);\n          }\n        },\n        onRow: (row) => {\n          data.add(row);\n        },\n      },\n    });\n\n    const processChunk = (value: ReadableStreamReadResult<Uint8Array>): any => {\n      if (value.value) {\n        const text = new TextDecoder().decode(value.value);\n        csv.readCSV(text);\n      }\n\n      subscriber.next({\n        data: [data],\n        key: streamId,\n        state: value.done ? LoadingState.Done : LoadingState.Streaming,\n      });\n\n      if (value.done) {\n        console.log('Finished stream');\n        subscriber.complete(); // necessary?\n        return;\n      }\n\n      return reader.read().then(processChunk);\n    };\n\n    if (!query.url) {\n      throw new Error('query.url is not defined');\n    }\n\n    fetch(new Request(query.url)).then((response) => {\n      if (response.body) {\n        reader = response.body.getReader();\n        reader.read().then(processChunk);\n      }\n    });\n\n    return () => {\n      // Cancel fetch?\n      console.log('unsubscribing to stream ' + streamId);\n    };\n  });\n}\n","import React, { FormEvent, useMemo } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { selectors as editorSelectors } from '@grafana/e2e-selectors';\nimport { InlineField, InlineFieldRow, InlineSwitch, Input, Select, Icon, TextArea } from '@grafana/ui';\n\nimport { RandomWalkEditor, StreamingClientEditor } from './components';\nimport { CSVContentEditor } from './components/CSVContentEditor';\nimport { CSVFileEditor } from './components/CSVFileEditor';\nimport { CSVWavesEditor } from './components/CSVWaveEditor';\nimport ErrorEditor from './components/ErrorEditor';\nimport { GrafanaLiveEditor } from './components/GrafanaLiveEditor';\nimport { NodeGraphEditor } from './components/NodeGraphEditor';\nimport { PredictablePulseEditor } from './components/PredictablePulseEditor';\nimport { RawFrameEditor } from './components/RawFrameEditor';\nimport { SimulationQueryEditor } from './components/SimulationQueryEditor';\nimport { USAQueryEditor, usaQueryModes } from './components/USAQueryEditor';\nimport { defaultCSVWaveQuery, defaultPulseQuery, defaultQuery } from './constants';\nimport { CSVWave, NodesQuery, TestData, TestDataQueryType, USAQuery } from './dataquery.gen';\nimport { TestDataDataSource } from './datasource';\nimport { defaultStreamQuery } from './runStreams';\n\nconst endpoints = [\n  { value: 'datasources', label: 'Data Sources' },\n  { value: 'search', label: 'Search' },\n  { value: 'annotations', label: 'Annotations' },\n];\n\nconst selectors = editorSelectors.components.DataSource.TestData.QueryTab;\n\nexport interface EditorProps {\n  onChange: (value: any) => void;\n  query: TestData;\n  ds: TestDataDataSource;\n}\n\nexport type Props = QueryEditorProps<TestDataDataSource, TestData>;\n\nexport const QueryEditor = ({ query, datasource, onChange, onRunQuery }: Props) => {\n  query = { ...defaultQuery, ...query };\n\n  const { loading, value: scenarioList } = useAsync(async () => {\n    // migrate manual_entry (unusable since 7, removed in 8)\n    if (query.scenarioId === TestDataQueryType.ManualEntry && query.points) {\n      let csvContent = 'Time,Value\\n';\n      for (const point of query.points) {\n        csvContent += `${point[1]},${point[0]}\\n`;\n      }\n      onChange({\n        refId: query.refId,\n        datasource: query.datasource,\n        scenarioId: TestDataQueryType.CSVContent,\n        csvContent,\n      });\n    }\n\n    const vals = await datasource.getScenarios();\n    const hideAlias = [TestDataQueryType.Simulation, TestDataQueryType.Annotations];\n    return vals.map((v) => ({\n      ...v,\n      hideAliasField: hideAlias.includes(v.id as TestDataQueryType),\n    }));\n  }, []);\n\n  const onUpdate = (query: TestData) => {\n    onChange(query);\n    onRunQuery();\n  };\n\n  const currentScenario = useMemo(\n    () => scenarioList?.find((scenario) => scenario.id === query.scenarioId),\n    [scenarioList, query]\n  );\n  const scenarioId = currentScenario?.id;\n  const description = currentScenario?.description;\n\n  const onScenarioChange = (item: SelectableValue<string>) => {\n    const scenario = scenarioList?.find((sc) => sc.id === item.value);\n\n    if (!scenario) {\n      return;\n    }\n\n    // Clear model from existing props that belong to other scenarios\n    const update: TestData = {\n      scenarioId: item.value! as TestDataQueryType,\n      refId: query.refId,\n      alias: query.alias,\n      datasource: query.datasource,\n    };\n\n    if (scenario.stringInput) {\n      update.stringInput = scenario.stringInput;\n    }\n\n    switch (scenario.id) {\n      case TestDataQueryType.GrafanaAPI:\n        update.stringInput = 'datasources';\n        break;\n      case TestDataQueryType.StreamingClient:\n        update.stream = defaultStreamQuery;\n        break;\n      case TestDataQueryType.Live:\n        update.channel = 'random-2s-stream'; // default stream\n        break;\n      case TestDataQueryType.Simulation:\n        update.sim = { key: { type: 'flight', tick: 10 } }; // default stream\n        break;\n      case TestDataQueryType.PredictablePulse:\n        update.pulseWave = defaultPulseQuery;\n        break;\n      case TestDataQueryType.PredictableCSVWave:\n        update.csvWave = defaultCSVWaveQuery;\n        break;\n      case TestDataQueryType.Annotations:\n        update.lines = 10;\n        break;\n      case TestDataQueryType.USA:\n        update.usa = {\n          mode: usaQueryModes[0].value,\n        };\n    }\n\n    onUpdate(update);\n  };\n\n  const onInputChange = (e: FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.currentTarget;\n    let newValue: string | number | boolean = value;\n\n    if (type === 'number') {\n      newValue = Number(value);\n    }\n\n    if (name === 'levelColumn' && e.currentTarget instanceof HTMLInputElement) {\n      newValue = e.currentTarget.checked;\n    }\n\n    onUpdate({ ...query, [name]: newValue });\n  };\n\n  const onFieldChange = (field: string) => (e: { target: { name: string; value: string; type: string } }) => {\n    const { name, value, type } = e.target;\n    let newValue: string | number = value;\n\n    if (type === 'number') {\n      newValue = Number(value);\n    }\n\n    onUpdate({ ...query, [field]: { ...(query as any)[field], [name]: newValue } });\n  };\n\n  const onEndPointChange = ({ value }: SelectableValue) => {\n    onUpdate({ ...query, stringInput: value });\n  };\n\n  const onStreamClientChange = onFieldChange('stream');\n  const onPulseWaveChange = onFieldChange('pulseWave');\n  const onUSAStatsChange = (usa?: USAQuery) => {\n    onUpdate({ ...query, usa });\n  };\n\n  const onCSVWaveChange = (csvWave?: CSVWave[]) => {\n    onUpdate({ ...query, csvWave });\n  };\n\n  const options = useMemo(\n    () =>\n      (scenarioList || [])\n        .map((item) => ({ label: item.name, value: item.id }))\n        .sort((a, b) => a.label.localeCompare(b.label)),\n    [scenarioList]\n  );\n\n  // Common options that can be added to various scenarios\n  const show = useMemo(() => {\n    const scenarioId = query.scenarioId ?? '';\n    return {\n      labels: ['random_walk', 'predictable_pulse'].includes(scenarioId),\n      dropPercent: ['csv_content', 'csv_file'].includes(scenarioId),\n    };\n  }, [query?.scenarioId]);\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <>\n      <InlineFieldRow aria-label={selectors.scenarioSelectContainer}>\n        <InlineField labelWidth={14} label=\"Scenario\">\n          <Select\n            inputId={`test-data-scenario-select-${query.refId}`}\n            options={options}\n            value={options.find((item) => item.value === query.scenarioId)}\n            onChange={onScenarioChange}\n            width={32}\n          />\n        </InlineField>\n        {currentScenario?.stringInput && (\n          <InlineField label=\"String Input\">\n            <Input\n              width={32}\n              id={`stringInput-${query.refId}`}\n              name=\"stringInput\"\n              placeholder={query.stringInput}\n              value={query.stringInput}\n              onChange={onInputChange}\n            />\n          </InlineField>\n        )}\n        {Boolean(!currentScenario?.hideAliasField) && (\n          <InlineField label=\"Alias\" labelWidth={14}>\n            <Input\n              width={32}\n              id={`alias-${query.refId}`}\n              type=\"text\"\n              placeholder=\"optional\"\n              pattern='[^<>&\\\\\"]+'\n              name=\"alias\"\n              value={query.alias}\n              onChange={onInputChange}\n            />\n          </InlineField>\n        )}\n        {show.dropPercent && (\n          <InlineField label=\"Drop\" tooltip={'Drop a random set of points'}>\n            <Input\n              type=\"number\"\n              min={0}\n              max={100}\n              step={5}\n              width={8}\n              onChange={onInputChange}\n              name=\"dropPercent\"\n              placeholder=\"0\"\n              value={query.dropPercent}\n              suffix={<Icon name=\"percentage\" />}\n            />\n          </InlineField>\n        )}\n        {show.labels && (\n          <InlineField\n            label=\"Labels\"\n            labelWidth={14}\n            tooltip={\n              <>\n                Set labels using a key=value syntax:\n                <br />\n                {`{ key = \"value\", key2 = \"value\" }`}\n                <br />\n                key=&quot;value&quot;, key2=&quot;value&quot;\n                <br />\n                key=value, key2=value\n                <br />\n                Value can contain templates:\n                <br />\n                $seriesIndex - replaced with index of the series\n              </>\n            }\n          >\n            <Input\n              width={32}\n              id={`labels-${query.refId}`}\n              name=\"labels\"\n              onChange={onInputChange}\n              value={query?.labels}\n              placeholder=\"key=value, key2=value2\"\n            />\n          </InlineField>\n        )}\n      </InlineFieldRow>\n\n      {scenarioId === TestDataQueryType.RandomWalk && (\n        <RandomWalkEditor onChange={onInputChange} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.StreamingClient && (\n        <StreamingClientEditor onChange={onStreamClientChange} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.Live && <GrafanaLiveEditor onChange={onUpdate} query={query} ds={datasource} />}\n      {scenarioId === TestDataQueryType.Simulation && (\n        <SimulationQueryEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.RawFrame && (\n        <RawFrameEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.CSVFile && <CSVFileEditor onChange={onUpdate} query={query} ds={datasource} />}\n      {scenarioId === TestDataQueryType.CSVContent && (\n        <CSVContentEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.Logs && (\n        <InlineFieldRow>\n          <InlineField label=\"Lines\" labelWidth={14}>\n            <Input\n              type=\"number\"\n              name=\"lines\"\n              value={query.lines}\n              width={32}\n              onChange={onInputChange}\n              placeholder=\"10\"\n            />\n          </InlineField>\n          <InlineField label=\"Level\" labelWidth={14}>\n            <InlineSwitch onChange={onInputChange} name=\"levelColumn\" value={!!query.levelColumn} />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n      {scenarioId === TestDataQueryType.Annotations && (\n        <InlineFieldRow>\n          <InlineField label=\"Count\" labelWidth={14}>\n            <Input\n              type=\"number\"\n              name=\"lines\"\n              value={query.lines}\n              width={32}\n              onChange={onInputChange}\n              placeholder=\"10\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n      {scenarioId === TestDataQueryType.USA && <USAQueryEditor onChange={onUSAStatsChange} query={query.usa ?? {}} />}\n      {scenarioId === TestDataQueryType.GrafanaAPI && (\n        <InlineField labelWidth={14} label=\"Endpoint\">\n          <Select\n            options={endpoints}\n            onChange={onEndPointChange}\n            width={32}\n            value={endpoints.find((ep) => ep.value === query.stringInput)}\n          />\n        </InlineField>\n      )}\n\n      {scenarioId === TestDataQueryType.Arrow && (\n        <InlineField grow>\n          <TextArea\n            name=\"stringInput\"\n            value={query.stringInput}\n            rows={10}\n            placeholder=\"Copy base64 text data from query result\"\n            onChange={onInputChange}\n          />\n        </InlineField>\n      )}\n\n      {scenarioId === TestDataQueryType.FlameGraph && (\n        <InlineField label={'Diff profile'} grow>\n          <InlineSwitch\n            value={Boolean(query.flamegraphDiff)}\n            onChange={(e) => {\n              onUpdate({ ...query, flamegraphDiff: e.currentTarget.checked });\n            }}\n          />\n        </InlineField>\n      )}\n\n      {scenarioId === TestDataQueryType.PredictablePulse && (\n        <PredictablePulseEditor onChange={onPulseWaveChange} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.PredictableCSVWave && (\n        <CSVWavesEditor onChange={onCSVWaveChange} waves={query.csvWave} />\n      )}\n      {scenarioId === TestDataQueryType.NodeGraph && (\n        <NodeGraphEditor onChange={(val: NodesQuery) => onChange({ ...query, nodes: val })} query={query} />\n      )}\n      {scenarioId === TestDataQueryType.ServerError500 && (\n        <ErrorEditor onChange={onUpdate} query={query} ds={datasource} />\n      )}\n      {scenarioId === TestDataQueryType.Trace && (\n        <InlineField labelWidth={14} label=\"Span count\">\n          <Input\n            type=\"number\"\n            name=\"spanCount\"\n            value={query.spanCount}\n            width={32}\n            onChange={onInputChange}\n            placeholder=\"10\"\n          />\n        </InlineField>\n      )}\n\n      {description && <p>{description}</p>}\n    </>\n  );\n};\n","// Libraries\nimport React, { PureComponent } from 'react';\n\nimport { PluginConfigPageProps, DataSourcePluginMeta, DataSourceJsonData } from '@grafana/data';\nimport { LinkButton } from '@grafana/ui';\n\n// Types\n\ninterface Props extends PluginConfigPageProps<DataSourcePluginMeta<DataSourceJsonData>> {}\n\nexport class TestInfoTab extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        See github for more information about setting up a reproducible test environment.\n        <br />\n        <br />\n        <LinkButton\n          variant=\"secondary\"\n          href=\"https://github.com/grafana/grafana/tree/main/devenv\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </LinkButton>\n        <br />\n      </div>\n    );\n  }\n}\n","import { DataQuery as SchemaDataQuery, DataSourceRef as SchemaDataSourceRef } from '@grafana/schema';\n\n/**\n * @deprecated use the type from @grafana/schema\n */\nexport interface DataQuery extends SchemaDataQuery {}\n\n/**\n * @deprecated use the type from @grafana/schema\n */\nexport interface DataSourceRef extends SchemaDataSourceRef {}\n\n/**\n * Attached to query results (not persisted)\n *\n * @public\n */\nexport enum DataTopic {\n  Annotations = 'annotations',\n  AlertStates = 'alertStates',\n}\n\n/**\n * Abstract representation of any label-based query\n * @internal\n */\nexport interface AbstractQuery extends SchemaDataQuery {\n  labelMatchers: AbstractLabelMatcher[];\n}\n\n/**\n * @internal\n */\nexport enum AbstractLabelOperator {\n  Equal = 'Equal',\n  NotEqual = 'NotEqual',\n  EqualRegEx = 'EqualRegEx',\n  NotEqualRegEx = 'NotEqualRegEx',\n}\n\n/**\n * @internal\n */\nexport type AbstractLabelMatcher = {\n  name: string;\n  value: string;\n  operator: AbstractLabelOperator;\n};\n\n/**\n * @internal\n */\nexport interface DataSourceWithQueryImportSupport<TQuery extends SchemaDataQuery> {\n  importFromAbstractQueries(labelBasedQuery: AbstractQuery[]): Promise<TQuery[]>;\n}\n\n/**\n * @internal\n */\nexport interface DataSourceWithQueryExportSupport<TQuery extends SchemaDataQuery> {\n  exportToAbstractQueries(query: TQuery[]): Promise<AbstractQuery[]>;\n}\n\n/**\n * @internal\n */\nexport const hasQueryImportSupport = <TQuery extends SchemaDataQuery>(\n  datasource: unknown\n): datasource is DataSourceWithQueryImportSupport<TQuery> => {\n  if (!datasource || typeof datasource !== 'object') {\n    return false;\n  }\n\n  return 'importFromAbstractQueries' in datasource;\n};\n\n/**\n * @internal\n */\nexport const hasQueryExportSupport = <TQuery extends SchemaDataQuery>(\n  datasource: unknown\n): datasource is DataSourceWithQueryExportSupport<TQuery> => {\n  if (!datasource || typeof datasource !== 'object') {\n    return false;\n  }\n  return 'exportToAbstractQueries' in datasource;\n};\n","import { ScopedVars } from '../types';\n\nconst SEARCH_FILTER_VARIABLE = '__searchFilter';\n\nexport const containsSearchFilter = (query: string | unknown): boolean =>\n  query && typeof query === 'string' ? query.indexOf(SEARCH_FILTER_VARIABLE) !== -1 : false;\n\nexport interface SearchFilterOptions {\n  searchFilter?: string;\n}\n\nexport const getSearchFilterScopedVar = (args: {\n  query: string;\n  wildcardChar: string;\n  options?: SearchFilterOptions;\n}): ScopedVars => {\n  const { query, wildcardChar } = args;\n  if (!containsSearchFilter(query)) {\n    return {};\n  }\n\n  let { options } = args;\n\n  options = options || { searchFilter: '' };\n  const value = options.searchFilter ? `${options.searchFilter}${wildcardChar}` : `${wildcardChar}`;\n\n  return {\n    __searchFilter: {\n      value,\n      text: '',\n    },\n  };\n};\n","/**\n * The channel id is defined as:\n *\n *   ${scope}/${namespace}/${path}\n *\n * The scope drives how the namespace is used and controlled\n *\n * @alpha\n */\nexport enum LiveChannelScope {\n  DataSource = 'ds', // namespace = data source ID\n  Plugin = 'plugin', // namespace = plugin name (singleton works for apps too)\n  Grafana = 'grafana', // namespace = feature\n  Stream = 'stream', // namespace = id for the managed data stream\n}\n\n/**\n * The type of data to expect in a given channel\n *\n * @alpha\n */\nexport enum LiveChannelType {\n  DataStream = 'stream', // each message contains a batch of rows that will be appended to previous values\n  DataFrame = 'frame', // each message is an entire data frame and should *replace* previous content\n  JSON = 'json', // arbitrary json message\n}\n\nexport enum LiveChannelConnectionState {\n  /** The connection is not yet established */\n  Pending = 'pending',\n  /** Connected to the channel */\n  Connected = 'connected',\n  /** Connecting to a channel */\n  Connecting = 'connecting',\n  /** Disconnected from the channel.  The channel will reconnect when possible */\n  Disconnected = 'disconnected',\n  /** Was at some point connected, and will not try to reconnect */\n  Shutdown = 'shutdown',\n  /** Channel configuration was invalid and will not connect */\n  Invalid = 'invalid',\n}\n\nexport enum LiveChannelEventType {\n  Status = 'status',\n  Join = 'join',\n  Leave = 'leave',\n  Message = 'message',\n}\n\n/**\n * @alpha -- experimental\n */\nexport interface LiveChannelStatusEvent {\n  type: LiveChannelEventType.Status;\n\n  /**\n   * {scope}/{namespace}/{path}\n   */\n  id: string;\n\n  /**\n   * unix millies timestamp for the last status change\n   */\n  timestamp: number;\n\n  /**\n   * flag if the channel is actively connected to the channel.\n   * This may be false while the connections get established or if the network is lost\n   * As long as the `shutdown` flag is not set, the connection will try to reestablish\n   */\n  state: LiveChannelConnectionState;\n\n  /**\n   * When joining a channel, there may be an initial packet in the subscribe method\n   */\n  message?: any;\n\n  /**\n   * The last error.\n   *\n   * This will remain in the status until a new message is successfully received from the channel\n   */\n  error?: any;\n}\n\nexport interface LiveChannelJoinEvent {\n  type: LiveChannelEventType.Join;\n  user: any; // @alpha -- experimental -- will be filled in when we improve the UI\n}\n\nexport interface LiveChannelLeaveEvent {\n  type: LiveChannelEventType.Leave;\n  user: any; // @alpha -- experimental -- will be filled in when we improve the UI\n}\n\nexport interface LiveChannelMessageEvent<T> {\n  type: LiveChannelEventType.Message;\n  message: T;\n}\n\nexport type LiveChannelEvent<T = any> =\n  | LiveChannelStatusEvent\n  | LiveChannelJoinEvent\n  | LiveChannelLeaveEvent\n  | LiveChannelMessageEvent<T>;\n\nexport function isLiveChannelStatusEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelStatusEvent {\n  return evt.type === LiveChannelEventType.Status;\n}\n\nexport function isLiveChannelJoinEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelJoinEvent {\n  return evt.type === LiveChannelEventType.Join;\n}\n\nexport function isLiveChannelLeaveEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelLeaveEvent {\n  return evt.type === LiveChannelEventType.Leave;\n}\n\nexport function isLiveChannelMessageEvent<T>(evt: LiveChannelEvent<T>): evt is LiveChannelMessageEvent<T> {\n  return evt.type === LiveChannelEventType.Message;\n}\n\n/**\n * @alpha -- experimental\n */\nexport interface LiveChannelPresenceStatus {\n  users: any; // @alpha -- experimental -- will be filled in when we improve the UI\n}\n\n/**\n * @alpha -- experimental\n */\nexport type LiveChannelId = string;\n\n/**\n * @alpha -- experimental\n */\nexport interface LiveChannelAddress {\n  scope: LiveChannelScope;\n  namespace: string; // depends on the scope\n  path: string;\n\n  /**\n   * Additional metadata passed to a channel.  The backend will propagate this JSON object to\n   * each OnSubscribe and RunStream calls.  This value should be constant across multiple requests\n   * to the same channel path\n   */\n  data?: any;\n}\n\n/**\n * Return an address from a string\n *\n * @alpha -- experimental\n */\nexport function parseLiveChannelAddress(id?: string): LiveChannelAddress | undefined {\n  if (id?.length) {\n    let parts = id.trim().split('/');\n    if (parts.length >= 3) {\n      return {\n        scope: parts[0] as LiveChannelScope,\n        namespace: parts[1],\n        path: parts.slice(2).join('/'),\n      };\n    }\n  }\n  return undefined;\n}\n\n/**\n * Check if the address has a scope, namespace, and path\n *\n * @alpha -- experimental\n */\nexport function isValidLiveChannelAddress(addr?: LiveChannelAddress): addr is LiveChannelAddress {\n  return !!(addr?.path && addr.namespace && addr.scope);\n}\n\n/**\n * Convert the address to an explicit channel path\n *\n * @alpha -- experimental\n */\nexport function toLiveChannelId(addr: LiveChannelAddress): LiveChannelId {\n  if (!addr.scope) {\n    return '';\n  }\n  let id = addr.scope as string;\n  if (!addr.namespace) {\n    return id;\n  }\n  id += '/' + addr.namespace;\n  if (!addr.path) {\n    return id;\n  }\n  return id + '/' + addr.path;\n}\n","export interface TreeNode {\n  name: string;\n  children: TreeNode[];\n}\n\n/*\n *  Builds a nested tree like\n *  [\n *    {\n *      name: 'A',\n *      children: [\n *        { name: 'AA', children: [] },\n *        { name: 'AB', children: [] },\n *      ]\n *    }\n *  ]\n */\nfunction buildMetricTree(parent: string, depth: number): TreeNode[] {\n  const chars = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n  const children: TreeNode[] = [];\n\n  if (depth > 5) {\n    return [];\n  }\n\n  for (const letter of chars) {\n    const nodeName = `${parent}${letter}`;\n    children.push({\n      name: nodeName,\n      children: buildMetricTree(nodeName, depth + 1),\n    });\n  }\n\n  return children;\n}\n\nfunction queryTree(children: TreeNode[], query: string[], queryIndex: number): TreeNode[] {\n  if (queryIndex >= query.length) {\n    return children;\n  }\n\n  if (query[queryIndex] === '*') {\n    return children;\n  }\n\n  const nodeQuery = query[queryIndex];\n  let result: TreeNode[] = [];\n  let namesToMatch = [nodeQuery];\n\n  // handle glob queries\n  if (nodeQuery.startsWith('{')) {\n    namesToMatch = nodeQuery.replace(/\\{|\\}/g, '').split(',');\n  }\n\n  for (const node of children) {\n    for (const nameToMatch of namesToMatch) {\n      if (nameToMatch.indexOf('*') !== -1) {\n        const pattern = nameToMatch.replace('*', '');\n        const regex = new RegExp(`^${pattern}.*`, 'gi');\n        if (regex.test(node.name)) {\n          result = result.concat(queryTree([node], query, queryIndex + 1));\n        }\n      } else if (node.name === nameToMatch) {\n        result = result.concat(queryTree(node.children, query, queryIndex + 1));\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function queryMetricTree(query: string): TreeNode[] {\n  if (query.indexOf('value') === 0) {\n    return [{ name: query, children: [] }];\n  }\n\n  const children = buildMetricTree('', 0);\n  return queryTree(children, query.split('.'), 0);\n}\n","export enum NodeGraphDataFrameFieldNames {\n  // Unique identifier [required] [nodes + edges]\n  id = 'id',\n  // Text to show under the node [nodes]\n  title = 'title',\n  // Text to show under the node as second line [nodes]\n  subTitle = 'subtitle',\n  // Main value to be shown inside the node [nodes]\n  mainStat = 'mainstat',\n  // Second value to be shown inside the node under the mainStat [nodes]\n  secondaryStat = 'secondarystat',\n  // Prefix for fields which value will represent part of the color circle around the node, values should add up to 1 [nodes]\n  arc = 'arc__',\n  // Will show a named icon inside the node circle if defined. Can be used only with icons already available in\n  // grafana/ui [nodes]\n  icon = 'icon',\n  // Defines a single color if string (hex or html named value) or color mode config can be used as threshold or\n  // gradient. arc__ fields must not be defined if used [nodes]\n  color = 'color',\n\n  // Id of the source node [required] [edges]\n  source = 'source',\n  // Id of the target node [required] [edges]\n  target = 'target',\n\n  // Prefix for fields which will be shown in a context menu [nodes + edges]\n  detail = 'detail__',\n\n  // Radius of the node [nodes]\n  nodeRadius = 'noderadius',\n\n  // Thickness of the edge [edges]\n  thickness = 'thickness',\n\n  // Whether the node or edge should be highlighted (e.g., shown in red) in the UI\n  highlighted = 'highlighted',\n}\n","/**\n * @public\n */\nexport enum FieldColorModeId {\n  Thresholds = 'thresholds',\n  PaletteClassic = 'palette-classic',\n  PaletteClassicByName = 'palette-classic-by-name',\n  PaletteSaturated = 'palette-saturated',\n  ContinuousGrYlRd = 'continuous-GrYlRd',\n  ContinuousRdYlGr = 'continuous-RdYlGr',\n  ContinuousBlYlRd = 'continuous-BlYlRd',\n  ContinuousYlRd = 'continuous-YlRd',\n  ContinuousBlPu = 'continuous-BlPu',\n  ContinuousYlBl = 'continuous-YlBl',\n  ContinuousBlues = 'continuous-blues',\n  ContinuousReds = 'continuous-reds',\n  ContinuousGreens = 'continuous-greens',\n  ContinuousPurples = 'continuous-purples',\n  Fixed = 'fixed',\n  Shades = 'shades',\n}\n\n/**\n * @public\n */\nexport interface FieldColor {\n  /** The main color scheme mode */\n  mode: FieldColorModeId | string;\n  /** Stores the fixed color value if mode is fixed */\n  fixedColor?: string;\n  /** Some visualizations need to know how to assign a series color from by value color schemes */\n  seriesBy?: FieldColorSeriesByMode;\n}\n\n/**\n * @beta\n */\nexport type FieldColorSeriesByMode = 'min' | 'max' | 'last';\n\nexport const FALLBACK_COLOR = '#808080';\n","import { FieldColorModeId, FieldType, NodeGraphDataFrameFieldNames } from '@grafana/data';\n\nexport const nodes = {\n  fields: [\n    {\n      name: NodeGraphDataFrameFieldNames.id,\n      type: FieldType.string,\n      config: {\n        links: [\n          {\n            title: 'Traces/All',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\"))',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/OK',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\")) { ok = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Errors',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\")) { error = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Faults',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'service(id(name: \"${__data.fields.name}\", type: \"${__data.fields.type}\")) { fault = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n        ],\n      },\n      values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.title,\n      type: FieldType.string,\n      config: { displayName: 'Name' },\n      values: [\n        'auth',\n        'products',\n        'customers',\n        'orders',\n        'products',\n        'orders',\n        'api',\n        'shipping',\n        'orders',\n        'execute-api',\n        'shipping',\n        'www',\n        'api',\n        'www',\n        'products',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.subTitle,\n      type: FieldType.string,\n      config: { displayName: 'Type' },\n      values: [\n        'Compute',\n        'SQL',\n        'SQL',\n        'SQL',\n        'remote',\n        'Function',\n        'Compute',\n        'Function',\n        'Function',\n        'remote',\n        'Function',\n        'Compute',\n        'client',\n        'client',\n        'Compute',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.mainStat,\n      type: FieldType.number,\n      config: { unit: 'ms/t', displayName: 'Average response time' },\n      values: [\n        3.5394042646735553, 15.906441318223264, 4.913011921591567, 7.4163203042094095, 1092, 22.85961441405067,\n        56.135855729084696, 4.45946191601527, 12.818300278280843, 4.25, 12.565442646791492, 77.63447512700567,\n        40.387096774193544, 77.63447512700567, 27.648950187374872,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.secondaryStat,\n      type: FieldType.number,\n      config: { unit: 't/min', displayName: 'Transactions per minute' },\n      values: [\n        50.56317154501667, 682.4, 512.8416666666667, 125.64444444444445, 0.005585812037424941, 137.59722222222223,\n        300.0527777777778, 30.582348853370394, 125.77222222222223, 0.028706417080318163, 30.582348853370394, 165.675,\n        0.100021510002151, 165.675, 162.33055555555555,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'success',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'green' }, displayName: 'Sucesss' },\n      values: [\n        0.9338865684765882, 1, 1, 1, 0.5, 1, 0.9901128505170387, 0.9069260134520997, 1, 0, 0.9069260134520997,\n        0.9624432037288534, 0, 0.9624432037288534, 0.9824945669843769,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'faults',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'red' }, displayName: 'Faults' },\n      values: [\n        0, 0, 0, 0, 0.5, 0, 0.009479813736472288, 0, 0, 0, 0, 0.017168821152524185, 0, 0.017168821152524185,\n        0.01750543301562313,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'errors',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'semi-dark-yellow' }, displayName: 'Errors' },\n      values: [\n        0.06611343152341174, 0, 0, 0, 0, 0, 0.0004073357464890436, 0.09307398654790038, 0, 1, 0.09307398654790038,\n        0.02038797511862247, 1, 0.02038797511862247, 0,\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.arc + 'throttled',\n      type: FieldType.number,\n      config: { color: { mode: FieldColorModeId.Fixed, fixedColor: 'purple' }, displayName: 'Throttled' },\n      values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n  ],\n  meta: { preferredVisualisationType: 'nodeGraph' as const },\n  name: 'nodes',\n};\n\nexport const edges = {\n  fields: [\n    {\n      name: NodeGraphDataFrameFieldNames.id,\n      type: FieldType.string,\n      config: {\n        links: [\n          {\n            title: 'Traces/All',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\")',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/OK',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\") { ok = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Errors',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\") { error = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n          {\n            title: 'Traces/Faults',\n            url: '',\n            internal: {\n              query: {\n                queryType: 'getTraceSummaries',\n                query: 'edge(\"${__data.fields.sourceName}\", \"${__data.fields.targetName}\") { fault = true }',\n              },\n              datasourceUid: 'Ax4erxHGz',\n              datasourceName: 'Trace data source',\n            },\n          },\n        ],\n      },\n      values: [\n        '0__2',\n        '5__8',\n        '6__0',\n        '6__5',\n        '6__9',\n        '6__2',\n        '6__14',\n        '6__4',\n        '8__3',\n        '10__7',\n        '11__0',\n        '11__6',\n        '12__6',\n        '13__11',\n        '14__1',\n        '14__2',\n        '14__10',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.source,\n      type: FieldType.string,\n      config: {},\n      values: [0, 5, 6, 6, 6, 6, 6, 6, 8, 10, 11, 11, 12, 13, 14, 14, 14],\n    },\n    {\n      name: 'sourceName',\n      type: FieldType.string,\n      config: {},\n      values: [\n        'auth',\n        'orders',\n        'api',\n        'api',\n        'api',\n        'api',\n        'api',\n        'api',\n        'orders',\n        'shipping',\n        'www',\n        'www',\n        'api',\n        'www',\n        'products',\n        'products',\n        'products',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.target,\n      type: FieldType.string,\n      config: {},\n      values: [2, 8, 0, 5, 9, 2, 14, 4, 3, 7, 0, 6, 6, 11, 1, 2, 10],\n    },\n    {\n      name: 'targetName',\n      type: FieldType.string,\n      config: {},\n      values: [\n        'customers',\n        'orders',\n        'auth',\n        'orders',\n        'execute-api',\n        'customers',\n        'products',\n        'products',\n        'orders',\n        'shipping',\n        'auth',\n        'api',\n        'api',\n        'www',\n        'products',\n        'customers',\n        'shipping',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.mainStat,\n      type: FieldType.string,\n      config: { displayName: 'Response percentage' },\n      values: [\n        'Success 100.00%',\n        'Success 100.00%',\n        'Success 100.00%',\n        'Success 100.00%',\n        'Errors 100.00%',\n        'Success 100.00%',\n        'Faults 1.75%',\n        'Faults 50.00%',\n        'Success 100.00%',\n        'Errors 9.31%',\n        'Errors 6.62%',\n        'Faults 1.13%',\n        'Errors 100.00%',\n        'Faults 1.72%',\n        'Success 100.00%',\n        'Success 100.00%',\n        'Faults 9.30%',\n      ],\n    },\n    {\n      name: NodeGraphDataFrameFieldNames.secondaryStat,\n      type: FieldType.number,\n      config: { unit: 't/min', displayName: 'Transactions per minute' },\n      values: [\n        50.56317154501667, 125.77222222222223, 0.03333333333333333, 137.59722222222223, 0.022222222222222223,\n        299.96666666666664, 162.33055555555555, 0.005555555555555556, 125.64444444444445, 30.582348853370394,\n        50.51111111111111, 299.9166666666667, 0.100021510002151, 165.675, 682.4, 162.33055555555555, 30.558333333333334,\n      ],\n    },\n  ],\n  meta: { preferredVisualisationType: 'nodeGraph' as const },\n  name: 'edges',\n};\n","import {\n  FieldColorModeId,\n  FieldDTO,\n  FieldType,\n  MutableDataFrame,\n  NodeGraphDataFrameFieldNames,\n  DataFrame,\n} from '@grafana/data';\n\nimport { nodes, edges } from './testData/serviceMapResponse';\n\nexport function generateRandomNodes(count = 10) {\n  const nodes = [];\n  const edges: string[] = [];\n\n  const root = {\n    id: 'root',\n    title: 'root',\n    subTitle: 'client',\n    success: 1,\n    error: 0,\n    stat1: Math.random(),\n    stat2: Math.random(),\n    edges,\n  };\n  nodes.push(root);\n  const nodesWithoutMaxEdges = [root];\n\n  const maxEdges = 3;\n\n  for (let i = 1; i < count; i++) {\n    const node = makeRandomNode(i);\n    nodes.push(node);\n    const sourceIndex = Math.floor(Math.random() * Math.floor(nodesWithoutMaxEdges.length - 1));\n    const source = nodesWithoutMaxEdges[sourceIndex];\n    source.edges.push(node.id);\n    if (source.edges.length >= maxEdges) {\n      nodesWithoutMaxEdges.splice(sourceIndex, 1);\n    }\n    nodesWithoutMaxEdges.push(node);\n  }\n\n  // Add some random edges to create possible cycle\n  const additionalEdges = Math.floor(count / 2);\n  for (let i = 0; i <= additionalEdges; i++) {\n    const sourceIndex = Math.floor(Math.random() * Math.floor(nodes.length - 1));\n    const targetIndex = Math.floor(Math.random() * Math.floor(nodes.length - 1));\n    if (sourceIndex === targetIndex || nodes[sourceIndex].id === '0' || nodes[targetIndex].id === '0') {\n      continue;\n    }\n\n    nodes[sourceIndex].edges.push(nodes[targetIndex].id);\n  }\n\n  const nodeFields: Record<string, Omit<FieldDTO, 'name'> & { values: any[] }> = {\n    [NodeGraphDataFrameFieldNames.id]: {\n      values: [],\n      type: FieldType.string,\n      config: {\n        links: [\n          {\n            title: 'test data link',\n            url: '',\n            internal: {\n              query: { scenarioId: 'logs', alias: 'from service graph', stringInput: 'tes' },\n              datasourceUid: 'gdev-testdata',\n              datasourceName: 'gdev-testdata',\n            },\n          },\n        ],\n      },\n    },\n    [NodeGraphDataFrameFieldNames.title]: {\n      values: [],\n      type: FieldType.string,\n    },\n    [NodeGraphDataFrameFieldNames.subTitle]: {\n      values: [],\n      type: FieldType.string,\n    },\n    [NodeGraphDataFrameFieldNames.mainStat]: {\n      values: [],\n      type: FieldType.number,\n      config: { displayName: 'Transactions per second' },\n    },\n    [NodeGraphDataFrameFieldNames.secondaryStat]: {\n      values: [],\n      type: FieldType.number,\n      config: { displayName: 'Average duration' },\n    },\n    [NodeGraphDataFrameFieldNames.arc + 'success']: {\n      values: [],\n      type: FieldType.number,\n      config: { color: { fixedColor: 'green', mode: FieldColorModeId.Fixed }, displayName: 'Success' },\n    },\n    [NodeGraphDataFrameFieldNames.arc + 'errors']: {\n      values: [],\n      type: FieldType.number,\n      config: { color: { fixedColor: 'red', mode: FieldColorModeId.Fixed }, displayName: 'Errors' },\n    },\n    [NodeGraphDataFrameFieldNames.icon]: {\n      values: [],\n      type: FieldType.string,\n    },\n    [NodeGraphDataFrameFieldNames.nodeRadius]: {\n      values: [],\n      type: FieldType.number,\n    },\n    [NodeGraphDataFrameFieldNames.highlighted]: {\n      values: [],\n      type: FieldType.boolean,\n    },\n  };\n\n  const nodeFrame = new MutableDataFrame({\n    name: 'nodes',\n    fields: Object.keys(nodeFields).map((key) => ({\n      ...nodeFields[key],\n      name: key,\n    })),\n    meta: { preferredVisualisationType: 'nodeGraph' },\n  });\n\n  const edgesFrame: DataFrame = {\n    name: 'edges',\n    fields: [\n      { name: NodeGraphDataFrameFieldNames.id, values: [], type: FieldType.string, config: {} },\n      { name: NodeGraphDataFrameFieldNames.source, values: [], type: FieldType.string, config: {} },\n      { name: NodeGraphDataFrameFieldNames.target, values: [], type: FieldType.string, config: {} },\n      { name: NodeGraphDataFrameFieldNames.mainStat, values: [], type: FieldType.number, config: {} },\n      { name: NodeGraphDataFrameFieldNames.highlighted, values: [], type: FieldType.boolean, config: {} },\n      { name: NodeGraphDataFrameFieldNames.thickness, values: [], type: FieldType.number, config: {} },\n    ],\n    meta: { preferredVisualisationType: 'nodeGraph' },\n    length: 0,\n  };\n\n  const edgesSet = new Set();\n  for (const node of nodes) {\n    nodeFields.id.values.push(node.id);\n    nodeFields.title.values.push(node.title);\n    nodeFields[NodeGraphDataFrameFieldNames.subTitle].values.push(node.subTitle);\n    nodeFields[NodeGraphDataFrameFieldNames.mainStat].values.push(node.stat1);\n    nodeFields[NodeGraphDataFrameFieldNames.secondaryStat].values.push(node.stat2);\n    nodeFields.arc__success.values.push(node.success);\n    nodeFields.arc__errors.values.push(node.error);\n    const rnd = Math.random();\n    nodeFields[NodeGraphDataFrameFieldNames.icon].values.push(rnd > 0.9 ? 'database' : rnd < 0.1 ? 'cloud' : '');\n    nodeFields[NodeGraphDataFrameFieldNames.nodeRadius].values.push(Math.max(rnd * 100, 30)); // ensure a minimum radius of 30 or icons will not fit well in the node\n    nodeFields[NodeGraphDataFrameFieldNames.highlighted].values.push(Math.random() > 0.5);\n\n    for (const edge of node.edges) {\n      const id = `${node.id}--${edge}`;\n      // We can have duplicate edges when we added some more by random\n      if (edgesSet.has(id)) {\n        continue;\n      }\n      edgesSet.add(id);\n      edgesFrame.fields[0].values.push(`${node.id}--${edge}`);\n      edgesFrame.fields[1].values.push(node.id);\n      edgesFrame.fields[2].values.push(edge);\n      edgesFrame.fields[3].values.push(Math.random() * 100);\n      edgesFrame.fields[4].values.push(Math.random() > 0.5);\n      edgesFrame.fields[5].values.push(Math.ceil(Math.random() * 15));\n    }\n  }\n  edgesFrame.length = edgesFrame.fields[0].values.length;\n\n  return [nodeFrame, edgesFrame];\n}\n\nfunction makeRandomNode(index: number) {\n  const success = Math.random();\n  const error = 1 - success;\n  return {\n    id: `service:${index}`,\n    title: `service:${index}`,\n    subTitle: 'service',\n    success,\n    error,\n    stat1: Math.random(),\n    stat2: Math.random(),\n    edges: [],\n    highlighted: Math.random() > 0.5,\n  };\n}\n\nexport function savedNodesResponse() {\n  return [new MutableDataFrame(nodes), new MutableDataFrame(edges)];\n}\n\n// Generates node graph data but only returns the edges\nexport function generateRandomEdges(count = 10) {\n  return generateRandomNodes(count)[1];\n}\n","import { DataFrameDTO, FieldType } from '@grafana/data';\n\nexport const flameGraphData: DataFrameDTO = {\n  name: 'response',\n  // @ts-ignore\n  meta: { preferredVisualisationType: 'flamegraph' },\n  fields: [\n    {\n      name: 'level',\n      values: [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 12, 13, 14, 15, 16, 10, 11, 12, 13, 9, 10, 9, 9, 7, 7, 6, 5, 6, 7,\n        8, 8, 9, 10, 11, 12, 13, 8, 9, 10, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 6, 7, 8, 9, 9, 10, 11, 12, 11, 12,\n        13, 8, 8, 7, 8, 8, 7, 6, 7, 8, 9, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 9, 8, 8, 7, 8, 6, 7, 8, 8, 7, 6, 7, 8,\n        8, 8, 9, 10, 11, 12, 4, 5, 6, 7, 8, 9, 9, 10, 11, 9, 10, 7, 4, 5, 6, 7, 8, 8, 7, 8, 9, 10, 11, 12, 13, 10, 10,\n        11, 9, 10, 10, 11, 12, 13, 14, 15, 16, 17, 8, 9, 5, 6, 7, 6, 7, 6, 5, 6, 6, 6, 6, 5, 6, 7, 6, 5, 6, 7, 8, 4, 5,\n        6, 5, 6, 5, 4, 5, 5, 3, 4, 5, 6, 7, 7, 8, 7, 8, 9, 8, 9, 8, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\n        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 24, 24, 25, 26, 24, 25, 22, 23, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n        32, 21, 22, 23, 24, 25, 26, 27, 26, 24, 25, 26, 25, 24, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 25, 26,\n        27, 25, 26, 24, 23, 24, 24, 25, 23, 23, 22, 23, 24, 24, 23, 24, 25, 26, 24, 25, 23, 24, 24, 25, 23, 23, 24, 24,\n        23, 23, 23, 23, 23, 24, 25, 22, 23, 24, 25, 22, 23, 24, 25, 26, 27, 28, 25, 26, 27, 28, 29, 24, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 21, 22, 23, 23, 24, 24, 24, 22, 23, 24, 25, 24, 23, 24, 24, 23, 22, 23, 24, 25,\n        25, 26, 27, 24, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 24, 21, 22, 23, 24, 25, 26, 27, 28, 21, 22, 19, 20,\n        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 24, 25, 26, 27, 28, 23, 24, 25, 26, 27, 28, 19, 20,\n        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\n        31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 31, 30, 28, 29, 30, 31, 32, 33, 34,\n        35, 36, 37, 29, 30, 31, 26, 27, 28, 28, 28, 29, 27, 26, 27, 26, 25, 26, 27, 28, 29, 30, 31, 32, 32, 33, 34, 30,\n        31, 32, 33, 34, 33, 34, 35, 36, 37, 38, 39, 29, 30, 31, 32, 32, 27, 28, 28, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n        36, 37, 38, 39, 40, 27, 28, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 28, 27, 28, 28, 29, 27, 27, 28, 27, 27, 26,\n        27, 28, 28, 29, 29, 29, 26, 27, 27, 28, 29, 30, 29, 30, 30, 29, 30, 31, 28, 29, 30, 28, 28, 28, 28, 29, 30, 29,\n        30, 27, 28, 28, 26, 27, 26, 27, 27, 28, 29, 26, 27, 28, 29, 28, 27, 28, 29, 30, 30, 28, 29, 30, 31, 32, 32, 27,\n        28, 26, 25, 25, 26, 27, 28, 29, 30, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n        48, 31, 30, 31, 32, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 29, 26, 27, 28,\n        29, 30, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 31, 30, 29, 29, 29, 25, 26, 27, 28, 26,\n        26, 27, 28, 27, 28, 28, 26, 27, 28, 28, 27, 28, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 25, 25, 26, 27, 28, 25,\n        26, 24, 25, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 33, 34, 34, 32, 33, 34, 34, 32, 28, 29, 30, 31, 27,\n        28, 29, 26, 27, 28, 29, 30, 31, 32, 33, 34, 26, 27, 28, 29, 24, 25, 26, 27, 28, 29, 30, 27, 28, 26, 27, 25, 26,\n        27, 28, 29, 26, 25, 26, 27, 26, 27, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 38, 39, 30, 31, 32, 26, 27,\n        28, 27, 28, 29, 25, 26, 27, 28, 29, 30, 31, 32, 28, 29, 28, 29, 28, 29, 27, 28, 29, 30, 31, 29, 30, 31, 32, 33,\n        34, 35, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 28, 29, 30, 31, 28, 29, 30, 31, 26, 25, 26, 27, 28, 29,\n        27, 28, 29, 30, 25, 26, 15, 14, 15, 16, 17, 13, 14, 15, 16, 15, 16, 17, 18, 19, 20, 12, 13, 14, 15, 16, 17, 10,\n        11, 12, 13, 14, 12, 13, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 9, 2, 3, 1, 2, 3, 4, 5, 6,\n        6, 6, 6, 7, 8, 8, 9, 6, 7, 6, 6, 6, 6, 5, 5, 6, 5, 5, 5, 5, 5, 6, 7, 4, 2, 3, 4, 5, 6, 4, 5, 6, 7, 8, 9, 1, 2,\n        3, 4, 5, 6, 7, 8, 2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5, 6, 1, 2, 3, 3, 4, 3, 2, 1, 2, 3, 4, 5, 6, 5, 6, 7, 8, 5,\n        5, 6, 7, 4, 5, 6, 4, 2, 3, 4, 3, 4, 5, 6, 5, 5, 6, 4, 1, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\n        2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n        23, 16, 17, 18, 19, 16, 17, 18, 19, 20, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n        23, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,\n      ],\n    },\n    {\n      name: 'value',\n      values: [\n        16460000000, 4100000000, 4100000000, 3670000000, 1130000000, 1060000000, 1020000000, 150000000, 150000000,\n        50000000, 30000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 80000000, 40000000, 10000000, 10000000, 530000000, 80000000, 40000000, 70000000,\n        50000000, 50000000, 30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 10000000,\n        390000000, 390000000, 180000000, 70000000, 50000000, 10000000, 20000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 10000000, 10000000, 10000000, 110000000, 80000000, 60000000,\n        10000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        20000000, 10000000, 10000000, 30000000, 20000000, 40000000, 30000000, 20000000, 10000000, 10000000, 40000000,\n        40000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 210000000, 210000000, 210000000,\n        130000000, 130000000, 10000000, 50000000, 40000000, 40000000, 70000000, 10000000, 40000000, 1840000000,\n        240000000, 240000000, 50000000, 10000000, 10000000, 190000000, 130000000, 50000000, 20000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 80000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 60000000, 10000000, 1330000000, 1290000000, 320000000, 10000000,\n        10000000, 10000000, 130000000, 10000000, 10000000, 60000000, 30000000, 100000000, 40000000, 10000000, 10000000,\n        40000000, 30000000, 10000000, 10000000, 70000000, 10000000, 10000000, 50000000, 40000000, 10000000, 30000000,\n        20000000, 10000000, 430000000, 430000000, 430000000, 430000000, 10000000, 40000000, 20000000, 370000000,\n        20000000, 10000000, 180000000, 10000000, 30000000, 10000000, 10000000, 10000000, 5630000000, 5580000000,\n        5580000000, 5580000000, 5580000000, 5580000000, 5580000000, 5580000000, 5580000000, 5540000000, 5540000000,\n        5530000000, 5510000000, 5500000000, 5490000000, 5490000000, 1610000000, 1610000000, 1540000000, 1540000000,\n        190000000, 170000000, 170000000, 10000000, 20000000, 120000000, 10000000, 10000000, 20000000, 20000000,\n        20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 850000000, 350000000, 300000000, 120000000, 110000000, 80000000, 20000000, 10000000, 80000000,\n        40000000, 20000000, 10000000, 10000000, 50000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000,\n        20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 370000000, 40000000, 20000000, 10000000, 100000000,\n        10000000, 10000000, 10000000, 30000000, 30000000, 80000000, 20000000, 10000000, 10000000, 10000000, 40000000,\n        10000000, 10000000, 10000000, 20000000, 10000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 110000000, 110000000, 60000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 480000000, 150000000, 10000000, 130000000, 10000000, 10000000,\n        50000000, 140000000, 80000000, 40000000, 10000000, 10000000, 20000000, 10000000, 10000000, 20000000, 120000000,\n        60000000, 40000000, 10000000, 10000000, 10000000, 10000000, 20000000, 30000000, 30000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 60000000, 60000000, 60000000, 60000000,\n        30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 30000000, 30000000, 30000000, 30000000,\n        30000000, 30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 3880000000, 3880000000, 3880000000,\n        3880000000, 3870000000, 3230000000, 3230000000, 3210000000, 320000000, 70000000, 70000000, 40000000, 40000000,\n        20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000,\n        30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000,\n        20000000, 20000000, 70000000, 60000000, 20000000, 30000000, 10000000, 10000000, 10000000, 100000000, 20000000,\n        50000000, 1850000000, 410000000, 110000000, 110000000, 90000000, 60000000, 60000000, 40000000, 20000000,\n        20000000, 20000000, 30000000, 30000000, 30000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 10000000, 20000000, 20000000, 20000000, 10000000, 10000000, 30000000, 20000000, 10000000,\n        40000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 40000000, 10000000, 80000000, 30000000, 30000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 60000000, 30000000, 30000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 160000000, 120000000, 20000000, 100000000, 50000000, 10000000, 10000000,\n        640000000, 10000000, 550000000, 410000000, 80000000, 60000000, 260000000, 20000000, 170000000, 60000000,\n        30000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 20000000, 50000000, 40000000, 10000000,\n        10000000, 10000000, 70000000, 30000000, 40000000, 290000000, 90000000, 30000000, 10000000, 10000000, 10000000,\n        10000000, 210000000, 20000000, 10000000, 10000000, 10000000, 120000000, 90000000, 90000000, 60000000, 10000000,\n        30000000, 30000000, 30000000, 30000000, 10000000, 20000000, 50000000, 10000000, 10000000, 10000000, 280000000,\n        150000000, 150000000, 150000000, 60000000, 30000000, 80000000, 50000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 130000000, 130000000, 130000000, 70000000, 30000000, 30000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 40000000, 10000000, 590000000, 20000000,\n        20000000, 10000000, 40000000, 150000000, 30000000, 30000000, 120000000, 10000000, 80000000, 370000000,\n        260000000, 40000000, 150000000, 110000000, 90000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 70000000, 60000000,\n        20000000, 20000000, 640000000, 640000000, 250000000, 250000000, 230000000, 180000000, 170000000, 170000000,\n        170000000, 170000000, 50000000, 10000000, 40000000, 10000000, 10000000, 60000000, 60000000, 10000000, 30000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 50000000, 50000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 390000000,\n        60000000, 40000000, 30000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 30000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 90000000, 10000000, 10000000, 60000000, 10000000, 40000000,\n        40000000, 40000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        180000000, 170000000, 50000000, 20000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 30000000, 30000000, 20000000, 20000000, 20000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 90000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 70000000, 70000000,\n        70000000, 70000000, 10000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 10000000, 40000000, 40000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 10000000, 10000000, 6190000000, 6170000000,\n        6170000000, 6070000000, 4460000000, 10000000, 50000000, 440000000, 540000000, 20000000, 10000000, 10000000,\n        10000000, 980000000, 10000000, 50000000, 480000000, 540000000, 50000000, 210000000, 30000000, 30000000,\n        60000000, 180000000, 10000000, 210000000, 20000000, 20000000, 20000000, 100000000, 20000000, 20000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 40000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 10000000, 10000000, 10000000, 10000000, 10000000, 170000000, 160000000, 70000000, 30000000,\n        10000000, 40000000, 10000000, 170000000, 90000000, 90000000, 70000000, 20000000, 10000000, 30000000, 30000000,\n        30000000, 30000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 80000000,\n        10000000, 10000000, 70000000, 60000000, 10000000, 10000000, 20000000, 20000000, 20000000, 10000000, 80000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 20000000, 20000000, 20000000, 20000000, 20000000, 20000000,\n        20000000, 20000000, 20000000, 20000000, 20000000, 20000000, 50000000, 50000000, 50000000, 50000000, 50000000,\n        50000000, 50000000, 10000000, 10000000, 10000000, 60000000, 60000000, 60000000, 60000000, 60000000, 60000000,\n        60000000, 40000000, 40000000, 30000000, 30000000, 30000000, 30000000, 30000000, 30000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,\n        10000000, 10000000,\n      ],\n      config: {\n        unit: 'short',\n      },\n    },\n    {\n      name: 'self',\n      values: [\n        16460, 4100, 4100, 3670, 1130, 1060, 1020, 150, 150, 50, 30, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 80,\n        40, 10, 10, 530, 80, 40, 70, 50, 50, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n        10, 390, 390, 180, 70, 50, 10, 20, 20, 10, 10, 10, 10, 10, 10, 10, 20, 10, 10, 10, 110, 80, 60, 10, 20, 20, 20,\n        10, 10, 10, 10, 10, 10, 10, 20, 10, 10, 30, 20, 40, 30, 20, 10, 10, 40, 40, 10, 10, 10, 10, 10, 10, 10, 210,\n        210, 210, 130, 130, 10, 50, 40, 40, 70, 10, 40, 1840, 240, 240, 50, 10, 10, 190, 130, 50, 20, 10, 10, 10, 10,\n        10, 10, 80, 20, 10, 10, 10, 10, 10, 10, 10, 10, 60, 10, 1330, 1290, 320, 10, 10, 10, 130, 10, 10, 60, 30, 100,\n        40, 10, 10, 40, 30, 10, 10, 70, 10, 10, 50, 40, 10, 30, 20, 10, 430, 430, 430, 430, 10, 40, 20, 370, 20, 10,\n        180, 10, 30, 10, 10, 10, 5630, 5580, 5580, 5580, 5580, 5580, 5580, 5580, 5580, 5540, 5540, 5530, 5510, 5500,\n        5490, 5490, 1610, 1610, 1540, 1540, 190, 170, 170, 10, 20, 120, 10, 10, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 850, 350, 300, 120, 110, 80, 20, 10, 80, 40, 20, 10, 10, 50, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 20, 20, 20, 20, 10, 10, 10, 10, 10, 370, 40, 20, 10, 100, 10, 10, 10, 30, 30, 80, 20, 10,\n        10, 10, 40, 10, 10, 10, 20, 10, 20, 10, 10, 10, 10, 10, 10, 10, 110, 110, 60, 20, 20, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 480, 150, 10, 130, 10, 10, 50, 140, 80, 40, 10, 10, 20,\n        10, 10, 20, 120, 60, 40, 10, 10, 10, 10, 20, 30, 30, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 60, 60, 60, 60, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30,\n        30, 30, 30, 30, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 3880, 3880, 3880, 3880,\n        3870, 3230, 3230, 3210, 320, 70, 70, 40, 40, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 20, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 70, 60, 20, 30, 10, 10, 10, 100, 20, 50,\n        1850, 410, 110, 110, 90, 60, 60, 40, 20, 20, 20, 30, 30, 30, 10, 10, 20, 20, 20, 20, 20, 20, 10, 20, 20, 20, 10,\n        10, 30, 20, 10, 40, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 40, 10, 80, 30, 30, 10, 10, 10, 10, 10,\n        10, 10, 20, 60, 30, 30, 10, 10, 10, 10, 10, 10, 160, 120, 20, 100, 50, 10, 10, 640, 10, 550, 410, 80, 60, 260,\n        20, 170, 60, 30, 20, 20, 20, 10, 10, 10, 20, 50, 40, 10, 10, 10, 70, 30, 40, 290, 90, 30, 10, 10, 10, 10, 210,\n        20, 10, 10, 10, 120, 90, 90, 60, 10, 30, 30, 30, 30, 10, 20, 50, 10, 10, 10, 280, 150, 150, 150, 60, 30, 80, 50,\n        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 130, 130, 130, 70, 30, 30, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 40, 10, 590, 20, 20, 10, 40, 150, 30, 30, 120, 10, 80, 370, 260, 40,\n        150, 110, 90, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 70, 60, 20, 20, 640, 640, 250, 250,\n        230, 180, 170, 170, 170, 170, 50, 10, 40, 10, 10, 60, 60, 10, 30, 10, 10, 10, 10, 10, 50, 50, 20, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 390, 60, 40, 30, 20, 20, 10, 10, 10, 10, 10, 30, 10, 10, 10, 10, 10, 90,\n        10, 10, 60, 10, 40, 40, 40, 30, 30, 30, 30, 30, 30, 30, 30, 10, 10, 10, 10, 10, 10, 20, 10, 10, 10, 10, 10, 180,\n        170, 50, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 30, 30, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 90, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 70, 70, 70, 70, 10, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 10, 10, 10, 10,\n        10, 20, 20, 20, 20, 20, 10, 40, 40, 10, 10, 10, 10, 10, 30, 30, 30, 30, 30, 30, 10, 10, 6190, 6170, 6170, 6070,\n        4460, 10, 50, 440, 540, 20, 10, 10, 10, 980, 10, 50, 480, 540, 50, 210, 30, 30, 60, 180, 10, 210, 20, 20, 20,\n        100, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 40, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20,\n        10, 10, 10, 10, 10, 170, 160, 70, 30, 10, 40, 10, 170, 90, 90, 70, 20, 10, 30, 30, 30, 30, 10, 10, 10, 10, 10,\n        10, 10, 10, 80, 10, 10, 70, 60, 10, 10, 20, 20, 20, 10, 80, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20,\n        20, 20, 20, 20, 50, 50, 50, 50, 50, 50, 50, 10, 10, 10, 60, 60, 60, 60, 60, 60, 60, 40, 40, 30, 30, 30, 30, 30,\n        30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        10, 10, 10, 10,\n      ],\n      config: {\n        unit: 'short',\n      },\n    },\n    {\n      name: 'label',\n      type: FieldType.enum,\n      values: [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 15, 16, 17, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 28, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 40, 28,\n        29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 27, 53, 28, 54, 55, 27, 28, 56, 45, 46, 49, 50, 51, 31, 57, 58, 59, 60,\n        36, 53, 52, 54, 28, 54, 28, 36, 29, 12, 27, 28, 36, 29, 45, 46, 47, 48, 61, 62, 63, 6, 7, 8, 21, 9, 10, 11, 19,\n        20, 23, 64, 14, 15, 18, 65, 66, 15, 15, 15, 15, 15, 16, 65, 18, 16, 66, 18, 65, 66, 67, 68, 69, 31, 70, 71, 72,\n        18, 65, 73, 74, 75, 54, 12, 12, 76, 77, 78, 79, 80, 81, 82, 83, 84, 74, 85, 74, 86, 87, 88, 89, 90, 91, 92, 90,\n        93, 91, 94, 95, 96, 97, 12, 98, 12, 99, 100, 12, 101, 102, 103, 104, 99, 103, 105, 106, 107, 108, 109, 107, 110,\n        107, 111, 107, 112, 107, 113, 114, 115, 116, 117, 118, 119, 120, 95, 121, 122, 123, 124, 125, 126, 12, 127, 125,\n        54, 12, 28, 128, 51, 31, 57, 58, 129, 130, 131, 132, 133, 134, 135, 136, 137, 82, 83, 138, 139, 79, 12, 77, 82,\n        140, 141, 142, 143, 28, 144, 145, 146, 31, 147, 148, 149, 150, 54, 151, 152, 153, 154, 27, 155, 28, 36, 156,\n        157, 135, 158, 159, 160, 140, 150, 54, 53, 152, 153, 161, 160, 162, 159, 163, 164, 78, 79, 165, 166, 154, 138,\n        167, 137, 82, 168, 169, 170, 171, 172, 173, 140, 152, 153, 174, 175, 141, 142, 143, 28, 36, 82, 176, 28, 45, 46,\n        49, 50, 51, 31, 57, 58, 59, 60, 43, 27, 53, 28, 177, 56, 36, 55, 54, 28, 36, 53, 27, 52, 28, 178, 44, 40, 28,\n        29, 45, 46, 49, 155, 54, 28, 144, 145, 146, 31, 147, 148, 179, 180, 181, 29, 182, 183, 184, 185, 186, 187, 180,\n        188, 189, 190, 191, 192, 193, 194, 195, 62, 4, 26, 27, 28, 30, 31, 32, 33, 34, 35, 196, 197, 198, 199, 200, 29,\n        201, 197, 198, 199, 200, 29, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\n        218, 107, 219, 220, 221, 222, 223, 224, 225, 226, 4, 5, 227, 228, 19, 20, 229, 230, 231, 232, 233, 234, 235,\n        236, 237, 235, 236, 238, 239, 240, 241, 242, 217, 243, 244, 26, 245, 40, 28, 30, 31, 32, 33, 34, 35, 27, 28, 29,\n        246, 247, 158, 248, 249, 12, 250, 251, 12, 252, 253, 254, 226, 4, 26, 27, 28, 29, 36, 37, 38, 245, 40, 28, 255,\n        29, 30, 31, 32, 33, 34, 35, 41, 5, 227, 228, 19, 9, 54, 28, 155, 256, 141, 142, 143, 28, 144, 145, 146, 31, 147,\n        148, 179, 180, 181, 257, 159, 140, 152, 153, 258, 175, 69, 31, 70, 71, 196, 83, 259, 248, 249, 12, 260, 249, 12,\n        261, 248, 262, 27, 53, 28, 36, 29, 56, 263, 260, 186, 187, 264, 265, 180, 188, 181, 266, 267, 268, 269, 267,\n        268, 149, 261, 270, 271, 180, 181, 264, 265, 27, 53, 28, 82, 83, 272, 149, 271, 264, 265, 273, 54, 28, 36, 12,\n        256, 274, 275, 159, 276, 141, 142, 143, 28, 29, 36, 158, 159, 277, 278, 279, 4, 5, 227, 244, 280, 228, 19, 20,\n        229, 230, 231, 232, 233, 234, 235, 236, 237, 235, 236, 238, 239, 240, 241, 242, 217, 281, 9, 10, 11, 282, 20,\n        229, 230, 231, 232, 233, 234, 235, 236, 237, 235, 236, 238, 239, 240, 241, 242, 217, 283, 62, 63, 227, 228, 9,\n        19, 281, 229, 230, 231, 232, 233, 234, 235, 236, 237, 284, 285, 286, 287, 288, 20, 289, 283, 244, 290, 291, 27,\n        28, 36, 149, 271, 264, 265, 180, 188, 181, 187, 180, 188, 181, 264, 265, 292, 293, 294, 54, 28, 30, 31, 32, 33,\n        34, 260, 295, 269, 267, 268, 296, 297, 298, 260, 299, 300, 301, 302, 303, 304, 31, 305, 306, 148, 179, 264, 180,\n        181, 188, 307, 180, 188, 181, 149, 308, 309, 269, 267, 310, 308, 309, 311, 31, 312, 313, 314, 315, 316, 317,\n        318, 31, 319, 306, 148, 320, 321, 284, 285, 286, 287, 288, 322, 12, 323, 53, 256, 141, 142, 143, 53, 159, 253,\n        273, 324, 254, 259, 226, 4, 26, 245, 40, 28, 30, 31, 32, 33, 34, 325, 35, 326, 27, 28, 29, 263, 27, 53, 186,\n        187, 180, 292, 293, 327, 328, 329, 330, 331, 332, 333, 334, 323, 53, 335, 54, 336, 329, 330, 331, 332, 337, 338,\n        339, 31, 340, 341, 342, 294, 54, 28, 45, 46, 49, 50, 51, 31, 57, 58, 343, 344, 345, 346, 217, 347, 215, 216,\n        217, 27, 14, 15, 18, 348, 349, 15, 16, 348, 257, 225, 251, 27, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359,\n        360, 361, 362, 363, 364, 182, 183, 184, 185, 146, 365, 366, 367, 352, 353, 27, 53, 368, 355, 358, 359, 360, 361,\n        369, 236, 237, 370, 371, 372, 373, 238, 239, 240, 241, 242, 217, 374, 375, 376, 31, 377, 378, 35, 379, 380, 41,\n        326, 381, 382, 383, 384, 72, 196, 385, 196, 386, 387, 56, 388, 389, 390, 391, 392, 325, 393, 394, 382, 395, 396,\n        397, 398, 399, 400, 31, 401, 402, 403, 404, 405, 406, 407, 408, 409, 31, 410, 411, 412, 413, 414, 415, 213, 214,\n        215, 216, 217, 416, 417, 27, 28, 29, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432,\n        433, 318, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 439, 444, 427, 445, 446, 435, 428, 435, 446, 447,\n        448, 449, 450, 352, 353, 451, 452, 408, 409, 31, 410, 411, 314, 315, 316, 317, 318, 236, 453, 239, 240, 241,\n        242, 217, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 203, 465, 205, 466, 467, 468, 469, 470, 40, 28,\n        45, 46, 49, 50, 471, 472, 473, 474, 148, 475, 476, 473, 474, 148, 307, 180, 181, 191, 477, 193, 478, 479, 480,\n        481, 482, 483, 67, 68, 69, 31, 70, 71, 72, 484, 485, 486, 487, 27, 28, 36, 488, 489, 490, 40, 28, 30, 31, 32,\n        33, 34, 35, 41, 491, 213, 214, 492,\n      ],\n      config: {\n        type: {\n          enum: {\n            text: [\n              'total',\n              'test/pkg/agent.(*Target).start.func1',\n              'test/pkg/agent.(*Target).scrape',\n              'test/pkg/distributor.(*Distributor).Push',\n              'compress/gzip.(*Writer).Write',\n              'compress/flate.(*compressor).write',\n              'compress/flate.(*compressor).deflate',\n              'compress/flate.(*compressor).writeBlock',\n              'compress/flate.(*huffmanBitWriter).writeBlock',\n              'compress/flate.(*huffmanBitWriter).indexTokens',\n              'compress/flate.(*huffmanEncoder).generate',\n              'compress/flate.(*huffmanEncoder).bitCounts',\n              'runtime.memmove',\n              'compress/flate.(*huffmanEncoder).assignEncodingAndSize',\n              'sort.Sort',\n              'sort.quickSort',\n              'sort.insertionSort',\n              'compress/flate.(*byFreq).sort',\n              'sort.doPivot',\n              'compress/flate.(*huffmanBitWriter).writeTokens',\n              'compress/flate.(*huffmanBitWriter).writeCode',\n              'compress/flate.offsetCode',\n              'compress/flate.(*huffmanBitWriter).dynamicSize',\n              'compress/flate.(*compressor).findMatch',\n              'compress/flate.matchLen',\n              'compress/flate.hash4',\n              'compress/flate.NewWriter',\n              'runtime.newobject',\n              'runtime.mallocgc',\n              'runtime.memclrNoHeapPointers',\n              'runtime.gcAssistAlloc',\n              'runtime.systemstack',\n              'runtime.gcAssistAlloc.func1',\n              'runtime.gcAssistAlloc1',\n              'runtime.gcDrainN',\n              'runtime.scanobject',\n              'runtime.heapBitsSetType',\n              'runtime.heapBitsSetTypeGCProg',\n              'runtime.runGCProg',\n              'compress/flate.(*compressor).initDeflate',\n              'runtime.makeslice',\n              'runtime.pageIndexOf',\n              'test/pkg/pprof.OpenRaw',\n              'test/pkg/gen/google/v1.(*Profile).UnmarshalVT',\n              'test/pkg/gen/google/v1.(*Sample).UnmarshalVT',\n              'runtime.(*mcache).nextFree',\n              'runtime.(*mcache).refill',\n              'runtime.(*mcentral).uncacheSpan',\n              'runtime.(*spanSet).push',\n              'runtime.(*mcentral).cacheSpan',\n              'runtime.(*mcentral).grow',\n              'runtime.(*mheap).alloc',\n              'runtime.getMCache',\n              'runtime.nextFreeFast',\n              'runtime.growslice',\n              'test/pkg/gen/google/v1.(*Location).UnmarshalVT',\n              'runtime.heapBitsForAddr',\n              'runtime.(*mheap).alloc.func1',\n              'runtime.(*mheap).allocSpan',\n              'runtime.(*mheap).allocMSpanLocked',\n              'runtime.(*fixalloc).alloc',\n              'runtime.(*headTailIndex).incTail',\n              'compress/gzip.(*Writer).Close',\n              'compress/flate.(*compressor).close',\n              'test/pkg/pprof.(*Profile).Normalize',\n              'test/pkg/pprof.(*sortedSample).Less',\n              'test/pkg/pprof.(*sortedSample).Swap',\n              'runtime.gcWriteBarrierR8',\n              'runtime.gcWriteBarrier',\n              'runtime.wbBufFlush',\n              'runtime.wbBufFlush.func1',\n              'runtime.wbBufFlush1',\n              'runtime.findObject',\n              'test/pkg/pprof.(*Profile).clearSampleReferences',\n              'test/pkg/slices.RemoveInPlace[...]',\n              'test/pkg/pprof.(*Profile).clearSampleReferences.func1',\n              'test/pkg/pprof.StacktracesHasher.Hashes',\n              'github.com/cespare/xxhash/v2.round',\n              'github.com/cespare/xxhash/v2.(*Digest).Sum64',\n              'github.com/cespare/xxhash/v2.(*Digest).Write',\n              'github.com/cespare/xxhash/v2.u64',\n              'github.com/samber/lo.Uniq[...]',\n              'runtime.mapaccess2_fast64',\n              'runtime.memhash64',\n              'runtime.bucketMask',\n              'test/pkg/pprof.(*Profile).Normalize.func1',\n              'test/pkg/pprof.(*Profile).Normalize.func1.1',\n              'test/pkg/gen/google/v1.(*Profile).MarshalToVT',\n              'test/pkg/gen/google/v1.(*Profile).MarshalToSizedBufferVT',\n              'test/pkg/gen/google/v1.(*Sample).MarshalToSizedBufferVT',\n              'test/pkg/gen/google/v1.(*Profile).SizeVT',\n              'test/pkg/gen/google/v1.(*Sample).SizeVT',\n              'test/pkg/gen/google/v1.encodeVarint',\n              'test/pkg/gen/google/v1.(*Location).SizeVT',\n              'io/ioutil.ReadAll',\n              'io.ReadAll',\n              'compress/gzip.(*Reader).Read',\n              'compress/flate.(*decompressor).Read',\n              'compress/flate.(*dictDecoder).tryWriteCopy',\n              'compress/flate.(*decompressor).huffmanBlock',\n              'compress/flate.(*dictDecoder).writeCopy',\n              'compress/flate.(*decompressor).huffSym',\n              'bytes.(*Reader).ReadByte',\n              'compress/flate.(*decompressor).moreBits',\n              'compress/flate.(*decompressor).nextBlock',\n              'net/http.(*conn).serve',\n              'net/http.serverHandler.ServeHTTP',\n              'net/http.HandlerFunc.ServeHTTP',\n              'test/pkg/util.glob..func1.1',\n              'golang.org/x/net/http2/h2c.h2cHandler.ServeHTTP',\n              'test/pkg/create.(*create).initServer.func2.1',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.MiddlewareFunc.func5',\n              'github.com/weaveworks/common/middleware.Log.Wrap.func1',\n              'github.com/weaveworks/common/middleware.Instrument.Wrap.func1',\n              'github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics',\n              'github.com/weaveworks/common/middleware.Instrument.Wrap.func1.2',\n              'github.com/gorilla/mux.(*Router).ServeHTTP',\n              'github.com/bufbuild/connect-go.(*Handler).ServeHTTP',\n              'github.com/bufbuild/connect-go.NewUnaryHandler[...].func1',\n              'github.com/bufbuild/connect-go.NewUnaryHandler[...].func1.1',\n              'test/pkg/ingester.(*Ingester).Push',\n              'github.com/klauspost/compress/gzip.(*Reader).Read',\n              'github.com/klauspost/compress/flate.(*decompressor).Read',\n              'github.com/klauspost/compress/flate.(*dictDecoder).tryWriteCopy',\n              'github.com/klauspost/compress/flate.(*dictDecoder).writeByte',\n              'github.com/klauspost/compress/flate.(*decompressor).huffmanBytesReader',\n              'github.com/klauspost/compress/flate.(*dictDecoder).writeCopy',\n              'github.com/klauspost/compress/flate.(*decompressor).nextBlock',\n              'runtime.(*mcache).allocLarge',\n              'runtime.(*pageAlloc).alloc',\n              'runtime.(*pageAlloc).allocRange',\n              'runtime.(*pageAlloc).update',\n              'runtime.(*pallocBits).summarize',\n              'test/pkg/create.(*Head).Ingest',\n              'test/pkg/create.(*Head).convertSamples',\n              'test/pkg/create.(*deduplicatingSlice[...]).ingest',\n              'test/pkg/create.(*stacktracesHelper).rewrite',\n              'test/pkg/create.idConversionTable.rewriteUint64',\n              'runtime.add',\n              'test/pkg/create.(*stacktracesHelper).key',\n              'runtime.mapassign_fast64',\n              'runtime.hashGrow',\n              'runtime.makeBucketArray',\n              'runtime.newarray',\n              'runtime.profilealloc',\n              'runtime.mProf_Malloc',\n              'runtime.callers',\n              'runtime.callers.func1',\n              'runtime.gentraceback',\n              'runtime.findfunc',\n              'runtime.(*hmap).newoverflow',\n              'runtime.releasem',\n              'runtime.growWork_fast64',\n              'runtime.evacuate_fast64',\n              'encoding/binary.littleEndian.PutUint64',\n              'runtime.acquirem',\n              'test/pkg/create.(*labelCache).rewriteLabels',\n              'runtime.mapaccess1_fast64',\n              'runtime.mapaccess2_faststr',\n              'aeshashbody',\n              'memeqbody',\n              'runtime.mapaccess2',\n              'runtime.memhash_varlen',\n              'runtime.evacuated',\n              'test/pkg/create.(*locationsHelper).key',\n              'runtime.bucketShift',\n              'test/pkg/create.(*stringsHelper).addToRewriter',\n              'test/pkg/create.(*locationsHelper).rewrite',\n              'github.com/prometheus/client_golang/prometheus.(*CounterVec).WithLabelValues',\n              'github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues',\n              'github.com/prometheus/client_golang/prometheus.(*MetricVec).hashLabelValues',\n              'github.com/prometheus/client_golang/prometheus.hashAdd',\n              'test/pkg/create.(*deltaProfiles).computeDelta',\n              'test/pkg/create.deltaSamples',\n              'runtime.typedmemmove',\n              'runtime.bulkBarrierPreWrite',\n              'test/pkg/create.copySlice[...]',\n              'runtime.add1',\n              'runtime.roundupsize',\n              'runtime.pcdatavalue',\n              'runtime.pcvalue',\n              'runtime.step',\n              'github.com/go-kit/log.(*context).Log',\n              'github.com/go-kit/log.bindValues',\n              'github.com/go-kit/log.Caller.func1',\n              'runtime.Caller',\n              'runtime.(*Frames).Next',\n              'runtime.funcline1',\n              'runtime.readvarint',\n              'test/pkg/gen/google/v1.(*Profile).ReturnToVTPool',\n              'test/pkg/gen/google/v1.(*Profile).ResetVT',\n              'github.com/bufbuild/connect-go.(*errorTranslatingSender).Send',\n              'github.com/bufbuild/connect-go.(*connectUnaryHandlerSender).Send',\n              'github.com/bufbuild/connect-go.(*connectUnaryMarshaler).Marshal',\n              'github.com/bufbuild/connect-go.(*compressionPool).Compress',\n              'github.com/bufbuild/connect-go.(*compressionPool).putCompressor',\n              'runtime.spanOf',\n              'compress/gzip.(*Writer).Reset',\n              'compress/gzip.(*Writer).init',\n              'compress/flate.(*Writer).Reset',\n              'compress/flate.(*compressor).reset',\n              'github.com/bufbuild/connect-go.(*compressionPool).getCompressor',\n              'github.com/bufbuild/connect-go.receiveUnaryRequest[...]',\n              'github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Receive',\n              'github.com/bufbuild/connect-go.(*connectUnaryHandlerReceiver).Receive',\n              'github.com/bufbuild/connect-go.(*connectUnaryUnmarshaler).UnmarshalFunc',\n              'bytes.(*Buffer).ReadFrom',\n              'github.com/weaveworks/common/middleware.(*reqBody).Read',\n              'net/http.(*body).Read',\n              'net/http.(*body).readLocked',\n              'net/http/internal.(*chunkedReader).Read',\n              'bufio.(*Reader).Read',\n              'net/http.(*connReader).Read',\n              'net.(*conn).Read',\n              'net.(*netFD).Read',\n              'syscall.Read',\n              'syscall.read',\n              'syscall.Syscall',\n              'net/http.(*ServeMux).ServeHTTP',\n              'net/http/pprof.Index',\n              'net/http/pprof.handler.ServeHTTP',\n              'runtime/pprof.(*Profile).WriteTo',\n              'runtime/pprof.writeAlloc',\n              'runtime/pprof.writeHeapInternal',\n              'runtime/pprof.writeHeapProto',\n              'runtime/pprof.(*profileBuilder).pbSample',\n              'runtime/pprof.(*profileBuilder).flush',\n              'compress/flate.(*compressor).encSpeed',\n              'compress/flate.(*huffmanBitWriter).writeBlockDynamic',\n              'github.com/felixge/httpsnoop.(*rw).Write',\n              'github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1',\n              'github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write',\n              'net/http.(*response).Write',\n              'net/http.(*response).write',\n              'bufio.(*Writer).Write',\n              'bufio.(*Writer).Flush',\n              'net/http.(*chunkWriter).Write',\n              'net/http.checkConnErrorWriter.Write',\n              'net.(*conn).Write',\n              'net.(*netFD).Write',\n              'internal/poll.(*FD).Write',\n              'syscall.write',\n              'compress/flate.token.length',\n              'compress/flate.(*deflateFast).encode',\n              'compress/flate.(*compressor).init',\n              'runtime/pprof.writeHeapProto.func1',\n              'runtime/pprof.(*profileBuilder).pbLabel',\n              'runtime/pprof.(*protobuf).int64Opt',\n              'runtime/pprof.(*protobuf).endMessage',\n              'runtime/pprof.(*protobuf).startMessage',\n              'runtime/pprof.(*protobuf).uint64s',\n              'runtime/pprof.(*protobuf).int64s',\n              'runtime/pprof.(*profileBuilder).appendLocsForStack',\n              'runtime/pprof.(*profileBuilder).emitLocation',\n              'runtime.memclrNoHeapPointersChunked',\n              'runtime.mapassign_faststr',\n              'runtime.mapaccess1_faststr',\n              'runtime.memclrHasPointers',\n              'runtime/pprof.(*profileBuilder).pbLine',\n              'runtime.duffcopy',\n              'runtime.duffzero',\n              'runtime.CallersFrames',\n              'runtime/pprof.allFrames',\n              'runtime.funcInfo.entry',\n              'runtime.(*moduledata).textAddr',\n              'runtime.funcfile',\n              'runtime.findnull',\n              'indexbytebody',\n              'runtime.funcname',\n              'runtime.(*Func).Entry',\n              'runtime.pcdatavalue1',\n              'runtime/pprof.runtime_expandFinalInlineFrame',\n              'runtime/pprof.(*profileBuilder).stringIndex',\n              'runtime.growWork_faststr',\n              'runtime.evacuate_faststr',\n              'runtime.advanceEvacuationMark',\n              'runtime/pprof.(*protobuf).uint64Opt',\n              'runtime.funcdata',\n              'runtime/pprof.(*profileBuilder).build',\n              'compress/flate.(*deflateFast).matchLen',\n              'compress/flate.(*huffmanBitWriter).writeBits',\n              'compress/flate.(*huffmanBitWriter).writeDynamicHeader',\n              'compress/flate.hash',\n              'fmt.Fprintf',\n              'fmt.(*pp).doPrintf',\n              'fmt.(*pp).printArg',\n              'fmt.(*pp).fmtInteger',\n              'fmt.(*fmt).fmtInteger',\n              'compress/flate.token.offset',\n              'compress/flate.load64',\n              'runtime.FuncForPC',\n              'runtime/pprof.newProfileBuilder',\n              'runtime/pprof.(*profileBuilder).readMapping',\n              'os.ReadFile',\n              'runtime.(*Func).Name',\n              'runtime/pprof.scaleHeapSample',\n              'math.archExp',\n              'runtime.(*MemProfileRecord).Stack',\n              'runtime/pprof.writeGoroutine',\n              'runtime/pprof.writeRuntimeProfile',\n              'runtime/pprof.runtime_goroutineProfileWithLabels',\n              'runtime.goroutineProfileWithLabels',\n              'runtime.forEachGRace',\n              'runtime.goroutineProfileWithLabels.func4',\n              'runtime.goroutineProfileWithLabels.func4.1',\n              'runtime.saveg',\n              'runtime.funcspdelta',\n              'runtime.goroutineProfileWithLabels.func1',\n              'runtime.isSystemGoroutine',\n              'runtime.goroutineProfileWithLabels.func2',\n              'runtime.startTheWorld',\n              'runtime.startTheWorld.func1',\n              'runtime.startTheWorldWithSema',\n              'runtime.wakep',\n              'runtime.startm',\n              'runtime.notewakeup',\n              'runtime.futexwakeup',\n              'runtime.futex',\n              'runtime.goroutineProfileWithLabels.func3',\n              'runtime/pprof.printCountProfile',\n              'runtime/pprof.printCountProfile.func1',\n              'bytes.(*Buffer).Write',\n              'runtime.slicebytetostring',\n              'runtime.overLoadFactor',\n              'runtime.heapBits.bits',\n              'runtime.greyobject',\n              'runtime/pprof.parseProcSelfMaps',\n              'runtime/pprof.elfBuildID',\n              'os.OpenFile',\n              'syscall.Open',\n              'syscall.openat',\n              'syscall.Syscall6',\n              'runtime/pprof.parseProcSelfMaps.func1',\n              'bytes.Cut',\n              'runtime/pprof.(*profileBuilder).addMapping',\n              'os.Open',\n              'os.openFileNolog',\n              'os.newFile',\n              'runtime.SetFinalizer',\n              'runtime.SetFinalizer.func2',\n              'runtime.addfinalizer',\n              'runtime.addspecial',\n              'runtime.(*pageAlloc).allocToCache',\n              'os.(*File).Stat',\n              'internal/poll.(*FD).Fstat',\n              'syscall.Fstat',\n              'os.(*File).Read',\n              'runtime/pprof.(*keysByCount).Less',\n              'cmpbody',\n              'github.com/prometheus/client_golang/prometheus.(*GaugeVec).WithLabelValues',\n              'runtime.assertI2I',\n              'runtime.getitab',\n              'runtime.(*itabTableType).find',\n              'github.com/weaveworks/common/middleware.Instrument.getRouteName',\n              'github.com/weaveworks/common/middleware.getRouteName',\n              'github.com/weaveworks/common/middleware.MakeLabelValue',\n              'strings.Trim',\n              'github.com/gorilla/mux.(*Router).Match',\n              'github.com/gorilla/mux.(*Route).Match',\n              'github.com/gorilla/mux.(*routeRegexp).Match',\n              'regexp.(*Regexp).doExecute',\n              'regexp.(*Regexp).backtrack',\n              'regexp.(*Regexp).tryBacktrack',\n              'github.com/weaveworks/common/logging.gokit.Debugf',\n              'github.com/uber/jaeger-client-go.(*Tracer).Extract',\n              'github.com/uber/jaeger-client-go.(*TextMapPropagator).Extract',\n              'runtime.assertE2I2',\n              'github.com/weaveworks/common/middleware.Tracer.Wrap.func1',\n              'net/http.(*response).finishRequest',\n              'net/http.(*chunkWriter).writeHeader',\n              'net/http.Header.writeSubset',\n              'net/http.Header.sortedKeyValues',\n              'sync.(*Pool).Get',\n              'net/http.(*conn).readRequest',\n              'runtime.mapiterinit',\n              'runtime.gcBgMarkWorker',\n              'runtime.gcBgMarkWorker.func2',\n              'runtime.gcDrain',\n              'runtime.(*gcBits).bytep',\n              'runtime.(*mspan).objIndex',\n              'runtime.(*gcWork).put',\n              'runtime.getempty',\n              'runtime.putfull',\n              'runtime.(*lfstack).push',\n              'runtime.(*mspan).markBitsForIndex',\n              'runtime.markBits.isMarked',\n              'runtime.arenaIndex',\n              'runtime.(*gcWork).tryGet',\n              'runtime.trygetfull',\n              'runtime.spanOfUnchecked',\n              'runtime.heapBits.next',\n              'runtime.gcFlushBgCredit',\n              'runtime.(*gcWork).balance',\n              'runtime.handoff',\n              'runtime.(*gcWork).tryGetFast',\n              'runtime.gcMarkDone',\n              'runtime.gcMarkTermination',\n              'runtime.mProf_Flush',\n              'runtime.mProf_FlushLocked',\n              'runtime.(*bucket).mp',\n              'runtime.gcMarkTermination.func4',\n              'runtime.forEachP',\n              'runtime.gcMarkTermination.func4.1',\n              'runtime.(*mcache).prepareForSweep',\n              'runtime.(*mcache).releaseAll',\n              'net/http.(*persistConn).readLoop',\n              'runtime.selectgo',\n              'runtime.send',\n              'runtime.goready',\n              'runtime.goready.func1',\n              'runtime.ready',\n              'runtime.runqput',\n              'bufio.(*Reader).Peek',\n              'bufio.(*Reader).fill',\n              'net/http.(*persistConn).Read',\n              'net/http.(*persistConn).readResponse',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.(*Tracer).gotFirstResponseByte',\n              'runtime.bgsweep',\n              'runtime.sweepone',\n              'runtime.(*sweepLocker).tryAcquire',\n              'runtime.(*sweepLocked).sweep',\n              'runtime.(*gcBitsArena).tryAlloc',\n              'runtime.spanClass.sizeclass',\n              'runtime/internal/atomic.(*Uint32).CompareAndSwap',\n              'runtime.mcall',\n              'runtime.park_m',\n              'runtime.schedule',\n              'runtime.findrunnable',\n              'runtime.netpoll',\n              'runtime.epollwait',\n              'runtime.stopm',\n              'runtime.notesleep',\n              'runtime.futexsleep',\n              'runtime.(*randomOrder).start',\n              'runtime.checkTimers',\n              'runtime.runtimer',\n              'runtime.dodeltimer0',\n              'runtime.gcstopm',\n              'runtime.lock2',\n              'runtime.procyield',\n              'runtime.(*lfstack).pop',\n              'runtime.gosched_m',\n              'runtime.lock',\n              'runtime.goschedImpl',\n              'runtime.execute',\n              'runtime.casgstatus',\n              'net/http.(*persistConn).writeLoop',\n              'net/http.(*Request).write',\n              'net/http.newTransferWriter',\n              'runtime.convI2I',\n              'runtime.chansend1',\n              'runtime.chansend',\n              'net/http.persistConnWriter.Write',\n              'runtime.exitsyscall',\n              'runtime.exitsyscallfast',\n              'runtime.exitsyscallfast_reacquired',\n              'test/pkg/distributor.(*Distributor).Push.func1',\n              'test/pkg/distributor.(*Distributor).sendProfiles',\n              'test/pkg/distributor.(*Distributor).sendProfilesErr',\n              'test/pkg/gen/ingester/v1/ingesterv1connect.(*ingesterServiceClient).Push',\n              'github.com/bufbuild/connect-go.(*Client[...]).CallUnary',\n              'github.com/bufbuild/connect-go.NewClient[...].func2',\n              'github.com/bufbuild/connect-go.NewClient[...].func1',\n              'github.com/bufbuild/connect-go.receiveUnaryResponse[...]',\n              'github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Receive',\n              'github.com/bufbuild/connect-go.(*compressionPool).Decompress',\n              'github.com/bufbuild/connect-go.(*compressionPool).getDecompressor',\n              'compress/gzip.(*Reader).Reset',\n              'compress/gzip.(*Reader).readHeader',\n              'compress/flate.(*dictDecoder).init',\n              'runtime.heapBits.initSpan',\n              'compress/flate.(*decompressor).Reset',\n              'runtime.newstack',\n              'runtime.copystack',\n              'compress/flate.NewReader',\n              'compress/flate.fixedHuffmanDecoderInit',\n              'github.com/bufbuild/connect-go.(*connectClientSender).Send',\n              'github.com/bufbuild/connect-go.(*connectUnaryMarshaler).write',\n              'github.com/bufbuild/connect-go.(*duplexHTTPCall).Write',\n              'io.(*pipe).write',\n              'runtime.chanrecv1',\n              'runtime.chanrecv',\n              'runtime.recv',\n              'github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Close',\n              'github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Close',\n              'github.com/bufbuild/connect-go.(*duplexHTTPCall).CloseRead',\n              'github.com/opentracing-contrib/go-stdlib/nethttp.closeTracker.Close',\n              'runtime/pprof.profileWriter',\n              'runtime/pprof.(*profileBuilder).addCPUData',\n              'runtime/pprof.(*profMap).lookup',\n              'net/http.(*connReader).backgroundRead',\n              'internal/poll.(*FD).Read',\n            ],\n          },\n        },\n      },\n    },\n  ],\n};\n\nexport const flameGraphDataDiff: DataFrameDTO = {\n  name: 'response',\n  meta: { preferredVisualisationType: 'flamegraph' },\n  fields: [\n    {\n      name: 'level',\n      values: [\n        0, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 20, 21,\n        19, 20, 21, 19, 17, 18, 19, 20, 20, 21, 19, 20, 21, 19, 17, 18, 19, 20, 21, 22, 23, 24, 25, 23, 24, 21, 19, 20,\n        21, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 22, 15, 16, 17, 18, 19,\n        20, 17, 18, 19, 20, 21, 22, 23, 23, 24, 24, 25, 21, 17, 18, 19, 19, 17, 18, 19, 20, 16, 17, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 22, 22, 22, 22, 23, 20, 20, 16, 17, 18, 19, 16, 17, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n        24, 17, 18, 19, 20, 21, 22, 23, 15, 16, 15, 16, 12, 13, 9, 9, 10, 9, 10, 6, 6, 6, 6, 7, 8, 6, 7, 2, 3, 4, 5, 6,\n        7, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 10, 11, 12, 13, 14, 15, 16, 16, 17, 18, 19, 20, 21, 22,\n        14, 15, 16, 14, 11, 12, 13, 14, 9, 10, 11, 12, 10, 9, 10, 11, 12, 13, 14, 15, 16, 17, 15, 16, 17, 16, 15, 16,\n        17, 16, 17, 16, 15, 16, 17, 18, 19, 20, 21, 19, 4, 5, 6, 7, 8, 9, 6, 7, 8, 6, 7, 8, 9, 10, 7, 4, 5, 6, 7, 8, 3,\n        4, 5, 6, 7, 8, 9, 10, 11, 12, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 6,\n        7, 8, 9, 10, 11, 7, 8, 6, 7, 8, 9, 10, 11, 12, 13, 6, 7, 8, 9, 10, 11, 12, 13, 14, 6, 7, 5, 6, 7, 8, 9, 10, 11,\n        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 3, 4, 5, 6, 1, 2,\n      ],\n    },\n    {\n      name: 'label',\n      values: [\n        'total',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!Heartbeat.<>c.<.ctor>b__8_0',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!Heartbeat.TimerLoop',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!Heartbeat.OnHeartbeat',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!DateHeaderValueManager.SetDateValues',\n        'Microsoft.Net.Http.Headers!HeaderUtilities.FormatDate',\n        'System!DateTimeFormat.Format',\n        'System.Threading!PortableThreadPool.WorkerThread.WorkerThreadStart',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection<T>.System.Threading.IThreadPoolWorkItem.Execute',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection<T>.ExecuteAsync',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ExecuteAsync>d__6>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.<ExecuteAsync>d__6<T>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.ProcessRequestsAsync<!T0>',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ProcessRequestsAsync>d__12>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.<ProcessRequestsAsync>d__12<TContext>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1OutputProducer..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.ProcessRequestsAsync<!T0>',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ProcessRequestsAsync>d__222>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequestsAsync>d__222<TContext>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.ProcessRequests<!T0>',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<ProcessRequests>d__223>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequests>d__223<TContext>.MoveNext',\n        'Microsoft.AspNetCore.HostFiltering!HostFilteringMiddleware.Invoke',\n        'Microsoft.AspNetCore.Routing!EndpointMiddleware.Invoke',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__0',\n        'Example!BikeService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelSet.BuildUpon',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!LabelSet.Builder.Add',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.TryInsert',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Pyroscope!LabelSet.Builder.Build',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__1',\n        'Example!ScooterService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelSet.BuildUpon',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!LabelSet.Builder.Add',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.TryInsert',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Pyroscope!LabelSet.Builder.Build',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__2',\n        'Example!CarService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelsWrapper.Do',\n        'Example!OrderService.<>c__DisplayClass0_1.<FindNearestVehicle>b__0',\n        'Example!OrderService.CheckDriverAvailability',\n        'Pyroscope!LabelSet.BuildUpon',\n        'System.Collections.Generic!Dictionary<TKey, TKey>..ctor',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!Profiler.get_Instance',\n        'Pyroscope!LabelSet.Builder.Add',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.TryInsert',\n        'System.Collections.Generic!Dictionary<TKey, TKey>.Initialize',\n        'Microsoft.AspNetCore.Http!RequestDelegateFactory.ExecuteWriteStringResponseAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!DefaultHttpResponse.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1OutputProducer.WriteResponseHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers!ConcurrentPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.DefaultPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.AllocateWriteHeadSynchronized',\n        'System.IO.Pipelines!Pipe.CreateSegmentUnsynchronized',\n        'Microsoft.Extensions.Logging!LoggerMessage.<>c__DisplayClass10_0<T1>.<Define>g__Log|0',\n        'Microsoft.Extensions.Logging!Logger<T>.Microsoft.Extensions.Logging.ILogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!LogValues>',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues.<>c<T0>.<.cctor>b__12_0',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues<T0>.ToString',\n        'System!String.FormatHelper',\n        'System!Span<System!Char>.ToString',\n        'System!String.Ctor',\n        'System.Text!StringBuilder.ToString',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.CreateContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.BeginRequest',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.RequestScope',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.HostingLogScope..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpRequestIdentifierFeature.get_TraceIdentifier',\n        'System!String.Create<System!ValueTuple>',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.LogRequestStarting',\n        'Microsoft.Extensions.Logging!Logger.Log<!T0>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!T0>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!T0>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!T0>',\n        'Microsoft.AspNetCore.Hosting!HostingRequestStartingLog.ToString',\n        'System.Buffers!TlsOverPerCoreLockedStacksArrayPool<System!Char>.Rent',\n        'System.Runtime.CompilerServices!DefaultInterpolatedStringHandler.ToStringAndClear',\n        'System!String.Ctor',\n        'System.Buffers!TlsOverPerCoreLockedStacksArrayPool<System!Char>.Return',\n        'System.Buffers!TlsOverPerCoreLockedStacksArrayPool<System!Char>.InitializeTlsBucketsAndTrimming',\n        'System.Text!StringBuilder.ToString',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.StartActivity',\n        'System.Diagnostics!Activity.Start',\n        'System!String.Create<System!ValueTuple>',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'Microsoft.Extensions.Logging!Logger.BeginScope<!T0>',\n        'Microsoft.Extensions.Logging!LoggerFactoryScopeProvider.Push',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'System.Threading!AsyncLocalValueMap.TwoElementAsyncLocalValueMap.Set',\n        'Microsoft.AspNetCore.Http!DefaultHttpContextFactory.Create',\n        'Microsoft.AspNetCore.Http!DefaultHttpContext..ctor',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.DisposeContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.LogRequestFinished',\n        'Microsoft.Extensions.Logging!Logger.Log<!T0>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!T0>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!T0>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!T0>',\n        'Microsoft.AspNetCore.Hosting!HostingRequestFinishedLog.ToString',\n        'System!Number.FormatDouble',\n        'System.Text!ValueStringBuilder.ToString',\n        'System!Span<System!Char>.ToString',\n        'System!String.Ctor',\n        'System!Number.UInt32ToDecStr',\n        'System!String.Replace',\n        'System!String.Substring',\n        'System.Runtime.CompilerServices!DefaultInterpolatedStringHandler.ToStringAndClear',\n        'System!String.Ctor',\n        'System.Text!StringBuilder.ToString',\n        'System.Text!StringBuilder.set_Length',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.StopActivity',\n        'System.Diagnostics!Activity.Stop',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'System.Threading!AsyncLocalValueMap.TwoElementAsyncLocalValueMap.Set',\n        'Microsoft.Extensions.Logging!LoggerFactoryScopeProvider.Scope.Dispose',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TryParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.ParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TakeMessageHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.TryTakeSingleHeader',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.OnHeader',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpRequestHeaders.Append',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!HttpUtilities.GetRequestHeaderString',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!StringUtilities.GetAsciiOrUTF8StringNonNullCharacters',\n        'System!String.Create<System!IntPtr>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TakeStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnOriginFormTarget',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!StringUtilities.GetAsciiStringNonNullCharacters',\n        'System!String.Create<System!IntPtr>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.InitializeBodyControl',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!BodyControl..ctor',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!ValueTaskAwaiter, !<ProcessRequests>d__223>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ProcessRequests>d__223>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!TaskAwaiter, !<ProcessRequestsAsync>d__222>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ProcessRequestsAsync>d__222>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.OnHeartbeat',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!TaskAwaiter, !<ProcessRequestsAsync>d__12>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ProcessRequestsAsync>d__12>',\n        'System.Threading!CancellationToken.Register',\n        'System.Threading!CancellationTokenSource.Register',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnectionMiddleware<TContext>.OnConnectionAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.BeginConnectionScope',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!TimeoutControl..ctor',\n        'Microsoft.Extensions.Logging!Logger.BeginScope<!T0>',\n        'Microsoft.Extensions.Logging!LoggerFactoryScopeProvider.Push',\n        'System.Threading!ExecutionContext.SetLocalValue',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.AwaitUnsafeOnCompleted<System.Runtime.CompilerServices!TaskAwaiter, !<ExecuteAsync>d__6>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<ExecuteAsync>d__6>',\n        'System.Threading!ThreadPoolWorkQueue.Dispatch',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!IOQueue.System.Threading.IThreadPoolWorkItem.Execute',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<System.Threading.Tasks!VoidTaskResult, Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoSend>d__28>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoSend>d__28.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.Shutdown',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<>c.<FireConnectionClosed>b__29_0',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.CancelConnectionClosedToken',\n        'System.Threading!CancellationTokenSource.ExecuteCallbackHandlers',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.OnConnectionClosed',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnInputOrOutputCompleted',\n        'System.Net.Sockets!SocketAsyncEngine.System.Threading.IThreadPoolWorkItem.Execute',\n        'System.Net.Sockets!Socket.AwaitableSocketAsyncEventArgs.OnCompleted',\n        'System.Net.Sockets!Socket.AwaitableSocketAsyncEventArgs.InvokeContinuation',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionListener.<AcceptAsync>d__10.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionContextFactory.Create',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection..ctor',\n        'System.IO.Pipelines!DuplexPipe.CreateConnectionPair',\n        'System.IO.Pipelines!Pipe..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.Start',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.DoReceive',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<DoReceive>d__27>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoReceive>d__27.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketReceiver.WaitForDataAsync',\n        'System.Net.Sockets!Socket.ReceiveAsync',\n        'System.Net.Sockets!SocketAsyncContext..ctor',\n        'System.Net.Sockets!SocketAsyncEventArgs.DoOperationReceive',\n        'System.Net.Sockets!SocketAsyncContext.ReceiveAsync',\n        'System.Net.Sockets!SocketAsyncContext.OperationQueue<TOperation>.StartAsyncOperation',\n        'System.Net.Sockets!SocketAsyncContext.TryRegister',\n        'System.Net.Sockets!SocketAsyncEngine.TryRegisterSocket',\n        'System.Net.Sockets!SocketAsyncEngine.TryRegisterCore',\n        'System.Collections.Concurrent!ConcurrentDictionary<System!IntPtr, System.Net.Sockets!SocketAsyncEngine.SocketAsyncContextWrapper>.TryAddInternal',\n        'System.IO.Pipelines!Pipe.GetMemory',\n        'System.IO.Pipelines!Pipe.AllocateWriteHeadSynchronized',\n        'System.IO.Pipelines!Pipe.CreateSegmentUnsynchronized',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<DoReceive>d__27>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.DoSend',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<DoSend>d__28>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoSend>d__28.MoveNext',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<DoSend>d__28>',\n        'System.Net.Sockets!Socket.get_LocalEndPoint',\n        'System.Net.Sockets!IPEndPointExtensions.Create',\n        'System.Net.Internals!SocketAddress.GetIPEndPoint',\n        'System.Net.Internals!SocketAddress.GetIPAddress',\n        'System.Net.Sockets!IPEndPointExtensions.Serialize',\n        'System.Threading.Tasks!Task<TResult>.TrySetResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!ConnectionDispatcher.<>c__DisplayClass8_0.<<StartAcceptingConnectionsCore>g__AcceptConnectionsAsync|0>d<T>.MoveNext',\n        'Microsoft.AspNetCore.Connections!TransportConnection.Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<!T0>',\n        'System.Collections.Generic!List<T>.AddWithResize',\n        'System.Collections.Generic!List<T>.set_Capacity',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection<T>..ctor',\n        'Microsoft.AspNetCore.Connections!TransportConnection.Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<!T0>',\n        'Microsoft.AspNetCore.Connections!TransportConnection.ExtraFeatureSet',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!TransportConnectionManager.AddConnection',\n        'Microsoft.AspNetCore.Connections!TransportConnection.get_ConnectionId',\n        'System!String.Create<System!Int64>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!ConnectionManager.AddConnection',\n        'System.Collections.Concurrent!ConcurrentDictionary<TKey, TKey>.TryAddInternal',\n        'System.Collections.Concurrent!ConcurrentDictionary<TKey, TKey>.TryAddInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!TransportManager.GenericConnectionListener.AcceptAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionListener.AcceptAsync',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<AcceptAsync>d__10>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets!SocketConnectionListener.<AcceptAsync>d__10.MoveNext',\n        'System.Net.Sockets!Socket.AwaitableSocketAsyncEventArgs.AcceptAsync',\n        'System.Net.Sockets!Socket.AcceptAsync',\n        'System.Net.Sockets!SocketAsyncEventArgs.DoOperationAccept',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<TResult>.GetStateMachineBox<!<AcceptAsync>d__10>',\n        'System.Net.Sockets!SocketAsyncEventArgs.AcceptCompletionCallback',\n        'System.Net.Sockets!SocketAsyncEventArgs.FinishOperationSyncSuccess',\n        'System.Net.Sockets!IPEndPointExtensions.Create',\n        'System.Net.Internals!SocketAddress.GetIPEndPoint',\n        'System.Net.Internals!SocketAddress.GetIPAddress',\n        'System.Net!IPAddress..ctor',\n        'System.Net.Sockets!IPEndPointExtensions.Serialize',\n        'System.Net.Internals!SocketAddress..ctor',\n        'System.Net.Internals!SocketAddress..ctor',\n        'System.Net.Sockets!SocketAsyncEventArgs.FinishOperationAccept',\n        'System.Net.Sockets!IPEndPointExtensions.Create',\n        'System.Net.Internals!SocketAddress.GetIPEndPoint',\n        'System.Net.Internals!SocketAddress.GetIPAddress',\n        'System.Net!IPAddress..ctor',\n        'System.Net.Sockets!SocketPal.CreateSocket',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<System.Threading.Tasks!VoidTaskResult, Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoReceive>d__27>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DoReceive>d__27.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.FireConnectionClosed',\n        'System.Threading!ThreadPool.UnsafeQueueUserWorkItem<!T0>',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunFromThreadPoolDispatchLoop',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequests>d__223<TContext>.MoveNext',\n        'Microsoft.AspNetCore.HostFiltering!HostFilteringMiddleware.Invoke',\n        'Microsoft.AspNetCore.Routing!EndpointMiddleware.Invoke',\n        'Example!Program.<>c__DisplayClass0_0.<Main>b__0',\n        'Example!BikeService.Order',\n        'Example!OrderService.FindNearestVehicle',\n        'Pyroscope!LabelsWrapper.Do',\n        'Pyroscope!Profiler.get_Instance',\n        'Microsoft.AspNetCore.Http!RequestDelegateFactory.ExecuteWriteStringResponseAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!HttpResponseWritingExtensions.WriteAsync',\n        'Microsoft.AspNetCore.Http!DefaultHttpResponse.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature.StartAsync',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1OutputProducer.WriteResponseHeaders',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.PipeWriterHelpers!ConcurrentPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.DefaultPipeWriter.GetSpan',\n        'System.IO.Pipelines!Pipe.AllocateWriteHeadSynchronized',\n        'System.IO.Pipelines!Pipe.CreateSegmentUnsynchronized',\n        'Microsoft.Extensions.Logging!LoggerMessage.<>c__DisplayClass10_0<T1>.<Define>g__Log|0',\n        'Microsoft.Extensions.Logging!Logger<T>.Microsoft.Extensions.Logging.ILogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!LogValues>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!LogValues>',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues.<>c<T0>.<.cctor>b__12_0',\n        'Microsoft.Extensions.Logging!LoggerMessage.LogValues<T0>.ToString',\n        'System!String.FormatHelper',\n        'System!Span<System!Char>.ToString',\n        'System!String.Ctor',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.CreateContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.BeginRequest',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.RequestScope',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.Log.HostingLogScope..ctor',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpRequestIdentifierFeature.get_TraceIdentifier',\n        'System!String.Create<System!ValueTuple>',\n        'Microsoft.AspNetCore.Http!DefaultHttpContextFactory.Create',\n        'Microsoft.AspNetCore.Http!DefaultHttpContext..ctor',\n        'Microsoft.AspNetCore.Hosting!HostingApplication.DisposeContext',\n        'Microsoft.AspNetCore.Hosting!HostingApplicationDiagnostics.LogRequestFinished',\n        'Microsoft.Extensions.Logging!Logger.Log<!T0>',\n        'Microsoft.Extensions.Logging!Logger.<Log>g__LoggerLog|12_0<!T0>',\n        'Microsoft.Extensions.Logging.Console!ConsoleLogger.Log<!T0>',\n        'Microsoft.Extensions.Logging.Console!SimpleConsoleFormatter.Write<!T0>',\n        'Microsoft.AspNetCore.Hosting!HostingRequestFinishedLog.ToString',\n        'System!Number.UInt32ToDecStr',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TryParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.ParseRequest',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.TakeStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpParser<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1ParsingHandler>.ParseRequestLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnStartLine',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!Http1Connection.OnOriginFormTarget',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!StringUtilities.GetAsciiStringNonNullCharacters',\n        'System!String.Create<System!IntPtr>',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.InitializeBodyControl',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!BodyControl..ctor',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.SetResult',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.SetExistingTaskResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http!HttpProtocol.<ProcessRequestsAsync>d__222<TContext>.MoveNext',\n        'System.Threading.Tasks!Task<System.Threading.Tasks!VoidTaskResult>.TrySetResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal!HttpConnection.<ProcessRequestsAsync>d__12<TContext>.MoveNext',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.SetExistingTaskResult',\n        'System.Threading.Tasks!Task.RunContinuations',\n        'System.Threading.Tasks!AwaitTaskContinuation.RunOrScheduleAction',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder.AsyncStateMachineBox<TResult, TResult>.MoveNext',\n        'System.Threading!ExecutionContext.RunInternal',\n        'Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure!KestrelConnection.<ExecuteAsync>d__6<T>.MoveNext',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.DisposeAsync',\n        'System.Runtime.CompilerServices!AsyncMethodBuilderCore.Start<!<DisposeAsync>d__26>',\n        'Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal!SocketConnection.<DisposeAsync>d__26.MoveNext',\n        'System.Runtime.CompilerServices!AsyncTaskMethodBuilder<System.Threading.Tasks!VoidTaskResult>.GetStateMachineBox<!<DisposeAsync>d__26>',\n        'System.Threading!UnmanagedThreadPoolWorkItem.System.Threading.IThreadPoolWorkItem.Execute',\n        'System.Threading!TimerQueue.FireNextTimers',\n        'System.Threading!TimerQueueTimer.Fire',\n        'Microsoft.Extensions.FileProviders.Physical!PhysicalFilesWatcher.RaiseChangeEvents',\n        'System.Threading!ThreadPoolWorkQueueThreadLocals.Finalize',\n        'System.Threading!ThreadPoolWorkQueue.WorkStealingQueueList.Remove',\n      ],\n    },\n    {\n      name: 'self',\n      values: [\n        0, 0, 0, 0, 0, 0, 12, 4, 0, 0, 0, 0, 8, 0, 0, 17, 3, 12, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 15, 2, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 8, 7, 0, 1, 3, 2, 1, 0, 1,\n        3, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 5, 12, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0,\n        0, 0, 0, 0, 0, 0, 0, 10, 0, 1, 0, 3, 2, 0, 0, 0, 7, 7, 1, 1, 0, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,\n        0, 0, 0, 0, 0, 0, 15, 14, 14, 4, 0, 0, 0, 0, 0, 0, 3, 9, 3, 0, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 6, 0, 0, 2, 3,\n        1, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 2, 5, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 5, 0, 3,\n        2, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 1,\n      ],\n    },\n    {\n      name: 'value',\n      values: [\n        378, 12, 12, 12, 12, 12, 12, 365, 230, 230, 230, 230, 8, 206, 206, 206, 15, 12, 26, 139, 139, 139, 136, 136,\n        136, 42, 42, 3, 3, 2, 0, 1, 1, 1, 1, 1, 0, 4, 4, 2, 0, 1, 1, 1, 1, 1, 1, 9, 9, 7, 5, 4, 4, 0, 0, 0, 3, 3, 1, 2,\n        2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 22, 22, 22, 22, 22, 7, 7, 7, 7, 7, 7, 15, 42, 32, 3, 3, 3, 3, 14, 13, 13,\n        13, 5, 5, 0, 5, 4, 1, 1, 8, 11, 4, 1, 3, 4, 2, 1, 1, 8, 5, 29, 26, 25, 25, 25, 12, 12, 2, 2, 2, 2, 0, 1, 4, 5,\n        5, 12, 1, 3, 3, 3, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 10, 10, 1, 1, 3, 3, 2,\n        0, 0, 7, 7, 7, 1, 1, 6, 6, 6, 1, 1, 131, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 117, 97, 97, 97, 97, 97, 73, 32, 18,\n        4, 26, 20, 20, 20, 17, 17, 3, 14, 5, 2, 2, 2, 2, 2, 1, 1, 1, 2, 6, 6, 6, 6, 6, 5, 5, 3, 1, 18, 18, 18, 18, 18,\n        18, 3, 3, 3, 7, 2, 2, 5, 3, 0, 0, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 20, 20, 2, 2, 1, 0, 8, 3, 3, 10, 6, 6, 5, 2,\n        2, 0, 0, 0, 0, 0, 10, 10, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1,\n      ],\n    },\n    {\n      name: 'selfRight',\n      values: [\n        0, 0, 0, 0, 0, 0, 16, 5, 0, 0, 0, 0, 1, 0, 0, 19, 2, 8, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n        1, 0, 0, 1, 1, 0, 2, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 11, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 7, 3, 0, 3, 2, 2, 0, 1, 1,\n        4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 0, 4, 13, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,\n        0, 0, 0, 0, 0, 1, 1, 4, 0, 5, 0, 1, 0, 0, 1, 0, 7, 9, 3, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n        0, 0, 0, 0, 0, 0, 4, 12, 12, 5, 0, 0, 0, 0, 0, 0, 2, 9, 0, 0, 0, 0, 0, 1, 0, 0, 4, 3, 0, 0, 0, 6, 0, 0, 1, 2, 0,\n        0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 6, 8, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 1, 0, 0, 1, 3,\n        0, 2, 1, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      ],\n    },\n    {\n      name: 'valueRight',\n      values: [\n        316, 16, 16, 16, 16, 16, 16, 300, 190, 190, 190, 190, 1, 173, 173, 173, 10, 8, 28, 108, 108, 108, 107, 107, 107,\n        34, 34, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 7, 7, 4, 1, 2, 2, 2, 2, 2, 1, 9, 9, 9, 8, 8, 8, 3, 2, 2, 5, 5, 0, 0, 0, 0,\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 13, 13, 13, 13, 2, 2, 2, 2, 2, 2, 11, 31, 24, 2, 2, 2, 2, 10, 10, 10, 10, 3,\n        3, 1, 2, 2, 0, 0, 7, 8, 5, 3, 2, 4, 2, 2, 1, 6, 2, 28, 24, 24, 24, 24, 11, 11, 1, 1, 1, 1, 1, 2, 3, 4, 4, 13, 0,\n        1, 1, 1, 1, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 5, 4, 5, 5, 1, 1, 0, 1, 1, 7, 7, 9, 3, 0,\n        4, 4, 2, 0, 0, 105, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 100, 87, 87, 87, 87, 87, 58, 29, 17, 5, 25, 19, 19, 19, 12,\n        12, 2, 10, 1, 1, 1, 1, 1, 1, 4, 4, 4, 3, 6, 6, 6, 6, 3, 3, 3, 2, 0, 26, 26, 26, 26, 26, 26, 1, 1, 1, 14, 6, 6,\n        8, 4, 2, 2, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 3, 10, 10, 1, 1, 1, 1, 1, 1, 1, 8, 3, 3, 1, 0, 2, 3, 3, 3, 3, 3, 3, 3,\n        3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      ],\n    },\n  ],\n};\n","import { ComponentType } from 'react';\nimport { Observable } from 'rxjs';\n\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceJsonData,\n  DataSourceOptionsType,\n  DataSourceQueryType,\n  QueryEditorProps,\n} from './datasource';\nimport { DataQuery } from './query';\n\n/**\n * Enum with the different variable support types\n */\nexport enum VariableSupportType {\n  Legacy = 'legacy',\n  Standard = 'standard',\n  Custom = 'custom',\n  Datasource = 'datasource',\n}\n\n/**\n * Base class for VariableSupport classes\n */\nexport abstract class VariableSupportBase<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataSourceQueryType<DSType>,\n  TOptions extends DataSourceJsonData = DataSourceOptionsType<DSType>,\n> {\n  abstract getType(): VariableSupportType;\n\n  /**\n   * Define this method in the config if you want to pre-populate the editor with a default query.\n   */\n  getDefaultQuery?(): Partial<TQuery>;\n}\n\n/**\n * Extend this class in a data source plugin to use the standard query editor for Query variables\n */\nexport abstract class StandardVariableSupport<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataSourceQueryType<DSType>,\n  TOptions extends DataSourceJsonData = DataSourceOptionsType<DSType>,\n> extends VariableSupportBase<DSType, TQuery, TOptions> {\n  getType(): VariableSupportType {\n    return VariableSupportType.Standard;\n  }\n\n  abstract toDataQuery(query: StandardVariableQuery): TQuery;\n  query?(request: DataQueryRequest<TQuery>): Observable<DataQueryResponse>;\n}\n\n/**\n * Extend this class in a data source plugin to use a customized query editor for Query variables\n */\nexport abstract class CustomVariableSupport<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  VariableQuery extends DataQuery = any,\n  TQuery extends DataQuery = DataSourceQueryType<DSType>,\n  TOptions extends DataSourceJsonData = DataSourceOptionsType<DSType>,\n> extends VariableSupportBase<DSType, TQuery, TOptions> {\n  getType(): VariableSupportType {\n    return VariableSupportType.Custom;\n  }\n\n  abstract editor: ComponentType<QueryEditorProps<DSType, TQuery, TOptions, VariableQuery>>;\n\n  /**\n   * This can return data in various formats as DataQueryResponse allows multiple types. In general though the\n   * assumption is that there will be a string Field or value in an Array of objects that will be taken as the possible\n   * variable values. You can also use this type directly MetricFindValue or just use text/value/expendable fields/keys\n   * in the response.\n   * @param request\n   */\n  abstract query(request: DataQueryRequest<VariableQuery>): Observable<DataQueryResponse>;\n}\n\n/**\n * Extend this class in a data source plugin to use the query editor in the data source plugin for Query variables\n */\nexport abstract class DataSourceVariableSupport<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataSourceQueryType<DSType>,\n  TOptions extends DataSourceJsonData = DataSourceOptionsType<DSType>,\n> extends VariableSupportBase<DSType, TQuery, TOptions> {\n  getType(): VariableSupportType {\n    return VariableSupportType.Datasource;\n  }\n}\n\n/**\n * Defines the standard DatQuery used by data source plugins that implement StandardVariableSupport\n */\nexport interface StandardVariableQuery extends DataQuery {\n  query: string;\n}\n","import { StandardVariableQuery, StandardVariableSupport } from '@grafana/data';\n\nimport { TestData, TestDataQueryType } from './dataquery.gen';\nimport { TestDataDataSource } from './datasource';\n\nexport class TestDataVariableSupport extends StandardVariableSupport<TestDataDataSource> {\n  toDataQuery(query: StandardVariableQuery): TestData {\n    return {\n      refId: 'TestDataDataSource-QueryVariable',\n      stringInput: query.query,\n      scenarioId: TestDataQueryType.VariablesQuery,\n      csvWave: undefined,\n    };\n  }\n}\n","import { from, merge, Observable, of, throwError } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport {\n  AnnotationEvent,\n  ArrayDataFrame,\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataTopic,\n  LiveChannelScope,\n  LoadingState,\n  TimeRange,\n  ScopedVars,\n  toDataFrame,\n  MutableDataFrame,\n  AnnotationQuery,\n  getSearchFilterScopedVar,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getBackendSrv, getGrafanaLiveSrv, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { Scenario, TestData, TestDataQueryType } from './dataquery.gen';\nimport { queryMetricTree } from './metricTree';\nimport { generateRandomEdges, generateRandomNodes, savedNodesResponse } from './nodeGraphUtils';\nimport { runStream } from './runStreams';\nimport { flameGraphData, flameGraphDataDiff } from './testData/flameGraphResponse';\nimport { TestDataVariableSupport } from './variables';\n\nexport class TestDataDataSource extends DataSourceWithBackend<TestData> {\n  scenariosCache?: Promise<Scenario[]>;\n\n  constructor(\n    instanceSettings: DataSourceInstanceSettings,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.variables = new TestDataVariableSupport();\n    this.annotations = {\n      getDefaultQuery: () => ({ scenarioId: TestDataQueryType.Annotations, lines: 10 }),\n\n      // Make sure annotations have scenarioId set\n      prepareAnnotation: (old: AnnotationQuery<TestData>) => {\n        if (old.target?.scenarioId?.length) {\n          return old;\n        }\n        return {\n          ...old,\n          target: {\n            refId: 'Anno',\n            scenarioId: TestDataQueryType.Annotations,\n            lines: 10,\n          },\n        };\n      },\n    };\n  }\n\n  getDefaultQuery(): Partial<TestData> {\n    return {\n      scenarioId: TestDataQueryType.RandomWalk,\n      seriesCount: 1,\n    };\n  }\n\n  query(options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const backendQueries: TestData[] = [];\n    const streams: Array<Observable<DataQueryResponse>> = [];\n\n    // Start streams and prepare queries\n    for (const target of options.targets) {\n      if (target.hide) {\n        continue;\n      }\n\n      this.resolveTemplateVariables(target, options.scopedVars);\n\n      switch (target.scenarioId) {\n        case 'live':\n          streams.push(runGrafanaLiveQuery(target, options));\n          break;\n        case 'streaming_client':\n          streams.push(runStream(target, options));\n          break;\n        case 'grafana_api':\n          streams.push(runGrafanaAPI(target, options));\n          break;\n        case TestDataQueryType.Annotations:\n          streams.push(this.annotationDataTopicTest(target, options));\n          break;\n        case 'variables-query':\n          streams.push(this.variablesQuery(target, options));\n          break;\n        case 'node_graph':\n          streams.push(this.nodesQuery(target, options));\n          break;\n        case 'flame_graph':\n          streams.push(this.flameGraphQuery(target));\n          break;\n        case 'trace':\n          streams.push(this.trace(options));\n          break;\n        case 'raw_frame':\n          streams.push(this.rawFrameQuery(target, options));\n          break;\n        case 'server_error_500':\n          // this now has an option where it can return/throw an error from the frontend.\n          // if it doesn't, send it to the backend where it might panic there :)\n          const query = this.serverErrorQuery(target, options);\n          query ? streams.push(query) : backendQueries.push(target);\n          break;\n        // Unusable since 7, removed in 8\n        case 'manual_entry': {\n          let csvContent = 'Time,Value\\n';\n          if (target.points) {\n            for (const point of target.points) {\n              csvContent += `${point[1]},${point[0]}\\n`;\n            }\n          }\n          target.scenarioId = TestDataQueryType.CSVContent;\n          target.csvContent = csvContent;\n        }\n\n        default:\n          backendQueries.push(target);\n      }\n    }\n\n    if (backendQueries.length) {\n      const backendOpts = {\n        ...options,\n        targets: backendQueries,\n      };\n      streams.push(super.query(backendOpts));\n    }\n\n    if (streams.length === 0) {\n      return of({ data: [] });\n    }\n\n    return merge(...streams);\n  }\n\n  resolveTemplateVariables(query: TestData, scopedVars: ScopedVars) {\n    if (query.labels) {\n      query.labels = this.templateSrv.replace(query.labels, scopedVars);\n    }\n    if (query.alias) {\n      query.alias = this.templateSrv.replace(query.alias, scopedVars);\n    }\n    if (query.scenarioId) {\n      query.scenarioId = this.templateSrv.replace(query.scenarioId, scopedVars) as TestDataQueryType;\n    }\n    if (query.stringInput) {\n      query.stringInput = this.templateSrv.replace(query.stringInput, scopedVars);\n    }\n    if (query.csvContent) {\n      query.csvContent = this.templateSrv.replace(query.csvContent, scopedVars);\n    }\n    if (query.rawFrameContent) {\n      query.rawFrameContent = this.templateSrv.replace(query.rawFrameContent, scopedVars);\n    }\n  }\n\n  applyTemplateVariables(query: TestData, scopedVars: ScopedVars): TestData {\n    this.resolveTemplateVariables(query, scopedVars);\n    return query;\n  }\n\n  annotationDataTopicTest(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const events = this.buildFakeAnnotationEvents(req.range, target.lines ?? 10);\n    const dataFrame = new ArrayDataFrame(events);\n    dataFrame.meta = { dataTopic: DataTopic.Annotations };\n    return of({ key: target.refId, data: [dataFrame] }).pipe(delay(100));\n  }\n\n  buildFakeAnnotationEvents(range: TimeRange, count: number): AnnotationEvent[] {\n    let timeWalker = range.from.valueOf();\n    const to = range.to.valueOf();\n    const events = [];\n    const step = (to - timeWalker) / count;\n\n    for (let i = 0; i < count; i++) {\n      events.push({\n        time: timeWalker,\n        text: 'This is the text, <a href=\"https://grafana.com\">Grafana.com</a>',\n        tags: ['text', 'server'],\n      });\n      timeWalker += step;\n    }\n\n    return events;\n  }\n\n  getQueryDisplayText(query: TestData) {\n    const scenario = query.scenarioId ?? 'Default scenario';\n\n    if (query.alias) {\n      return scenario + ' as ' + query.alias;\n    }\n\n    return scenario;\n  }\n\n  testDatasource() {\n    return Promise.resolve({\n      status: 'success',\n      message: 'Data source is working',\n    });\n  }\n\n  getScenarios(): Promise<Scenario[]> {\n    if (!this.scenariosCache) {\n      this.scenariosCache = this.getResource('scenarios');\n    }\n\n    return this.scenariosCache;\n  }\n\n  variablesQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const query = target.stringInput ?? '';\n    const interpolatedQuery = this.templateSrv.replace(query, getSearchFilterScopedVar({ query, wildcardChar: '*' }));\n    const children = queryMetricTree(interpolatedQuery);\n    const items = children.map((item) => ({ value: item.name, text: item.name }));\n    const dataFrame = new ArrayDataFrame(items);\n\n    return of({ data: [dataFrame] }).pipe(delay(100));\n  }\n\n  nodesQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const type = target.nodes?.type || 'random';\n    let frames: DataFrame[];\n    switch (type) {\n      case 'random':\n        frames = generateRandomNodes(target.nodes?.count);\n        break;\n      case 'response':\n        frames = savedNodesResponse();\n        break;\n      case 'random edges':\n        frames = [generateRandomEdges(target.nodes?.count)];\n        break;\n      default:\n        throw new Error(`Unknown node_graph sub type ${type}`);\n    }\n\n    return of({ data: frames }).pipe(delay(100));\n  }\n\n  flameGraphQuery(target: TestData): Observable<DataQueryResponse> {\n    const data = target.flamegraphDiff ? flameGraphDataDiff : flameGraphData;\n    return of({ data: [{ ...data, refId: target.refId }] }).pipe(delay(100));\n  }\n\n  trace(options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    const frame = new MutableDataFrame({\n      meta: {\n        preferredVisualisationType: 'trace',\n      },\n      fields: [\n        { name: 'traceID' },\n        { name: 'spanID' },\n        { name: 'parentSpanID' },\n        { name: 'operationName' },\n        { name: 'serviceName' },\n        { name: 'serviceTags' },\n        { name: 'startTime' },\n        { name: 'duration' },\n        { name: 'logs' },\n        { name: 'references' },\n        { name: 'tags' },\n        { name: 'kind' },\n        { name: 'statusCode' },\n      ],\n    });\n    const numberOfSpans = options.targets[0].spanCount || 10;\n    const spanIdPrefix = '75c665dfb68';\n    const start = Date.now() - 1000 * 60 * 30;\n    const kinds = ['client', 'server', ''];\n    const statusCodes = [0, 1, 2];\n\n    for (let i = 0; i < numberOfSpans; i++) {\n      frame.add({\n        traceID: spanIdPrefix + '10000',\n        spanID: spanIdPrefix + (10000 + i),\n        parentSpanID: i === 0 ? '' : spanIdPrefix + 10000,\n        operationName: `Operation ${i}`,\n        serviceName: `Service ${i}`,\n        startTime: start + i * 100,\n        duration: 300,\n        tags: [\n          { key: 'http.method', value: 'POST' },\n          { key: 'http.status_code', value: 200 },\n          { key: 'http.url', value: `Service${i}:80` },\n        ],\n        serviceTags: [\n          { key: 'client-uuid', value: '6238bacefsecba865' },\n          { key: 'service.name', value: `Service${i}` },\n          { key: 'ip', value: '0.0.0.1' },\n          { key: 'latest_version', value: false },\n        ],\n        logs:\n          i % 4 === 0\n            ? [\n                { timestamp: start + i * 100, fields: [{ key: 'msg', value: 'Service updated' }] },\n                { timestamp: start + i * 100 + 200, fields: [{ key: 'host', value: 'app' }] },\n              ]\n            : [],\n        kind: i === 0 ? 'client' : kinds[Math.floor(Math.random() * kinds.length)],\n        statusCode: statusCodes[Math.floor(Math.random() * statusCodes.length)],\n      });\n    }\n\n    return of({ data: [frame] }).pipe(delay(100));\n  }\n\n  rawFrameQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n    try {\n      const data = JSON.parse(target.rawFrameContent ?? '[]').map((v: any) => {\n        const f = toDataFrame(v);\n        f.refId = target.refId;\n        return f;\n      });\n      return of({ data, state: LoadingState.Done }).pipe(delay(100));\n    } catch (ex) {\n      return of({\n        data: [],\n        error: ex instanceof Error ? ex : new Error('Unkown error'),\n      }).pipe(delay(100));\n    }\n  }\n\n  serverErrorQuery(target: TestData, options: DataQueryRequest<TestData>): Observable<DataQueryResponse> | null {\n    const { errorType } = target;\n\n    if (errorType === 'server_panic') {\n      return null;\n    }\n\n    const stringInput = target.stringInput ?? '';\n    if (stringInput === '') {\n      if (errorType === 'frontend_exception') {\n        throw new Error('Scenario threw an exception in the frontend because the input was empty.');\n      } else {\n        return throwError(() => new Error('Scenario returned an error because the input was empty.'));\n      }\n    }\n\n    return null;\n  }\n}\n\nfunction runGrafanaAPI(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n  const url = `/api/${target.stringInput}`;\n  return from(\n    getBackendSrv()\n      .get(url)\n      .then((res) => {\n        const frame = new ArrayDataFrame(res);\n        return {\n          state: LoadingState.Done,\n          data: [frame],\n        };\n      })\n  );\n}\n\nlet liveQueryCounter = 1000;\n\nfunction runGrafanaLiveQuery(target: TestData, req: DataQueryRequest<TestData>): Observable<DataQueryResponse> {\n  if (!target.channel) {\n    throw new Error(`Missing channel config`);\n  }\n  return getGrafanaLiveSrv().getDataStream({\n    addr: {\n      scope: LiveChannelScope.Plugin,\n      namespace: 'testdata',\n      path: target.channel,\n    },\n    key: `testStream.${liveQueryCounter++}`,\n  });\n}\n","import { DataSourcePlugin } from '@grafana/data';\n\nimport { ConfigEditor } from './ConfigEditor';\nimport { MetaDataInspector } from './MetaDataInspector';\nimport { QueryEditor } from './QueryEditor';\nimport { TestInfoTab } from './TestInfoTab';\nimport { TestDataDataSource } from './datasource';\n\nexport const plugin = new DataSourcePlugin(TestDataDataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setMetadataInspector(MetaDataInspector)\n  .addConfigPage({\n    title: 'Setup',\n    icon: 'list-ul',\n    body: TestInfoTab,\n    id: 'setup',\n  });\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport memoize from 'micro-memoize';\nimport React, { useContext } from 'react';\n\nimport { GrafanaTheme, GrafanaTheme2, ThemeContext } from '@grafana/data';\n\nimport { Themeable, Themeable2 } from '../types/theme';\n\nimport { stylesFactory } from './stylesFactory';\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\ntype Subtract<T, K> = Omit<T, keyof K>;\n\n/**\n * Mock used in tests\n */\nlet ThemeContextMock: React.Context<GrafanaTheme2> | null = null;\n\n// Used by useStyles()\nexport const memoizedStyleCreators = new WeakMap();\n\n/** @deprecated use withTheme2 */\n/** @public */\nexport const withTheme = <P extends Themeable, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable>> = (props) => {\n    /**\n     * If theme context is mocked, let's use it instead of the original context\n     * This is used in tests when mocking theme using mockThemeContext function defined below\n     */\n    const ContextComponent = ThemeContextMock || ThemeContext;\n    return (\n      // @ts-ignore\n      <ContextComponent.Consumer>{(theme) => <Component {...props} theme={theme.v1} />}</ContextComponent.Consumer>\n    );\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\n/** @alpha */\nexport const withTheme2 = <P extends Themeable2, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable2>> = (props) => {\n    /**\n     * If theme context is mocked, let's use it instead of the original context\n     * This is used in tests when mocking theme using mockThemeContext function defined below\n     */\n    const ContextComponent = ThemeContextMock || ThemeContext;\n    return (\n      // @ts-ignore\n      <ContextComponent.Consumer>{(theme) => <Component {...props} theme={theme} />}</ContextComponent.Consumer>\n    );\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\n/** @deprecated use useTheme2 */\n/** @public */\nexport function useTheme(): GrafanaTheme {\n  return useContext(ThemeContextMock || ThemeContext).v1;\n}\n\n/** @public */\nexport function useTheme2(): GrafanaTheme2 {\n  return useContext(ThemeContextMock || ThemeContext);\n}\n\n/**\n * Hook for using memoized styles with access to the theme.\n *\n * NOTE: For memoization to work, you need to ensure that the function\n * you pass in doesn't change, or only if it needs to. (i.e. declare\n * your style creator outside of a function component or use `useCallback()`.)\n * */\n/** @deprecated use useStyles2 */\n/** @public */\nexport function useStyles<T>(getStyles: (theme: GrafanaTheme) => T) {\n  const theme = useTheme();\n\n  let memoizedStyleCreator: typeof getStyles = memoizedStyleCreators.get(getStyles);\n\n  if (!memoizedStyleCreator) {\n    memoizedStyleCreator = stylesFactory(getStyles);\n    memoizedStyleCreators.set(getStyles, memoizedStyleCreator);\n  }\n\n  return memoizedStyleCreator(theme);\n}\n\n/**\n * Hook for using memoized styles with access to the theme. Pass additional\n * arguments to the getStyles function as additional arguments to this hook.\n *\n * Prefer using primitive values (boolean, number, string, etc) for\n * additional arguments for better performance\n *\n * ```\n * const getStyles = (theme, isDisabled, isOdd) => {css(...)}\n * [...]\n * const styles = useStyles2(getStyles, true, Boolean(index % 2))\n * ```\n *\n * NOTE: For memoization to work, ensure that all arguments don't change\n * across renders (or only change if they need to)\n *\n * @public\n * */\nexport function useStyles2<T extends unknown[], CSSReturnValue>(\n  getStyles: (theme: GrafanaTheme2, ...args: T) => CSSReturnValue,\n  ...additionalArguments: T\n): CSSReturnValue {\n  const theme = useTheme2();\n\n  let memoizedStyleCreator: typeof getStyles = memoizedStyleCreators.get(getStyles);\n\n  if (!memoizedStyleCreator) {\n    memoizedStyleCreator = memoize(getStyles, { maxSize: 10 }); // each getStyles function will memoize 10 different sets of props\n    memoizedStyleCreators.set(getStyles, memoizedStyleCreator);\n  }\n\n  return memoizedStyleCreator(theme, ...additionalArguments);\n}\n\n/**\n * Enables theme context mocking\n */\n/** @public */\nexport const mockThemeContext = (theme: Partial<GrafanaTheme2>) => {\n  ThemeContextMock = React.createContext(theme as GrafanaTheme2);\n\n  return () => {\n    ThemeContextMock = null;\n  };\n};\n"],"names":["TestDataQueryType","defaultUSAQuery","defaultTestData","makeClassES5Compatible","ES6Class","target","self","argumentsList","PluginState","PluginType","PluginSignatureStatus","PluginSignatureType","PluginErrorCode","PluginIncludeType","GrafanaPlugin","tab","DataSourcePlugin","DataSourceClass","editor","ConfigCtrl","QueryCtrl","AnnotationsQueryCtrl","QueryEditor","ExploreQueryField","QueryEditorHelp","ExploreStartPage","VariableQueryEditor","MetadataInspector","pluginExports","DataSourceApi","instanceSettings","ExploreMode","DataQueryErrorType","LanguageProvider","ConfigEditor","breakpointCSS","theme","prop","getCSS","key","value","getResponsiveStyle","Stack","props","ref","gap","alignItems","justifyContent","direction","wrap","children","grow","shrink","basis","flex","rest","styles","getStyles","val","MetaDataInspector","data","frame","index","useMountedState","mountedRef","get","useAsyncFn","fn","deps","initialState","lastCallId","isMounted","_a","state","set","callback","args","_i","callId","prevState","error","useAsync","InlineFieldRow","className","htmlProps","getChildId","inputId","child","renderOrCallToRender","itemToRender","alwaysMonoIcons","getIconSubDir","name","type","getSvgSize","size","iconRoot","getIconRoot","grafanaPublicPath","getIconStyles","Icon","style","title","iconName","svgSize","svgHgt","svgWid","subDir","svgPath","composedClassName","FieldValidationMessage","horizontal","getFieldValidationMessageStyles","cssName","baseStyle","buildTooltipTheme","tooltipBg","toggletipBorder","tooltipText","tooltipPadding","colorManipulator","Portal","root","forwardedRef","node","portalRoot","getPortalContainer","PortalContainer","RefForwardingPortal","Tooltip","interactive","show","placement","content","controlledVisible","setControlledVisible","tooltipId","handleKeyDown","enterKey","getArrowProps","getTooltipProps","setTooltipRef","setTriggerRef","visible","update","contentIsFunction","handleRef","selectors","info","InlineLabel","tooltip","width","transparent","Component","getInlineLabelStyles","InlineField","label","labelWidth","invalid","loading","disabled","required","htmlFor","labelElement","isIconSize","getAvailableIcons","getFieldTypeIcon","field","getFieldTypeIconName","Spinner","inline","iconClassName","deprecatedStyles","getDeprecatedStyles","DropdownIndicator","selectProps","isOpen","icon","stylesFactory","stylesCreator","cardChrome","hoverColor","color","listItem","listItemSelected","mediaUp","breakpoint","isGrafanaTheme2","focusCss","isTheme2","firstColor","secondColor","getMouseFocusStyles","getFocusStyles","getTooltipContainerStyles","getFocusStyle","sharedInputStyle","borderColor","borderColorHover","background","textColor","autoFillBorder","inputPadding","inputSizes","inputSizesPixels","getPropertiesForButtonSize","Input","addonAfter","addonBefore","prefix","suffix","restProps","prefixRef","prefixRect","useMeasure","suffixRef","suffixRect","getInputStyles","prefixSuffixStaticWidth","prefixSuffix","IndicatorsContainer","InputControl","focused","innerProps","otherProps","getInputControlStyles","withPrefix","IconButton","variant","limitedIconSize","deprecationWarning","ariaLabel","buttonRef","deprecatedAriaLabel","ariaLabelProp","iconType","tooltipPlacement","hoverSize","iconColor","getSelectStyles","MultiValueContainer","MultiValueRemove","SelectContainer","isDisabled","isFocused","getSelectContainerStyles","ScrollIndicators","showScrollTopIndicator","setShowTopScrollIndicator","showScrollBottomIndicator","setShowBottomScrollIndicator","scrollTopMarker","scrollBottomMarker","intersectionObserver","entries","entry","CustomScrollbar","autoHide","autoHideTimeout","setScrollTop","testId","autoHeightMin","autoHeightMax","hideTracksWhenNotNeeded","hideHorizontalTrack","hideVerticalTrack","scrollRefCallback","showScrollIndicators","updateAfterMountMs","scrollTop","onScroll","scrollbar","renderTrack","hideTrack","passedProps","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderView","onScrollStop","SelectMenu","maxHeight","innerRef","VIRTUAL_LIST_ITEM_HEIGHT","VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER","VirtualizedSelectMenu","options","getValue","initialOffset","option","widthEstimate","heightEstimate","SelectMenuOptions","isSelected","renderOptionLabel","onMouseMove","onMouseOver","getSelectOptionGroupStyles","UnthemedSelectOptionGroup","nextProps","expanded","SelectOptionGroup","useDelayedSwitch","duration","delay","delayedValue","setDelayedValue","onStartTime","timeout","timeSpent","turnOff","FadeTransition","CSSTransition","_theme","SlideOutTransition","measurement","SingleValue","FadeWithImage","UnthemedValueContainer","valueChildren","otherChildren","truncatedValues","isMulti","noWrap","ValueContainer","resetSelectStyles","originalStyles","useCustomSelectStyles","base","top","bottom","position","provided","cleanValue","filtered","selectedValue","findSelectedValue","found","omitDescriptions","description","CustomControl","menuIsOpen","onMenuClose","onMenuOpen","allowCustomValue","allowCreateWhileLoading","autoFocus","backspaceRemovesValue","blurInputOnSelect","cacheOptions","closeMenuOnSelect","components","createOptionPosition","defaultOptions","defaultValue","filterOption","formatCreateLabel","getOptionLabel","getOptionValue","inputValue","isClearable","id","isLoading","isOptionDisabled","isSearchable","loadOptions","loadingMessage","maxMenuHeight","minMenuHeight","maxVisibleValues","menuPlacement","menuPosition","menuShouldPortal","noOptionsMessage","onBlur","onChange","onCloseMenu","onCreateOption","onInputChange","onKeyDown","onMenuScrollToBottom","onMenuScrollToTop","onOpenMenu","onFocus","openMenuOnFocus","placeholder","renderControl","showAllSelectedWhenOpen","tabSelectsValue","virtualized","noMultiValueWrap","isValidNewOption","formatOptionLabel","hideSelectedOptions","reactSelectRef","closeToBottom","setCloseToBottom","selectStyles","hasInputValue","setHasInputValue","distance","onChangeWithEmpty","action","ReactSelectComponent","creatableProps","asyncSelectProps","v","selectableValue","hasValue","commonSelectProps","actionMeta","defaultFormatCreateLabel","SelectMenuComponent","CustomIndicatorsContainer","IndicatorSeparator","clearValue","e","input","selectedValuesCount","indicatorChildren","Select","MultiSelect","AsyncSelect","VirtualizedSelect","AsyncVirtualizedSelect","AsyncMultiSelect","Switch","checked","inputProps","getSwitchStyles","switchIdRef","event","InlineSwitch","showLabel","TextArea","getTextAreaStyle","streamingClientFields","types","StreamingClientEditor","query","onSelectChange","min","step","randomWalkFields","testSelectors","RandomWalkEditor","selector","useAsyncDependency","importStatement","ErrorWithStack","errorInfo","LoadingPlaceholder","text","ReactMonacoEditorLazy","dependency","ReactMonacoEditor","CodeEditorSuggestionItemKind","findInsertIndex","line","i","ch","getCompletionItems","monaco","suggestions","range","items","suggestion","mapKinds","sug","registerSuggestions","language","getSuggestions","modelId","model","context","currentLine","UnthemedCodeEditor","customLanguage","onSave","onBeforeEditorMount","onEditorDidMount","languagePromise","oldProps","newLanguage","height","showMiniMap","showLineNumbers","readOnly","monacoOptions","alwaysConsumeMouseWheel","restMonacoOptions","longText","containerStyles","CodeEditor","CSVContentEditor","onSaveCSV","csvContent","CSVFileEditor","onChangeFileName","files","f","allButtonVariants","allButtonFills","Button","fill","fullWidth","getButtonStyles","button","LinkButton","linkButtonStyles","iconOnly","padding","fontSize","variantStyles","getPropertiesForVariant","disabledStyles","getPropertiesForDisabled","focusStyle","paddingMinusBorder","getButtonVariantStyles","outlineBorderColor","hoverBorderColor","clearButtonStyles","clearLinkButtonStyles","defaultPulseQuery","defaultCSVWaveQuery","defaultQuery","CSVWaveEditor","wave","last","onAdd","valuesCSV","setValuesCSV","labels","setLabels","setName","onAction","onValueChange","evt","CSVWavesEditor","waves","ERROR_OPTIONS","liveTestDataChannels","GrafanaLiveEditor","onChannelChange","NodeGraphEditor","o","item","fields","PredictablePulseEditor","ISO_8601","setLocale","getLocale","getLocaleData","isDateTimeInput","toUtc","formatInput","toDuration","unit","dateTime","dateTimeAsMoment","dateTimeForTimeZone","timezone","result","getWeekdayIndex","day","wd","getWeekdayIndexByEnglishName","setWeekStart","weekStart","dow","FieldType","TIME_SERIES_VALUE_FIELD_NAME","TIME_SERIES_TIME_FIELD_NAME","TIME_SERIES_METRIC_FIELD_NAME","fieldIndexComparer","reverse","values","numericIndexComparer","stringIndexComparer","booleanIndexComparer","timestampIndexComparer","timeIndexComparer","naturalIndexComparer","timeComparer","a","b","falsyComparer","numericComparer","stringComparer","booleanComparer","mult","vA","vB","ArrayDataFrame","source","names","arrayToDataFrame","df","makeFieldFromValues","first","guessFieldTypeForField","ENTITY_MAP","decodeFieldValueEntities","lookup","repl","idx","decodeFieldValueEnums","guessFieldType","guessFieldTypeFromNameAndValue","dataFrameFromJSON","dto","schema","length","max","vals","buffer","origLen","entities","enums","nanos","dataFrameField","dataFrameToJSON","allNanos","hasNanos","display","sfield","convertTableToDataFrame","table","c","disp","row","t","convertTimeSeriesToDataFrame","timeSeries","times","points","point","convertGraphSeriesToDataFrame","graphSeries","x","y","convertJSONDocumentDataToDataFrame","NUMBER","guessFieldTypeFromValue","getFieldTypeFromValue","guessFieldTypes","series","guessDefined","isTableData","isDataFrame","isDataFrameWithValue","toDataFrame","createDataFrame","toLegacyResponseData","rowCount","rows","timeField","timeIndex","getTimeField","valueField","j","config","column","sortDataFrame","sortIndex","fieldComparer","newF","n","reverseDataFrame","revNanos","getDataFrameRow","toDataFrameDTO","toFilteredDataFrameDTO","fieldPredicate","getProcessedDataFrame","dataFrame","getProcessedDataFrames","results","preProcessPanelData","lastResult","annotations","STARTTIME","processedDataFrames","annotationsProcessed","STOPTIME","p","Box","margin","marginX","marginY","marginTop","marginBottom","marginLeft","marginRight","paddingX","paddingY","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","borderStyle","borderRadius","boxShadow","element","Element","customBorderColor","customBackgroundColor","TruncatedText","childElement","isOverflowing","setIsOverflowing","internalRef","resizeObserver","current","getTooltipText","customWeight","weight","customColor","customVariant","Text","truncate","italic","textAlignment","getTextStyles","Alert","onRemove","buttonContent","elevated","bottomSpacing","topSpacing","severity","rolesBySeverity","role","getIconFromSeverity","hasTitle","RawFrameEditor","setError","warning","setWarning","onSaveFrames","rawFrameContent","json","Label","category","labelProps","getLabelStyles","categories","getLegendStyles","Legend","legendProps","FieldSet","renderInput","newValue","SimulationSchemaForm","jsonView","setJsonView","onUpdateTextArea","SimulationQueryEditor","ds","simQuery","simKey","cfgValue","setCfgValue","s","path","onUpdateKey","onUIDChanged","onTickChanged","tick","onTypeChange","onToggleStream","onToggleLast","onSchemaFormChange","res","USAQueryEditor","usaQueryModes","ep","fieldNames","stateNames","labelRegexp","parseLabels","labelsByKey","_","operator","findCommonLabels","labelsSets","acc","findUniqueLabels","commonLabels","uncommonLabels","matchAllLabels","expect","against","formatLabels","withoutBraces","cleanSelector","Registry","init","ext","filter","select","currentOptions","ids","alias","MatcherID","FieldMatcherID","FrameMatcherID","ValueMatcherID","fieldTypeMatcher","allFrames","fieldTypesMatcher","numericMatcher","timeMatcher","getFieldTypeMatchers","LoadingState","preferredVisualizationTypes","NullValueMode","isTruthy","identityObject","isObject","ReducerID","isReducerID","reduceField","reducers","missing","queue","fieldReducers","calcs","reducer","nullValueMode","ignoreNulls","nullAsZero","doStandardCalcs","calculateLastNotNull","calculateLast","calculateFirstNotNull","calculateFirst","calculateStdDev","calculateChangeCount","calculateDistinctCount","isNumberField","currentValue","isFirst","squareSum","runningMean","runningNonNullCount","_oldMean","variance","count","distinct","compareValues","left","op","right","isBooleanReducer","r","fieldValueMatcherInfo","isBoolean","getFrameDisplayName","valueFieldNames","cacheFieldDisplayNames","frames","existingTitle","multipleFrames","displayName","calculateFieldDisplayName","hasConfigTitle","isComparisonSeries","parts","frameNamesDiffer","frameNameAdded","labelsAdded","singleLabelName","getSingleLabelName","allLabels","getUniqueFieldName","dupeCount","foundSelf","otherField","singleName","labelKey","specialMatcher","specialCharEscape","specialCharUnescape","escapeStringForRegex","unEscapeStringFromRegex","stringStartsAsRegEx","str","stringToJsRegex","match","stringToMs","nr","m","h","d","toNumberString","toIntegerOrUndefined","toFloatOrUndefined","toPascalCase","string","escapeRegex","ByNamesMatcherMode","fieldNameMatcher","fallback","fieldNameFallback","multipleFieldNamesMatcher","mode","uniqueNames","matcher","displayText","regexpFieldNameMatcher","pattern","regexp","patternToRegex","fieldsInFrameMatcher","refId","regexpOrMultipleNamesMatcher","regexpMatcher","namesMatcher","frameNameMatcher","regex","getFieldNameMatchers","getFrameNameMatchers","anyFieldMatcher","getFieldMatcher","sub","fieldMatchers","anyFrameMatcher","getFrameMatchers","frameMatchers","allFieldsMatcher","allFramesMatcher","notFieldMatcher","check","notFrameMatcher","alwaysFieldMatcher","alwaysFrameMatcher","neverFieldMatcher","notTimeFieldMatcher","neverFrameMatcher","alwaysFieldMatcherInfo","_option","_options","alwaysFrameMatcherInfo","neverFieldMatcherInfo","neverFrameMatcherInfo","getFieldPredicateMatchers","getFramePredicateMatchers","refIdMatcher","getRefIdMatchers","firstFieldMatcher","firstTimeFieldMatcher","getSimpleFieldMatchers","isEqualValueMatcher","valueIndex","isNotEqualValueMatcher","getEqualValueMatchers","isNullValueMatcher","isNotNullValueMatcher","getNullValueMatchers","isGreaterValueMatcher","isGreaterOrEqualValueMatcher","isLowerValueMatcher","isLowerOrEqualValueMatcher","getNumericValueMatchers","isBetweenValueMatcher","getRangeValueMatchers","regexValueMatcher","getRegexValueMatcher","valueMatchers","getValueMatcher","DataTransformerID","JoinMode","joinByFieldTransformer","ctx","map","joinBy","joined","joinDataFrames","pickBestJoinField","common","getJoinMatcher","maybeSortFrame","fieldIdx","sortByField","isLikelyAscendingVector","frameCopy","joinFieldMatcher","joinIndex","fieldIndex","copy","origin","joinField","nullModes","allData","originalFields","originalFieldsOrderByFrame","fieldsOrder","frameIndex","nullModesFrame","NULL_REMOVE","join","frameFieldsOrder","spanNulls","NULL_RETAIN","NULL_EXPAND","joinOuterTabular","tables","numberOfFields","duplicateHash","tableIdx","joinOnTableField","otherTablesIdx","otherTable","otherTableJoinOnField","joinTableFieldValuesIdx","tableJoinOnValue","allOtherFields","joinedRow","tableFieldValIdx","fieldsIdx","joinRowIdx","otherTableValuesIdx","valIdx","nullExpand","yVals","nullIdxs","alignedLen","xi","lastNullIdx","nullIdx","xVals","ti","xs","len","xIdxs","si","ys","nullMode","yVal","alignedIdx","samples","firstIdx","lastIdx","stride","prevVal","renderLegendFormat","aliasPattern","aliasData","aliasRegex","g1","StreamingFrameAction","PROM_STYLE_METRIC_LABEL","PushMode","optionsOverride","trimValues","dataFrameDTO","numberOfItemsToRemove","getNumberOfItemsToRemove","serialized","assureValuesAreWithinLengthLimit","maxLength","maxDelta","needsMoreLength","needsBiggerDelta","needsToOverrideDefaultInfinityDelta","circPush","newLength","msg","firstField","niceSchemaFields","displayNameFormat","hasSameStructure","sf","isWide","of","ents","labeledTables","transpose","dummyTable","appended","labelCount","parsedLabels","parseLabelsFromField","proto","StreamingDataFrame","opts","getStreamingFrameOptions","streamingDataFrame","vrecs","tableKeys","cols","closestIdx","num","arr","lo","hi","mid","bitwise","kv","getLastStreamingDataFramePacket","pi","newData","deltaIdx","k","nlen","sliceIdx","deltaLookup","low","high","fA","fB","patchArrayVectorProrotypeMethods","makeArrayIndexableVector","property","receiver","vectorToArray","FunctionalVector","iterator","vectorator","transform","predicate","separator","compareFn","start","deleteCount","end","searchElement","fromIndex","thisArg","callbackfn","initialValue","depth","emptyarray","vector","CircularVector","delta","tail","makeFieldParser","MISSING_VALUE","MutableDataFrame","creator","meta","startLength","parser","obj","CircularDataFrame","CSVHeaderStyle","readCSV","csv","CSVReader","ParseState","isName","papacfg","writeValue","makeFieldWriter","displayValue","getHeaderLine","isType","getLocaleDelimiter","toCSV","writers","getRandomLogLevel","getNextWord","words","getRandomLine","defaultStreamQuery","runStream","req","runSignalStream","runLogsStream","runFetchStream","Observable","subscriber","streamId","maxDataPoints","spread","speed","bands","noise","timeoutId","lastSent","addNextRow","time","pushNextEvent","reader","processChunk","response","endpoints","datasource","onRunQuery","scenarioList","hideAlias","onUpdate","currentScenario","scenario","scenarioId","onScenarioChange","sc","onFieldChange","onEndPointChange","onStreamClientChange","onPulseWaveChange","onUSAStatsChange","usa","onCSVWaveChange","csvWave","ErrorEditor","TestInfoTab","DataTopic","AbstractLabelOperator","hasQueryImportSupport","hasQueryExportSupport","SEARCH_FILTER_VARIABLE","containsSearchFilter","getSearchFilterScopedVar","wildcardChar","LiveChannelScope","LiveChannelType","LiveChannelConnectionState","LiveChannelEventType","isLiveChannelStatusEvent","isLiveChannelJoinEvent","isLiveChannelLeaveEvent","isLiveChannelMessageEvent","parseLiveChannelAddress","isValidLiveChannelAddress","addr","toLiveChannelId","buildMetricTree","parent","chars","letter","nodeName","queryTree","queryIndex","nodeQuery","namesToMatch","nameToMatch","queryMetricTree","NodeGraphDataFrameFieldNames","FieldColorModeId","FALLBACK_COLOR","nodes","edges","generateRandomNodes","nodesWithoutMaxEdges","maxEdges","makeRandomNode","sourceIndex","additionalEdges","targetIndex","nodeFields","nodeFrame","edgesFrame","edgesSet","rnd","edge","success","savedNodesResponse","generateRandomEdges","flameGraphData","flameGraphDataDiff","VariableSupportType","VariableSupportBase","StandardVariableSupport","CustomVariableSupport","DataSourceVariableSupport","TestDataVariableSupport","TestDataDataSource","DataSourceWithBackend","templateSrv","old","backendQueries","streams","runGrafanaLiveQuery","runGrafanaAPI","backendOpts","merge","scopedVars","events","timeWalker","to","interpolatedQuery","numberOfSpans","spanIdPrefix","kinds","statusCodes","ex","errorType","throwError","url","from","liveQueryCounter","ThemeContextMock","memoizedStyleCreators","withTheme","WithTheme","ContextComponent","withTheme2","useTheme","useTheme2","useStyles","memoizedStyleCreator","useStyles2","additionalArguments","mockThemeContext"],"sourceRoot":""}