const { createProxyMiddleware } = require('http-proxy-middleware');

module.exports = function (app) {
  const backend = process.env.HTTPS === 'true'
    ? 'https://localhost:6051'
    : 'http://localhost:6050';

  console.log(`âœ… Proxy active â†’ ${backend}`);

  // MATCH routes instead of MOUNTING routes
  app.use(
    createProxyMiddleware({
      target: backend,
      changeOrigin: true,
      secure: false,
      logLevel: 'debug',
      pathFilter: ['/auth', '/api', '/users', '/metrics', '/test'], // ðŸ§  match all routes
      pathRewrite: (path, req) => {
        const rewritten = path;
        console.log(`[REWRITE] original path: ${path} â†’ forwarded as: ${rewritten}`);
        return rewritten;
      },
      onProxyReq: (proxyReq, req) => {
        console.log(`[Proxy] ${req.method} ${req.originalUrl} â†’ ${backend}${req.originalUrl}`);
      },
      onProxyRes: (proxyRes, req, res) => {
        console.log(`[ProxyRes] ${req.method} ${req.originalUrl} â†’ ${proxyRes.statusCode}`);
      },

      onError: (err, req, res) => {
        console.error(`[ProxyError] ${req.method} ${req.originalUrl} â†’ ${err.message}`);
        res.writeHead(500, { 'Content-Type': 'text/plain' });
        res.end('Proxy error: ' + err.message);
      }
    })
  );
};

